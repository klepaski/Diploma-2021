{"version":3,"file":"static/webpack/static\\development\\pages\\profile.js.75c5072fb49e981cccd3.hot-update.js","sources":["webpack:///./components/Profile/UserContent.js"],"sourcesContent":["import React, {useState, useContext, useEffect, useRef} from 'react';\r\nimport Router from 'next/router'\r\nimport moment from 'moment/moment'\r\nimport ImageGallery from \"react-image-gallery\";\r\n\r\nimport {CheckLabel, Title, WhoCard} from \"../../components/Layouts/styledLayouts\";\r\nimport { ContainerDesktop } from '../../components/StyledComponents/Grid'\r\nimport {Wrapper} from \"../../components/StyledComponents/Wrapper\";\r\nimport Header from \"../../components/Header/Header\"\r\nimport { withAuthSync} from '../../utils/auth'\r\nimport {FlexBlock} from \"../../components/StyledComponents/FlexBlock\";\r\nimport {ProfileAvatar} from \"../../components/Profile/styledProfileHeader\";\r\nimport {modifySrc} from \"../../utils/modifySrc\";\r\nimport {Text} from \"../../components/StyledComponents/Text\";\r\nimport {ButtonMinHeight} from \"../../components/controls/Button/Button\";\r\nimport {Divider} from \"../../components/StyledComponents/Divider\";\r\nimport {HorizontalScrollItem, HorizontalScrollWrapper} from \"../../components/controls/Scroll/Scroll\";\r\nimport {MainContext} from \"../../components/contextProviders/MainContext\";\r\nimport {apiGetListUserOffers} from \"../../actions/api\";\r\nimport OfferCardItem from \"../../components/Offer/cards/OfferCardItem\";\r\nimport {Wallpaper, DotList} from \"../../components/Profile/styledUser\"\r\nimport {ButtonWithIcon} from \"../../components/controls/Button/ButtonWithIcon\";\r\n\r\n\r\n\r\n\r\nconst UserContent = ({user}) => {\r\n    const [arrayPhotos, setArrayPhotos] = useState([])\r\n    const [offers, setOffers] = useState([])\r\n    const [loadingOffers, setLoadingOffers] = useState([])\r\n\r\n    const {me, setMe} = useContext(MainContext)\r\n    const refGallery = useRef(null)\r\n\r\n    useEffect(() => {\r\n        if(user.photo && user.photo.length) {\r\n            try{\r\n                let coverUrl = (user.coverPhoto && user.coverPhoto.photoUrl) ? user.coverPhoto.photoUrl : null\r\n                let filteredPhoto = user.photo.filter(item => (item.photoUrl && user.photoUrl !== coverUrl))\r\n                if(coverUrl) filteredPhoto.unshift({photoUrl: coverUrl})\r\n                let images = filteredPhoto.map(item => {\r\n                    if(item.photoUrl)  {\r\n                        return {original: modifySrc(item.photoUrl, 'coverProfile')}\r\n                    }\r\n                })\r\n                setArrayPhotos(images)\r\n            } catch (e) {\r\n                setArrayPhotos([])\r\n            }\r\n\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(user.id) {\r\n            setLoadingOffers(true)\r\n            apiGetListUserOffers(user.id)\r\n                .then(res => {\r\n                    setOffers(res.data)\r\n                    setLoadingOffers(false)\r\n                })\r\n                .catch(e => {\r\n                    setLoadingOffers(false)\r\n                })\r\n        }\r\n    }, [user.id])\r\n\r\n\r\n\r\n    let profilePhotoSrc = modifySrc(user.profilePhotoURL, 'profile')\r\n    let coverSrc =  modifySrc((user.coverPhoto &&  user.coverPhoto.photoUrl) ?  user.coverPhoto.photoUrl : null, 'coverProfile')\r\n\r\n\r\n\r\n    const handleFullScreen = () => {\r\n        refGallery.current.fullScreen()\r\n    }\r\n\r\n    console.log('arrayPhotos', arrayPhotos)\r\n\r\n\r\n    return (\r\n        <>\r\n            <Wallpaper src={coverSrc}>\r\n                {!!arrayPhotos.length && <ButtonWithIcon gallery textRight onClick={handleFullScreen}>Gallery</ButtonWithIcon> }\r\n            </Wallpaper>\r\n\r\n            <ImageGallery\r\n                ref={refGallery}\r\n                items={arrayPhotos}\r\n                showThumbnails={false}\r\n                showPlayButton={false}\r\n                additionalClass={'z-profile-gallery'}\r\n            />\r\n\r\n            <ContainerDesktop>\r\n                <Wrapper pl={16} pr={16} pb={50}>\r\n                    <FlexBlock left mb={30}>\r\n                        <ProfileAvatar src={profilePhotoSrc} alt={'logo'} />\r\n                        <FlexBlock column nowidth mt={30} ml={12}>\r\n                            <Text bold fz={18}>{`${user.firstName || ''} ${user.lastName || ''}`}</Text>\r\n                            <Text fz={10}>Joined {moment(new Date(user.createdAt), \"YYYYMMDD\").fromNow()}</Text>\r\n                        </FlexBlock>\r\n                    </FlexBlock>\r\n\r\n                        <>\r\n                            {user.country &&\r\n                            <FlexBlock left ml={25} mb={20}>\r\n                                <DotList/>\r\n                                <Text fz={16}>Lives in {user.country}</Text>\r\n                            </FlexBlock>\r\n                            }\r\n                            {user.phone &&\r\n                            <FlexBlock left ml={25} mb={20}>\r\n                                <DotList/>\r\n                                <Text green2 fz={16}>{user.phone}</Text>\r\n                            </FlexBlock>\r\n                            }\r\n                            {user.email &&\r\n                            <FlexBlock left ml={25} mb={20}>\r\n                                <DotList/>\r\n                                <Text green2 fz={16}>{user.email}</Text>\r\n                            </FlexBlock>\r\n                            }\r\n                        </>\r\n\r\n\r\n                    <Divider grey mt={40} mb={22}/>\r\n                    <Text bold fz={18}>Education</Text>\r\n                    <Text fz={14} mt={15}>{user.education}</Text>\r\n                    <Text bold fz={18}>Experience</Text>\r\n                    <Text fz={14} mt={15}>{user.experience}</Text>\r\n                    \r\n                    <Divider grey mt={28} mb={22}/>\r\n                    <Text bold fz={18} mb={30}>{`${user.firstName || ''} ${user.lastName || ''}`} provided</Text>\r\n\r\n\r\n                    {/*<CheckLabel grbl label='Government ID'/>*/}\r\n                    <CheckLabel grbl label='Email address'/>\r\n                    {/*<CheckLabel grbl label='Phone number'/>*/}\r\n\r\n                    <Divider grey mt={28} mb={22}/>\r\n\r\n                    <Text bold fz={18} mb={30}>{`${user.firstName || ''} ${user.lastName || ''}`} offers</Text>\r\n                    {loadingOffers ?\r\n                        <>\r\n                            Loading...\r\n                        </>\r\n                        :\r\n                        <HorizontalScrollWrapper>\r\n                            {offers.map((item, key) =>\r\n                                <HorizontalScrollItem key={key}>\r\n                                    <OfferCardItem offer={item} />\r\n                                </HorizontalScrollItem>\r\n                            )}\r\n                        </HorizontalScrollWrapper>\r\n                    }\r\n\r\n                </Wrapper>\r\n            </ContainerDesktop>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default UserContent\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAEA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AACA;AAAA;AAFA;AAaA;AACA;AACA;;;;A","sourceRoot":""}