{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport { space } from 'styled-system';\nimport { Text } from \"../../StyledComponents/Text\";\nimport { Plus, Minus } from '../../StyledComponents/Icon';\nimport { Input } from \"../Input/Input\";\nimport React from \"react\";\nconst Wrapper = styled.div`\n   ${space};\n   display: flex;\n`;\nconst Count = styled.div`\n  width: ${props => props.small ? '32px' : '65px'};\n  height: ${props => props.small ? '32px' : '46px'};\n  font-size: ${props => props.small ? '18px' : '24px'};\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n  color: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst InputCounter = styled.input.attrs(props => ({\n  type: props.type\n}))`\n  // ${space};\n  width: 32px;\n  line-height: 32px;\n  height: 32px;\n  font-size: 18px;\n  color: rgba(1, 1, 1, 0.8);\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n  padding: 3px;\n  box-sizing: border-box;\n  text-align: center;\n  \n  :focus {\n    outline: none;\n  }\n  ::-webkit-input-placeholder {\n      color: rgba(1, 1, 1, 0.5);\n    }\n    :-ms-input-placeholder { \n      color: rgba(1, 1, 1, 0.5);\n    }\n    ::placeholder {\n      color: rgba(1, 1, 1, 0.5);\n    }\n`;\nconst Label = styled.div`\n  font-size: 16px;\n  color: rgba(0, 0, 0, 0.8);\n  padding-right: 20px;\n`;\nconst WrapperWithLabel = styled(Wrapper)`\n   ${space};\n   justify-content: space-between;\n   height: 46px;\n   align-items: center;\n   width: 100%;\n   border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n   \n   Label {\n    width: 60%;\n   }\n   Counter {\n    width: 40%;\n   }\n   \n`;\nconst WrapperYesNo = styled.div`\n   ${space};\n   display: flex;\n   border: 1px solid rgba(0, 0, 0, 0.3);\n   border-radius: 5px;\n   height: 32px;\n   align-items: center;\n   color: rgba(0, 0, 0, 0.3);\n`;\nconst SpanYesNo = styled.span`\n   ${space};\n   padding: 0 12px;\n   font-size: 16px;\n   color: ${props => props.active ? '#000000' : 'rgba(0, 0, 0, 0.3)'};\n`;\n\nconst Counter = ({\n  name,\n  value,\n  onChange,\n  small\n}) => {\n  const preOnChange = i => {\n    if (i === -1 && value === 0) return;\n    onChange({\n      name: name,\n      value: Number(value) + i\n    });\n  };\n\n  const preOnChangeInput = value => {\n    onChange({\n      name: name,\n      value: value\n    });\n  };\n\n  return __jsx(Wrapper, null, __jsx(Minus, {\n    small: true,\n    mr: small ? 10 : 30,\n    onClick: () => preOnChange(-1)\n  }), __jsx(InputCounter, {\n    type: 'number',\n    value: value,\n    onChange: e => preOnChangeInput(e.target.value),\n    placeholder: ''\n  }), __jsx(Plus, {\n    small: true,\n    ml: small ? 10 : 30,\n    onClick: () => preOnChange(1)\n  }));\n};\n\nconst CounterLabel = (_ref) => {\n  let {\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\"]);\n\n  return __jsx(WrapperWithLabel, null, __jsx(Label, null, title), __jsx(Counter, _extends({\n    small: true\n  }, props)));\n};\n\nconst YesNoLabel = ({\n  title,\n  active,\n  handleClick,\n  keyArr,\n  params\n}) => {\n  console.log(active);\n\n  if (typeof active === 'string') {\n    active = active === 'true' ? true : false;\n  }\n\n  return __jsx(WrapperWithLabel, null, __jsx(Label, null, title), __jsx(WrapperYesNo, null, __jsx(SpanYesNo, {\n    active: !active,\n    onClick: () => handleClick(keyArr, 'no', params)\n  }, \"No\"), \"|\", __jsx(SpanYesNo, {\n    active: active,\n    onClick: () => handleClick(keyArr, 'yes', params)\n  }, \"Yes\")));\n};\n\nexport { Counter, CounterLabel, YesNoLabel };","map":{"version":3,"sources":["D:/git/webapp3/webapp/components/controls/Counter/Counter.js"],"names":["styled","space","Text","Plus","Minus","Input","React","Wrapper","div","Count","props","small","InputCounter","input","attrs","type","Label","WrapperWithLabel","WrapperYesNo","SpanYesNo","span","active","Counter","name","value","onChange","preOnChange","i","Number","preOnChangeInput","e","target","CounterLabel","title","YesNoLabel","handleClick","keyArr","params","console","log"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport { space } from 'styled-system'\r\nimport {Text} from \"../../StyledComponents/Text\";\r\nimport {Plus, Minus} from '../../StyledComponents/Icon'\r\nimport {Input} from \"../Input/Input\";\r\nimport React from \"react\";\r\n\r\nconst Wrapper = styled.div`\r\n   ${space};\r\n   display: flex;\r\n`;\r\nconst Count = styled.div`\r\n  width: ${props => props.small ? '32px' : '65px'};\r\n  height: ${props => props.small ? '32px' : '46px'};\r\n  font-size: ${props => props.small ? '18px' : '24px'};\r\n  border: 1px solid rgba(0, 0, 0, 0.3);\r\n  border-radius: 5px;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\nconst InputCounter = styled.input.attrs(props => ({\r\n    type: props.type,\r\n}))`\r\n  // ${space};\r\n  width: 32px;\r\n  line-height: 32px;\r\n  height: 32px;\r\n  font-size: 18px;\r\n  color: rgba(1, 1, 1, 0.8);\r\n  border: 1px solid rgba(0, 0, 0, 0.3);\r\n  border-radius: 5px;\r\n  padding: 3px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  \r\n  :focus {\r\n    outline: none;\r\n  }\r\n  ::-webkit-input-placeholder {\r\n      color: rgba(1, 1, 1, 0.5);\r\n    }\r\n    :-ms-input-placeholder { \r\n      color: rgba(1, 1, 1, 0.5);\r\n    }\r\n    ::placeholder {\r\n      color: rgba(1, 1, 1, 0.5);\r\n    }\r\n`;\r\n\r\nconst Label = styled.div`\r\n  font-size: 16px;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  padding-right: 20px;\r\n`\r\nconst WrapperWithLabel = styled(Wrapper)`\r\n   ${space};\r\n   justify-content: space-between;\r\n   height: 46px;\r\n   align-items: center;\r\n   width: 100%;\r\n   border-bottom: 1px solid rgba(0, 0, 0, 0.15);\r\n   \r\n   Label {\r\n    width: 60%;\r\n   }\r\n   Counter {\r\n    width: 40%;\r\n   }\r\n   \r\n`;\r\nconst WrapperYesNo = styled.div`\r\n   ${space};\r\n   display: flex;\r\n   border: 1px solid rgba(0, 0, 0, 0.3);\r\n   border-radius: 5px;\r\n   height: 32px;\r\n   align-items: center;\r\n   color: rgba(0, 0, 0, 0.3);\r\n`;\r\nconst SpanYesNo = styled.span`\r\n   ${space};\r\n   padding: 0 12px;\r\n   font-size: 16px;\r\n   color: ${props => props.active ? '#000000' : 'rgba(0, 0, 0, 0.3)'};\r\n`;\r\n\r\nconst Counter = ({name, value, onChange, small}) => {\r\n    const preOnChange = (i) => {\r\n        if(i === -1 && value === 0) return\r\n        onChange({name: name, value: Number(value) + i})\r\n    }\r\n\r\n    const preOnChangeInput = (value) => {\r\n        onChange({name: name, value: value})\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Minus small mr={small? 10 : 30} onClick={() => preOnChange(-1)} />\r\n            {/*<Count small={!!small} >{value}</Count>*/}\r\n            <InputCounter\r\n                type={'number'}\r\n                value={value}\r\n                onChange={e => preOnChangeInput(e.target.value)}\r\n                placeholder={''}\r\n            />\r\n            <Plus small ml={small? 10 : 30} onClick={() => preOnChange(1)} />\r\n        </Wrapper>\r\n    )\r\n}\r\nconst CounterLabel = ({title, ...props}) => {\r\n    return (\r\n        <WrapperWithLabel>\r\n            <Label>{title}</Label>\r\n            <Counter small {...props} />\r\n        </WrapperWithLabel>\r\n    )\r\n}\r\n\r\nconst YesNoLabel = ({title, active, handleClick, keyArr, params}) => {\r\n    console.log(active)\r\n    if (typeof active === 'string') {\r\n        active = (active === 'true' ? true : false)\r\n    }\r\n\r\n    return (\r\n        <WrapperWithLabel>\r\n            <Label>{title}</Label>\r\n            <WrapperYesNo>\r\n                <SpanYesNo active={!active} onClick={() => handleClick(keyArr, 'no', params)} >No</SpanYesNo>\r\n                |\r\n                <SpanYesNo active={active} onClick={() => handleClick(keyArr, 'yes', params)} >Yes</SpanYesNo>\r\n            </WrapperYesNo>\r\n        </WrapperWithLabel>\r\n    )\r\n}\r\n\r\nexport {Counter, CounterLabel, YesNoLabel}"]},"metadata":{},"sourceType":"module"}