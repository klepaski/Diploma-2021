{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport { Footer, Label, Label2, Title } from \"../../Layouts/styledLayouts\";\nimport { Wrapper, WrapperHeight } from \"../../StyledComponents/Wrapper\";\nimport { SearchingBlockWrapper } from \"./styledSearchBlock\";\nimport { Button } from \"../../controls/Button/Button\";\nimport Header from \"../../Header/Header\";\nimport Select from \"../../controls/Select/Select\";\nimport { Input } from \"../../controls/Input/Input\";\nimport DatePicker from \"../../controls/DateTimePickers/Datepicker\"; // import {listCountries} from '../../../utils/countriesLanguages'\n\nimport { apiGetListOffers } from '../../../actions/api';\nimport ListOffers from '../list/ListOffers';\nvar listCountries = [{\n  value: 'United Arab Emirates',\n  label: 'United Arab Emirates'\n}, {\n  value: 'Saudi Arabia',\n  label: 'Saudi Arabia'\n}];\n\nvar SearchBlock = function SearchBlock() {\n  var _useState = useState(''),\n      search = _useState[0],\n      setSearch = _useState[1];\n\n  var _useState2 = useState(null),\n      from = _useState2[0],\n      setFrom = _useState2[1];\n\n  var _useState3 = useState(null),\n      to = _useState3[0],\n      setTo = _useState3[1];\n\n  var _useState4 = useState(''),\n      country = _useState4[0],\n      setCountry = _useState4[1];\n\n  var _useState5 = useState([]),\n      listOffers = _useState5[0],\n      setListOffers = _useState5[1];\n\n  var _useState6 = useState(false),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var onChangeSearch = function onChangeSearch(e) {\n    setSearch(e.target.value);\n  };\n\n  var onChangeDateFrom = function onChangeDateFrom(date) {\n    setFrom(date);\n  };\n\n  var onChangeDateTo = function onChangeDateTo(date) {\n    setTo(date);\n  };\n\n  var handleChangeCountry = function handleChangeCountry(country) {\n    setCountry(country.value);\n  };\n\n  var getListOffers = function getListOffers() {\n    var params = {\n      search: search,\n      country: country\n    };\n    apiGetListOffers(params).then(function (res) {\n      setListOffers(res.data);\n    })[\"catch\"](function (e) {});\n  };\n\n  var handleStartSearch = function handleStartSearch() {\n    var fromSearch = from && new Date(from) ? new Date(from).getTime() : '';\n    var toSearch = to && new Date(to) ? new Date(to).getTime() : '';\n    Router.push(\"/offers/list?search=\".concat(search, \"&from=\").concat(fromSearch, \"&to=\").concat(toSearch, \"&country=\").concat(country), \"/offers/list?search=\".concat(search, \"&from=\").concat(fromSearch, \"&to=\").concat(toSearch, \"&country=\").concat(country), {\n      shallow: true\n    });\n  };\n\n  return __jsx(SearchingBlockWrapper, null, __jsx(Label, {\n    small: true\n  }, \"Who are you looking for?\"), __jsx(Input, {\n    type: 'text',\n    value: search,\n    onChange: onChangeSearch,\n    placeholder: \"Anyone\",\n    mb: '5px',\n    fz: 15\n  }), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-xs-6\"\n  }, __jsx(Label2, null, \"From\"), __jsx(Wrapper, {\n    mb: 20,\n    width100: true\n  }, __jsx(DatePicker, {\n    selected: from,\n    name: \"date\",\n    maxDate: to,\n    onChange: onChangeDateFrom,\n    showYearDropdown: true,\n    withPortal: true,\n    dateFormat: \"dd/MM/yyyy\"\n  }))), __jsx(\"div\", {\n    className: \"col-xs-6\"\n  }, __jsx(Label2, null, \"To\"), __jsx(Wrapper, {\n    mb: 20,\n    width100: true\n  }, __jsx(DatePicker, {\n    selected: to,\n    name: \"date\",\n    minDate: from,\n    onChange: onChangeDateTo,\n    showYearDropdown: true,\n    withPortal: true,\n    dateFormat: \"dd/MM/yyyy\"\n  })))), __jsx(Label2, null, \"What is the location of the event?\"), __jsx(Select, {\n    options: listCountries,\n    value: country,\n    onChange: handleChangeCountry\n  }), __jsx(Button, {\n    green: true,\n    bold: true,\n    mt: 30,\n    onClick: handleStartSearch\n  }, \"Start searching\"));\n};\n\nexport default SearchBlock;","map":{"version":3,"sources":["D:/git/webapp3/webapp/components/Offer/search/SearchBlock.js"],"names":["React","useState","useEffect","Router","useRouter","Footer","Label","Label2","Title","Wrapper","WrapperHeight","SearchingBlockWrapper","Button","Header","Select","Input","DatePicker","apiGetListOffers","ListOffers","listCountries","value","label","SearchBlock","search","setSearch","from","setFrom","to","setTo","country","setCountry","listOffers","setListOffers","loading","setLoading","onChangeSearch","e","target","onChangeDateFrom","date","onChangeDateTo","handleChangeCountry","getListOffers","params","then","res","data","handleStartSearch","fromSearch","Date","getTime","toSearch","push","shallow"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Router, { useRouter } from 'next/router'\r\n\r\nimport {\r\n    Footer, Label, Label2, Title,\r\n} from \"../../Layouts/styledLayouts\";\r\nimport {Wrapper, WrapperHeight} from \"../../StyledComponents/Wrapper\";\r\nimport {SearchingBlockWrapper} from \"./styledSearchBlock\";\r\nimport {Button} from \"../../controls/Button/Button\";\r\nimport Header from \"../../Header/Header\"\r\nimport Select from \"../../controls/Select/Select\";\r\nimport {Input} from \"../../controls/Input/Input\";\r\nimport DatePicker from \"../../controls/DateTimePickers/Datepicker\";\r\n// import {listCountries} from '../../../utils/countriesLanguages'\r\nimport {apiGetListOffers} from '../../../actions/api'\r\nimport ListOffers from '../list/ListOffers'\r\n\r\nconst listCountries = [\r\n    {value: 'United Arab Emirates', label: 'United Arab Emirates'},\r\n    {value: 'Saudi Arabia', label: 'Saudi Arabia'}\r\n]\r\n\r\nconst SearchBlock = () => {\r\n    const [search, setSearch] = useState('')\r\n    const [from, setFrom] = useState(null)\r\n    const [to, setTo] = useState(null)\r\n    const [country, setCountry] = useState('')\r\n    const [listOffers, setListOffers] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    let onChangeSearch = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n    const onChangeDateFrom = date => {\r\n        setFrom(date)\r\n    }\r\n    const onChangeDateTo = date => {\r\n        setTo(date)\r\n    }\r\n    const handleChangeCountry = country => {\r\n        setCountry(country.value)\r\n    };\r\n\r\n    const getListOffers = () => {\r\n        let params = {\r\n            search: search,\r\n            country: country\r\n        }\r\n        apiGetListOffers(params)\r\n            .then(res => {\r\n                setListOffers(res.data)\r\n            })\r\n            .catch(e => {\r\n\r\n            })\r\n    }\r\n\r\n    const handleStartSearch = () => {\r\n        let fromSearch = (from && new Date(from)) ? new Date(from).getTime() : ''\r\n        let toSearch = (to && new Date(to)) ? new Date(to).getTime() : ''\r\n\r\n        Router.push(`/offers/list?search=${search}&from=${fromSearch}&to=${toSearch}&country=${country}`, `/offers/list?search=${search}&from=${fromSearch}&to=${toSearch}&country=${country}`, {shallow: true})\r\n    }\r\n\r\n    return (\r\n        <SearchingBlockWrapper>\r\n            <Label small >Who are you looking for?</Label>\r\n            <Input type={'text'}\r\n                   value={search}\r\n                   onChange={onChangeSearch}\r\n                   placeholder=\"Anyone\"\r\n                   mb={'5px'}\r\n                   fz={15}\r\n            />\r\n            <div className=\"row\">\r\n                <div className=\"col-xs-6\">\r\n                    <Label2>From</Label2>\r\n                    <Wrapper mb={20} width100>\r\n                        <DatePicker\r\n                            selected={from}\r\n                            name='date'\r\n                            maxDate={to}\r\n                            onChange={onChangeDateFrom}\r\n                            showYearDropdown\r\n                            withPortal\r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                        />\r\n                    </Wrapper>\r\n                </div>\r\n                <div className=\"col-xs-6\">\r\n                    <Label2>To</Label2>\r\n                    <Wrapper mb={20} width100>\r\n                        <DatePicker\r\n                            selected={to}\r\n                            name='date'\r\n                            minDate={from}\r\n                            onChange={onChangeDateTo}\r\n                            showYearDropdown\r\n                            withPortal\r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                        />\r\n                    </Wrapper>\r\n                </div>\r\n            </div>\r\n\r\n            <Label2>What is the location of the event?</Label2>\r\n            <Select\r\n                options={listCountries}\r\n                value={country}\r\n                onChange={handleChangeCountry}\r\n            />\r\n\r\n            <Button green bold mt={30} onClick={handleStartSearch} >Start searching</Button>\r\n\r\n        </SearchingBlockWrapper>\r\n    );\r\n};\r\n\r\nexport default SearchBlock;"]},"metadata":{},"sourceType":"module"}