{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport styled, { css } from 'styled-components';\nimport { device } from '../../lib/mediaDevice';\nimport { Wrapper, WrapperHeight } from \"../StyledComponents/Wrapper\";\nimport { Button } from \"../controls/Button/Button\";\nimport Photos from '../Offer/photos/Photos';\nimport EditPhoto from '../Photo/EditPhoto';\nimport CoverPhoto from '../Offer/photos/CoverPhoto';\nimport { apiSendProfilePhotos, apiGetProfilePhotos, apiRemoveProfilePhoto, apiSendProfileCoverPhoto } from '../../actions/api';\nimport { showNotification } from \"../../utils/notification\";\nimport '../Offer/photos/photo.css';\n\nconst PhotoGallery = ({\n  photosArr,\n  coverPhoto,\n  isLoading,\n  onSave\n}) => {\n  const {\n    0: step,\n    1: setStep\n  } = useState(2);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: loadingEdit,\n    1: setLoadingEdit\n  } = useState(false);\n  const {\n    0: uploading,\n    1: setUploading\n  } = useState(false);\n  const {\n    0: photos,\n    1: setPhotos\n  } = useState([]);\n  const {\n    0: videos,\n    1: setVideos\n  } = useState(['']);\n  const {\n    0: cover,\n    1: setCover\n  } = useState(null);\n  const {\n    0: photoEditable,\n    1: setPhotoEditable\n  } = useState({});\n  const {\n    0: keyPhoto,\n    1: setKeyPhoto\n  } = useState(null);\n  useEffect(() => {\n    if (photosArr.length) {\n      setPhotos(photosArr);\n    }\n\n    if (coverPhoto && coverPhoto.id) {\n      setCover(coverPhoto.id);\n    }\n  }, []);\n\n  const onSetCover = id => {\n    setCover(id);\n    setStep(2);\n  };\n\n  const onDrop = files => {\n    // setPhotos([...photos, ...files])\n    onUploadFiles(files);\n  };\n\n  const onUploadFiles = async files => {\n    let data = new FormData();\n    files.forEach(file => {\n      if (!file.id || file.blob) {\n        if (file.blob) {\n          data.append(\"file\", file.blob, file.name);\n        } else {\n          data.append(\"file\", file, file.name);\n        }\n      }\n    });\n    setUploading(true);\n    let res = await apiSendProfilePhotos(data);\n\n    if (res.data) {\n      setPhotos([...photos, ...res.data]);\n    }\n\n    setUploading(false);\n  };\n\n  const handleSavePhotos = async () => {\n    let data = new FormData();\n    photos.forEach(file => {\n      if (!file.id || file.blob) {\n        if (file.blob) {\n          data.append(\"file\", file.blob, file.name);\n        } else {\n          data.append(\"file\", file, file.name);\n        }\n      }\n    });\n    handleSendPhotos(data); // setLoading(true)\n    // let photosDeleting = photos.filter((item, key) => (item.blob && item.id))\n    // if(photosDeleting.length) {\n    //     Promise.all(photosDeleting.map(item => handleRemovePhoto(item.id)))\n    //         .then(res => {\n    //             handleSendPhotos(data)\n    //         })\n    // } else {\n    //     handleSendPhotos(data)\n    // }\n  };\n\n  const handleSendPhotos = data => {\n    setLoading(true);\n    apiSendProfilePhotos(data).then(res => {\n      setLoading(false);\n      let photosFilter = photos.filter(item => {\n        return item.id && !item.blob;\n      });\n      setPhotos([...photosFilter, ...res.data]);\n      let photosNew = [...photosFilter, ...res.data];\n      apiSendProfileCoverPhoto(cover).then(res => {\n        onSave(photosNew, res.data.coverPhoto);\n      });\n      setLoading(false);\n    }).catch(e => {\n      showNotification('error', e);\n      setLoading(false);\n    });\n  };\n\n  const handleEditPhoto = async photo => {\n    const res = await apiEditOfferPhoto(photo);\n    console.log(res);\n    return res;\n  };\n\n  const handleRemovePhoto = async id => {\n    const res = await apiRemoveProfilePhoto(id);\n    console.log(res);\n    return res;\n  };\n\n  const handleDeletePhoto = async key => {\n    let photoByKey = photos[key];\n\n    if (photoByKey.id) {\n      const res = await handleRemovePhoto(photoByKey.id);\n      let photosClone = [...photos];\n      photosClone.splice(key, 1);\n      setPhotos(photosClone);\n      setStep(2);\n    } else {\n      let photosClone = [...photos];\n      photosClone.splice(key, 1);\n      setPhotos(photosClone);\n      setStep(2);\n    }\n  };\n\n  const setEditablePhoto = (photo, key) => {\n    setPhotoEditable(photo);\n    setKeyPhoto(key);\n    setStep(4);\n  };\n\n  const handleBackFromEdit = () => {\n    setPhotoEditable({});\n    setKeyPhoto(null);\n    setStep(2);\n  };\n\n  const handleRotate = async (blob, url, key) => {\n    try {\n      let photosCopy = [...photos],\n          ephoto = photosCopy[key],\n          isCover = !!(cover == ephoto.id);\n      setLoadingEdit(true);\n      let data = new FormData();\n      data.append(\"file\", blob, blob.name);\n      let res = await apiSendProfilePhotos(data);\n      let res2 = await apiRemoveProfilePhoto(ephoto.id);\n\n      if (isCover) {\n        setCover(res.data[0].id);\n      }\n\n      photosCopy[key] = res.data[0];\n      setPhotos(photosCopy);\n      setLoadingEdit(false);\n      setStep(2);\n    } catch (e) {\n      showNotification('error', 'error');\n      setLoadingEdit(false);\n      setStep(2);\n    }\n  };\n\n  const onChangePhotoDescription = (id, value) => {\n    let photosClone = [...photos];\n    let key = photosClone.findIndex(item => item.id === id);\n    photosClone[key].description = value;\n    setPhotos(photosClone);\n    console.log(key, value);\n  };\n\n  const disabled = loading;\n  return __jsx(React.Fragment, null, __jsx(Wrapper, {\n    p: 17,\n    pt: 35\n  }, !loading ? __jsx(React.Fragment, null, __jsx(WrapperHeight, null, uploading && __jsx(\"div\", {\n    className: \"photo-uploading-router\"\n  }, \" Uploading... \"), step === 2 && __jsx(Photos, {\n    onDrop: onDrop,\n    setStep: setStep,\n    cover: cover,\n    typeDefaultCover: 'coverProfile',\n    photos: photos,\n    setEditablePhoto: setEditablePhoto,\n    isHiddenDeleting: true\n  }), step === 3 && __jsx(CoverPhoto, {\n    photos: photos,\n    setCover: onSetCover,\n    handleBack: handleBackFromEdit,\n    cover: cover\n  }), step === 4 && __jsx(EditPhoto, {\n    keyPhoto: keyPhoto,\n    photo: photoEditable,\n    handleBack: handleBackFromEdit,\n    handleRotate: handleRotate,\n    handleDelete: handleDeletePhoto,\n    onChangePhotoDescription: onChangePhotoDescription,\n    hidedenDescription: true,\n    loadingEdit: loadingEdit\n  })), __jsx(BottomBtnBox, null, !!(step === 2 && photos.length) && __jsx(Button, {\n    green: true,\n    loading: loading,\n    onClick: handleSavePhotos,\n    mt: 70\n  }, \"Save\"))) : __jsx(React.Fragment, null, \"Loading...\")));\n};\n\nexport default PhotoGallery;\nconst BottomBtnBox = styled.div`\n  @media ${device.laptopDesktop} {\n    text-align: center;\n    button {\n      width: 200px;\n    }\n  }\n`;","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/components/Profile/PhotosGallery.js"],"names":["React","useState","useContext","useEffect","Router","useRouter","styled","css","device","Wrapper","WrapperHeight","Button","Photos","EditPhoto","CoverPhoto","apiSendProfilePhotos","apiGetProfilePhotos","apiRemoveProfilePhoto","apiSendProfileCoverPhoto","showNotification","PhotoGallery","photosArr","coverPhoto","isLoading","onSave","step","setStep","loading","setLoading","loadingEdit","setLoadingEdit","uploading","setUploading","photos","setPhotos","videos","setVideos","cover","setCover","photoEditable","setPhotoEditable","keyPhoto","setKeyPhoto","length","id","onSetCover","onDrop","files","onUploadFiles","data","FormData","forEach","file","blob","append","name","res","handleSavePhotos","handleSendPhotos","then","photosFilter","filter","item","photosNew","catch","e","handleEditPhoto","photo","apiEditOfferPhoto","console","log","handleRemovePhoto","handleDeletePhoto","key","photoByKey","photosClone","splice","setEditablePhoto","handleBackFromEdit","handleRotate","url","photosCopy","ephoto","isCover","res2","onChangePhotoDescription","value","findIndex","description","disabled","BottomBtnBox","div","laptopDesktop"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport Router, { useRouter } from 'next/router'\r\nimport styled, { css } from 'styled-components'\r\nimport { device } from '../../lib/mediaDevice'\r\nimport {Wrapper, WrapperHeight} from \"../StyledComponents/Wrapper\";\r\nimport {Button} from \"../controls/Button/Button\";\r\nimport Photos from '../Offer/photos/Photos'\r\nimport EditPhoto from '../Photo/EditPhoto'\r\nimport CoverPhoto from '../Offer/photos/CoverPhoto'\r\n\r\nimport {\r\n    apiSendProfilePhotos,\r\n    apiGetProfilePhotos,\r\n    apiRemoveProfilePhoto,\r\n    apiSendProfileCoverPhoto\r\n} from '../../actions/api'\r\nimport {showNotification} from \"../../utils/notification\";\r\n\r\nimport '../Offer/photos/photo.css'\r\n\r\nconst PhotoGallery = ({photosArr, coverPhoto, isLoading, onSave}) => {\r\n    const [step, setStep] = useState(2)\r\n    const [loading, setLoading] = useState(false)\r\n    const [loadingEdit, setLoadingEdit] = useState(false)\r\n    const [uploading, setUploading] = useState(false)\r\n    const [photos, setPhotos] = useState([])\r\n    const [videos, setVideos] = useState([''])\r\n    const [cover, setCover] = useState(null)\r\n    const [photoEditable, setPhotoEditable] = useState({})\r\n    const [keyPhoto, setKeyPhoto] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if(photosArr.length) {\r\n            setPhotos(photosArr)\r\n        }\r\n        if(coverPhoto && coverPhoto.id) {\r\n            setCover(coverPhoto.id)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const onSetCover = id => {\r\n        setCover(id)\r\n        setStep(2)\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        // setPhotos([...photos, ...files])\r\n        onUploadFiles(files)\r\n    }\r\n    const onUploadFiles = async (files) => {\r\n        let data = new FormData();\r\n        files.forEach(file => {\r\n            if(!file.id || file.blob) {\r\n                if(file.blob) {\r\n                    data.append(\"file\", file.blob, file.name)\r\n                } else {\r\n                    data.append(\"file\", file, file.name)\r\n                }\r\n            }\r\n        });\r\n        setUploading(true)\r\n        let res = await apiSendProfilePhotos(data)\r\n        if(res.data) {\r\n            setPhotos([...photos, ...res.data])\r\n        }\r\n        setUploading(false)\r\n    }\r\n\r\n    const handleSavePhotos = async () => {\r\n        let data = new FormData();\r\n        photos.forEach(file => {\r\n            if(!file.id || file.blob) {\r\n                if(file.blob) {\r\n                    data.append(\"file\", file.blob, file.name)\r\n                } else {\r\n                    data.append(\"file\", file, file.name)\r\n                }\r\n            }\r\n        });\r\n        handleSendPhotos(data)\r\n        // setLoading(true)\r\n        // let photosDeleting = photos.filter((item, key) => (item.blob && item.id))\r\n        // if(photosDeleting.length) {\r\n        //     Promise.all(photosDeleting.map(item => handleRemovePhoto(item.id)))\r\n        //         .then(res => {\r\n        //             handleSendPhotos(data)\r\n        //         })\r\n        // } else {\r\n        //     handleSendPhotos(data)\r\n        // }\r\n    }\r\n\r\n    const handleSendPhotos = data => {\r\n        setLoading(true)\r\n        apiSendProfilePhotos(data)\r\n            .then(res => {\r\n                setLoading(false)\r\n                let photosFilter = photos.filter((item) => {\r\n                    return (item.id && !item.blob)\r\n                })\r\n                setPhotos([...photosFilter, ...res.data])\r\n\r\n                let photosNew = [...photosFilter, ...res.data];\r\n\r\n                apiSendProfileCoverPhoto(cover)\r\n                    .then(res => {\r\n                        onSave(photosNew, res.data.coverPhoto)\r\n                    })\r\n                setLoading(false)\r\n\r\n            })\r\n            .catch(e => {\r\n                showNotification('error', e)\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    const handleEditPhoto = async photo => {\r\n        const res = await apiEditOfferPhoto(photo)\r\n        console.log(res)\r\n        return res\r\n    }\r\n\r\n    const handleRemovePhoto = async id => {\r\n        const res = await apiRemoveProfilePhoto(id)\r\n        console.log(res)\r\n        return res\r\n    }\r\n\r\n    const handleDeletePhoto = async (key) => {\r\n        let photoByKey = photos[key];\r\n        if(photoByKey.id) {\r\n            const res = await handleRemovePhoto(photoByKey.id)\r\n            let photosClone = [...photos]\r\n            photosClone.splice(key, 1)\r\n            setPhotos(photosClone)\r\n            setStep(2)\r\n        } else {\r\n            let photosClone = [...photos]\r\n            photosClone.splice(key, 1)\r\n            setPhotos(photosClone)\r\n            setStep(2)\r\n        }\r\n    }\r\n\r\n    const setEditablePhoto = (photo, key) => {\r\n        setPhotoEditable(photo)\r\n        setKeyPhoto(key)\r\n        setStep(4)\r\n    }\r\n    const handleBackFromEdit = () => {\r\n        setPhotoEditable({})\r\n        setKeyPhoto(null)\r\n        setStep(2)\r\n    }\r\n    const handleRotate = async (blob, url, key) => {\r\n        try {\r\n            let photosCopy = [...photos],\r\n                ephoto = photosCopy[key],\r\n                isCover = !!(cover == ephoto.id)\r\n            setLoadingEdit(true)\r\n            let data = new FormData();\r\n            data.append(\"file\", blob, blob.name)\r\n            let res = await apiSendProfilePhotos(data)\r\n            let res2 = await apiRemoveProfilePhoto(ephoto.id)\r\n            if(isCover) {\r\n                setCover(res.data[0].id)\r\n            }\r\n            photosCopy[key] = res.data[0]\r\n            setPhotos(photosCopy)\r\n            setLoadingEdit(false)\r\n            setStep(2)\r\n        } catch (e) {\r\n            showNotification('error', 'error')\r\n            setLoadingEdit(false)\r\n            setStep(2)\r\n        }\r\n\r\n    }\r\n\r\n    const onChangePhotoDescription = (id, value) => {\r\n        let photosClone = [...photos]\r\n        let key = photosClone.findIndex(item => item.id === id)\r\n        photosClone[key].description = value\r\n        setPhotos(photosClone)\r\n        console.log(key, value)\r\n    }\r\n\r\n    const disabled = loading;\r\n\r\n    return (\r\n        <>\r\n            <Wrapper p={17} pt={35}>\r\n                {!loading ?\r\n                    <>\r\n                        <WrapperHeight>\r\n                            {uploading && <div className='photo-uploading-router'> Uploading... </div>}\r\n\r\n                            {step === 2 &&\r\n                            <Photos\r\n                                onDrop={onDrop}\r\n                                setStep={setStep}\r\n                                cover={cover}\r\n                                typeDefaultCover={'coverProfile'}\r\n                                photos={photos}\r\n                                setEditablePhoto={setEditablePhoto}\r\n                                isHiddenDeleting={true}\r\n                            />\r\n                            }\r\n                            {step === 3 &&\r\n                            <CoverPhoto\r\n                                photos={photos}\r\n                                setCover={onSetCover}\r\n                                handleBack={handleBackFromEdit}\r\n                                cover={cover}\r\n                            />\r\n                            }\r\n                            {step === 4 &&\r\n                            <EditPhoto\r\n                                keyPhoto={keyPhoto}\r\n                                photo={photoEditable}\r\n                                handleBack={handleBackFromEdit}\r\n                                handleRotate={handleRotate}\r\n                                handleDelete={handleDeletePhoto}\r\n                                onChangePhotoDescription={onChangePhotoDescription}\r\n                                hidedenDescription={true}\r\n                                loadingEdit={loadingEdit}\r\n                            />\r\n                            }\r\n\r\n                        </WrapperHeight>\r\n\r\n                        <BottomBtnBox>\r\n                            {!!(step === 2 && photos.length) &&  <Button green loading={loading} onClick={handleSavePhotos} mt={70}>Save</Button>}\r\n                        </BottomBtnBox>\r\n\r\n\r\n\r\n                    </>\r\n                    :\r\n                    <>Loading...</>\r\n                }\r\n\r\n\r\n            </Wrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PhotoGallery\r\n\r\nconst BottomBtnBox = styled.div`\r\n  @media ${device.laptopDesktop} {\r\n    text-align: center;\r\n    button {\r\n      width: 200px;\r\n    }\r\n  }\r\n`"]},"metadata":{},"sourceType":"module"}