{"ast":null,"code":"import React, { useState } from 'react';\nimport { declareAtom } from '@reatom/core';\nimport { setListOffersAction, getOfferByIdAction } from './actions';\nimport { store } from \"../index\";\nexport var offersAtom = declareAtom('listOffers', [], function (on) {\n  return [on(setListOffersAction, function (state, offers) {\n    return offers;\n  })];\n});\nexport var offerByIdAtom = declareAtom('offerById', {}, function (on) {\n  return on(getOfferByIdAction, function (state, id) {\n    var test = store.getState(offersAtom);\n    console.log(offersAtom);\n    debugger;\n    return {\n      id: id,\n      test: 'test'\n    };\n  });\n});","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/features/offers/atoms.js"],"names":["React","useState","declareAtom","setListOffersAction","getOfferByIdAction","store","offersAtom","on","state","offers","offerByIdAtom","id","test","getState","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAAQC,mBAAR,EAA6BC,kBAA7B,QAAsD,WAAtD;AACA,SAAQC,KAAR,QAAoB,UAApB;AAGA,OAAO,IAAMC,UAAU,GAAGJ,WAAW,CACjC,YADiC,EAEjC,EAFiC,EAGjC,UAAAK,EAAE;AAAA,SAAI,CACFA,EAAE,CAACJ,mBAAD,EAAsB,UAACK,KAAD,EAAQC,MAAR;AAAA,WAAmBA,MAAnB;AAAA,GAAtB,CADA,CAAJ;AAAA,CAH+B,CAA9B;AAQP,OAAO,IAAMC,aAAa,GAAGR,WAAW,CACpC,WADoC,EAEpC,EAFoC,EAGpC,UAAAK,EAAE;AAAA,SAAIA,EAAE,CAACH,kBAAD,EAAqB,UAACI,KAAD,EAAQG,EAAR,EAAe;AACxC,QAAIC,IAAI,GAAGP,KAAK,CAACQ,QAAN,CAAeP,UAAf,CAAX;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACA;AACA,WAAO;AAACK,MAAAA,EAAE,EAAEA,EAAL;AAASC,MAAAA,IAAI,EAAE;AAAf,KAAP;AACH,GALO,CAAN;AAAA,CAHkC,CAAjC","sourcesContent":["import React, {useState} from 'react'\r\nimport { declareAtom } from '@reatom/core'\r\nimport {setListOffersAction, getOfferByIdAction} from './actions'\r\nimport {store} from \"../index\";\r\n\r\n\r\nexport const offersAtom = declareAtom(\r\n    'listOffers',\r\n    [],\r\n    on => [\r\n        on(setListOffersAction, (state, offers) => offers)\r\n    ]\r\n)\r\n\r\nexport const offerByIdAtom = declareAtom(\r\n    'offerById',\r\n    {},\r\n    on => on(getOfferByIdAction, (state, id) => {\r\n        let test = store.getState(offersAtom)\r\n        console.log(offersAtom)\r\n        debugger\r\n        return {id: id, test: 'test'}\r\n    })\r\n)\r\n"]},"metadata":{},"sourceType":"module"}