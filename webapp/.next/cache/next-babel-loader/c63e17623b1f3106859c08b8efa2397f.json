{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport AvatarEditor from 'react-avatar-editor';\nimport { UploadImg, IcAvatar } from '../../StyledComponents/Icon';\nimport { Text } from \"../../StyledComponents/Text\";\nimport './styles.css';\nimport { Button } from \"../Button/Button\";\nimport IconRotateRight from '../../../static/img/icon-rotate-right.png';\nexport default class RegAvatar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getImage\", () => {\n      if (this.state.image) {\n        this.editor.getImageScaledToCanvas().toBlob(function (blob) {\n          return blob;\n        }.bind(this), 'image/jpeg', 1);\n      }\n    });\n\n    _defineProperty(this, \"handleSave\", data => {\n      const img = this.editor.getImageScaledToCanvas().toDataURL();\n      const rect = this.editor.getCroppingRect();\n      this.setState({\n        preview: {\n          img,\n          rect,\n          scale: this.state.scale,\n          width: this.state.width,\n          height: this.state.height,\n          borderRadius: this.state.borderRadius\n        }\n      });\n    });\n\n    _defineProperty(this, \"handleScale\", e => {\n      const scale = _parseFloat(e.target.value);\n\n      this.setState({\n        scale\n      });\n    });\n\n    _defineProperty(this, \"handleAllowZoomOut\", ({\n      target: {\n        checked: allowZoomOut\n      }\n    }) => {\n      this.setState({\n        allowZoomOut\n      });\n    });\n\n    _defineProperty(this, \"rotateLeft\", e => {\n      e.preventDefault();\n      this.setState({\n        rotate: this.state.rotate - 90\n      });\n    });\n\n    _defineProperty(this, \"rotateRight\", e => {\n      e.preventDefault();\n      this.setState({\n        rotate: this.state.rotate + 90\n      });\n    });\n\n    _defineProperty(this, \"handleBorderRadius\", e => {\n      const borderRadius = _parseInt(e.target.value);\n\n      this.setState({\n        borderRadius\n      });\n    });\n\n    _defineProperty(this, \"handleXPosition\", e => {\n      const x = _parseFloat(e.target.value);\n\n      this.setState({\n        position: _objectSpread({}, this.state.position, {\n          x\n        })\n      });\n    });\n\n    _defineProperty(this, \"handleYPosition\", e => {\n      const y = _parseFloat(e.target.value);\n\n      this.setState({\n        position: _objectSpread({}, this.state.position, {\n          y\n        })\n      });\n    });\n\n    _defineProperty(this, \"handleWidth\", e => {\n      const width = _parseInt(e.target.value);\n\n      this.setState({\n        width\n      });\n    });\n\n    _defineProperty(this, \"handleHeight\", e => {\n      const height = _parseInt(e.target.value);\n\n      this.setState({\n        height\n      });\n    });\n\n    _defineProperty(this, \"setEditorRef\", editor => {\n      if (editor) this.editor = editor;\n    });\n\n    _defineProperty(this, \"handlePositionChange\", position => {\n      this.setState({\n        position\n      });\n    });\n\n    _defineProperty(this, \"handleNewImage\", e => {\n      this.setState({\n        image: e.target.files[0]\n      });\n    });\n\n    this.state = {\n      allowZoomOut: false,\n      positiD: {\n        x: 0.5,\n        y: 0.5\n      },\n      scale: 1,\n      rotate: 0,\n      borderRadius: 256,\n      preview: null,\n      width: 512,\n      height: 512\n    };\n    this.onCrop = this.onCrop.bind(this);\n    this.onCropDefault = this.onCropDefault.bind(this);\n    this.onCloseDefault = this.onCloseDefault.bind(this);\n  }\n\n  onDrop(accepted, rejected) {\n    if (accepted.length) {\n      this.setState({\n        image: accepted[0]\n      });\n      this.handleScale({\n        target: {\n          value: '1.01'\n        }\n      });\n    }\n\n    if (rejected.length) {\n      console.log('rejected');\n      this.setState({\n        fileError: 'The uploaded file seems to have incorrect format'\n      });\n    }\n  }\n\n  onCropDefault(preview) {\n    this.setState({\n      defaultPreview: preview,\n      newAvatar: true\n    });\n    let binary = atob(preview.split(',')[1]);\n    let array = [];\n\n    for (let i = 0; i < binary.length; i++) {\n      array.push(binary.charCodeAt(i));\n    }\n\n    let img = new Blob([new Uint8Array(array)], {\n      type: 'image/jpeg'\n    });\n    this.setState({\n      avatar: img\n    });\n  }\n\n  onCrop(preview) {\n    this.setState({\n      preview\n    });\n  }\n\n  onCloseDefault() {\n    this.setState({\n      defaultPreview: null,\n      newAvatar: false,\n      preview: null\n    });\n  }\n\n  logCallback(e) {\n    if (e === 'onLoadSuccess' && this.props.onLoadSuccess) this.props.onLoadSuccess();\n  }\n\n  render() {\n    let {\n      profilePhotoURL\n    } = this.props;\n    let image = this.state.image;\n    const dropStyle = {\n      'width': '100%',\n      'height': 'auto',\n      'margin': '0 auto',\n      'border': 'none',\n      'display': 'table'\n    };\n    let styleCanvas = {\n      'width': '240px',\n      'height': '240px'\n    };\n\n    function ActionLink() {\n      document.getElementById('input_load_file_2').click();\n    }\n\n    return __jsx(React.Fragment, null, !image && __jsx(\"div\", {\n      className: \"shell-load-img-cart\"\n    }, __jsx(\"div\", {\n      className: \"block-load-img\"\n    }, __jsx(\"section\", {\n      className: \"section-wrap-upload\"\n    }, profilePhotoURL ? __jsx(\"img\", {\n      src: profilePhotoURL,\n      alt: \"logo\"\n    }) : __jsx(IcAvatar, null)))), image && __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"wrap-canvas-avatar\"\n    }, __jsx(AvatarEditor, {\n      ref: this.setEditorRef,\n      scale: _parseFloat(this.state.scale),\n      width: this.state.width,\n      height: this.state.height,\n      position: this.state.position,\n      onPositionChange: this.handlePositionChange,\n      rotate: _parseFloat(this.state.rotate),\n      borderRadius: this.state.borderRadius,\n      onSave: this.handleSave,\n      onLoadFailure: this.logCallback.bind(this, 'onLoadFailed'),\n      onLoadSuccess: this.logCallback.bind(this, 'onLoadSuccess'),\n      onImageReady: this.logCallback.bind(this, 'onImageReady'),\n      onImageLoad: this.logCallback.bind(this, 'onImageLoad'),\n      onDropFile: this.logCallback.bind(this, 'onDropFile'),\n      color: [0, 0, 0, 0.8],\n      style: styleCanvas,\n      image: this.state.image || UploadImg\n    })), __jsx(\"div\", {\n      className: 'zoom-inp'\n    }, __jsx(\"input\", {\n      name: \"scale\",\n      type: \"range\",\n      onChange: this.handleScale,\n      min: this.state.allowZoomOut ? '0.1' : '1',\n      max: \"4\",\n      step: \"0.01\",\n      defaultValue: \"1\"\n    })), __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '10px'\n      }\n    }, __jsx(\"img\", {\n      style: {\n        width: '15px'\n      },\n      src: IconRotateRight,\n      alt: \"rotate\",\n      onClick: e => this.rotateRight(e)\n    }))), __jsx(Text, {\n      fz: 14,\n      mb: 30,\n      grey6: true\n    }, \"Clear high-quality frontal face photos are very important so programmers and clients could learn about each other. Make sure the photo doesn\\u2019t include any personal or sensitive information you woudn\\u2019t like others to see.\"), __jsx(Dropzone, {\n      accept: \"image/jpeg, image/png, image/gif\",\n      onDrop: this.onDrop.bind(this)\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => __jsx(\"section\", null, __jsx(\"div\", getRootProps(), __jsx(\"input\", getInputProps()), __jsx(Button, {\n      transparent: true\n    }, \"Upload a photo\")))));\n  }\n\n}","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/components/controls/Upload/RegAvatar.js"],"names":["React","Dropzone","AvatarEditor","UploadImg","IcAvatar","Text","Button","IconRotateRight","RegAvatar","Component","constructor","props","state","image","editor","getImageScaledToCanvas","toBlob","blob","bind","data","img","toDataURL","rect","getCroppingRect","setState","preview","scale","width","height","borderRadius","e","target","value","checked","allowZoomOut","preventDefault","rotate","x","position","y","files","positiD","onCrop","onCropDefault","onCloseDefault","onDrop","accepted","rejected","length","handleScale","console","log","fileError","defaultPreview","newAvatar","binary","atob","split","array","i","push","charCodeAt","Blob","Uint8Array","type","avatar","logCallback","onLoadSuccess","render","profilePhotoURL","dropStyle","styleCanvas","ActionLink","document","getElementById","click","setEditorRef","handlePositionChange","handleSave","textAlign","marginBottom","rotateRight","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Dropzone from 'react-dropzone'\r\nimport AvatarEditor from 'react-avatar-editor'\r\n\r\n\r\nimport {UploadImg, IcAvatar} from '../../StyledComponents/Icon'\r\nimport {Text} from \"../../StyledComponents/Text\";\r\n\r\nimport './styles.css'\r\nimport {Button} from \"../Button/Button\";\r\nimport IconRotateRight from '../../../static/img/icon-rotate-right.png'\r\n\r\nexport default class RegAvatar extends React.Component {\r\n    getImage = () => {\r\n        if(this.state.image) {\r\n            this.editor.getImageScaledToCanvas().toBlob(function (blob) {\r\n                return blob;\r\n            }.bind(this), 'image/jpeg', 1);\r\n        }\r\n    }\r\n    handleSave = data => {\r\n        const img = this.editor.getImageScaledToCanvas().toDataURL()\r\n        const rect = this.editor.getCroppingRect()\r\n\r\n        this.setState({\r\n            preview: {\r\n                img,\r\n                rect,\r\n                scale: this.state.scale,\r\n                width: this.state.width,\r\n                height: this.state.height,\r\n                borderRadius: this.state.borderRadius\r\n            }\r\n        })\r\n    }\r\n    handleScale = e => {\r\n        const scale = parseFloat(e.target.value)\r\n        this.setState({ scale })\r\n    }\r\n    handleAllowZoomOut = ({ target: { checked: allowZoomOut } }) => {\r\n        this.setState({ allowZoomOut })\r\n    }\r\n    rotateLeft = e => {\r\n        e.preventDefault()\r\n\r\n        this.setState({\r\n            rotate: this.state.rotate - 90\r\n        })\r\n    }\r\n    rotateRight = e => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            rotate: this.state.rotate + 90\r\n        })\r\n    }\r\n    handleBorderRadius = e => {\r\n        const borderRadius = parseInt(e.target.value)\r\n        this.setState({ borderRadius })\r\n    }\r\n    handleXPosition = e => {\r\n        const x = parseFloat(e.target.value)\r\n        this.setState({ position: { ...this.state.position, x } })\r\n    }\r\n    handleYPosition = e => {\r\n        const y = parseFloat(e.target.value)\r\n        this.setState({ position: { ...this.state.position, y } })\r\n    }\r\n    handleWidth = e => {\r\n        const width = parseInt(e.target.value)\r\n        this.setState({ width })\r\n    }\r\n    handleHeight = e => {\r\n        const height = parseInt(e.target.value)\r\n        this.setState({ height })\r\n    }\r\n    setEditorRef = editor => {\r\n        if (editor) this.editor = editor\r\n    }\r\n    handlePositionChange = position => {\r\n        this.setState({ position })\r\n    }\r\n    handleNewImage = e => {\r\n        this.setState({ image: e.target.files[0] })\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allowZoomOut: false,\r\n            positiD: { x: 0.5, y: 0.5 },\r\n            scale: 1,\r\n            rotate: 0,\r\n            borderRadius: 256,\r\n            preview: null,\r\n            width: 512,\r\n            height: 512\r\n        };\r\n\r\n        this.onCrop = this.onCrop.bind(this)\r\n        this.onCropDefault = this.onCropDefault.bind(this)\r\n        this.onCloseDefault = this.onCloseDefault.bind(this)\r\n    }\r\n\r\n    onDrop(accepted, rejected) {\r\n        if (accepted.length) {\r\n            this.setState({image: accepted[0]});\r\n            this.handleScale({target:{value:'1.01'}})\r\n        }\r\n        if (rejected.length) {\r\n            console.log('rejected')\r\n            this.setState({fileError: 'The uploaded file seems to have incorrect format'})\r\n        }\r\n    }\r\n\r\n    onCropDefault(preview) {\r\n        this.setState({defaultPreview: preview, newAvatar: true})\r\n\r\n        let binary = atob(preview.split(',')[1]);\r\n        let array = [];\r\n        for(let i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        let img =  new Blob([new Uint8Array(array)], {type: 'image/jpeg'});\r\n        this.setState({avatar: img})\r\n    }\r\n\r\n    onCrop(preview) {\r\n        this.setState({preview})\r\n    }\r\n\r\n    onCloseDefault() {\r\n        this.setState({defaultPreview: null, newAvatar: false, preview: null})\r\n    }\r\n\r\n    logCallback (e) {\r\n        if(e === 'onLoadSuccess' && this.props.onLoadSuccess) this.props.onLoadSuccess()\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            profilePhotoURL\r\n        } = this.props\r\n        let image = this.state.image;\r\n\r\n        const dropStyle = {\r\n            'width': '100%',\r\n            'height': 'auto',\r\n            'margin': '0 auto',\r\n            'border': 'none',\r\n            'display':'table'\r\n        }\r\n\r\n        let styleCanvas = {\r\n            'width': '240px',\r\n            'height': '240px',\r\n        }\r\n\r\n        function ActionLink() {\r\n            document.getElementById('input_load_file_2').click();\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                {/* default state. No photo */}\r\n                {!image &&\r\n                <div className=\"shell-load-img-cart\">\r\n                    <div className=\"block-load-img\">\r\n                        <section className=\"section-wrap-upload\">\r\n                            {profilePhotoURL ?\r\n                                <img src={profilePhotoURL} alt='logo' />\r\n                                :\r\n                                <IcAvatar />\r\n                            }\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n                }\r\n\r\n\r\n                {/*Image is chosen*/}\r\n                {image &&\r\n                <React.Fragment>\r\n                    <div className=\"wrap-canvas-avatar\">\r\n                        <AvatarEditor\r\n                            ref={this.setEditorRef}\r\n                            scale={parseFloat(this.state.scale)}\r\n                            width={this.state.width}\r\n                            height={this.state.height}\r\n                            position={this.state.position}\r\n                            onPositionChange={this.handlePositionChange}\r\n                            rotate={parseFloat(this.state.rotate)}\r\n                            borderRadius={this.state.borderRadius}\r\n                            onSave={this.handleSave}\r\n                            onLoadFailure={this.logCallback.bind(this, 'onLoadFailed')}\r\n                            onLoadSuccess={this.logCallback.bind(this, 'onLoadSuccess')}\r\n                            onImageReady={this.logCallback.bind(this, 'onImageReady')}\r\n                            onImageLoad={this.logCallback.bind(this, 'onImageLoad')}\r\n                            onDropFile={this.logCallback.bind(this, 'onDropFile')}\r\n                            color={[0, 0, 0, 0.8]}\r\n                            style={styleCanvas}\r\n                            image={this.state.image || UploadImg}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={'zoom-inp'}>\r\n                        <input\r\n                            name='scale'\r\n                            type='range'\r\n                            onChange={this.handleScale}\r\n                            min={this.state.allowZoomOut ? '0.1' : '1'}\r\n                            max='4'\r\n                            step='0.01'\r\n                            defaultValue='1'\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div style={{textAlign: 'center', marginBottom: '10px'}}>\r\n                        <img style={{width: '15px'}} src={IconRotateRight} alt=\"rotate\" onClick={(e) => this.rotateRight(e)}/>\r\n                    </div>\r\n                    {/*<div onClick={(e) => this.rotateRight(e)}>Right</div>*/}\r\n                </React.Fragment>\r\n                }\r\n\r\n                <Text fz={14} mb={30} grey6 >\r\n                    Clear high-quality frontal face photos are very\r\n                    important so programmers and clients could learn about each other.\r\n                    Make sure the photo doesn’t include any personal or sensitive information you woudn’t like others to see.\r\n                </Text>\r\n\r\n                <Dropzone accept=\"image/jpeg, image/png, image/gif\" onDrop={this.onDrop.bind(this)}>\r\n                    {({getRootProps, getInputProps}) => (\r\n                        <section>\r\n                            <div {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <Button transparent >Upload a photo</Button>\r\n                            </div>\r\n                        </section>\r\n                    )}\r\n                </Dropzone>\r\n\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}