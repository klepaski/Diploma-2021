{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport Link from \"next/link\";\nimport Router, { useRouter } from 'next/router';\nimport Header from \"../../components/Header/Header\";\nimport { apiGetListChats } from \"../../actions/api\";\nimport { Title } from '../../components/Inbox/styledComponent';\nimport InboxItem from '../../components/Inbox/InboxItem';\nimport { Divider } from \"../../components/StyledComponents/Divider\";\nimport { MainContext } from \"../../components/contextProviders/MainContext\";\nexport default (function () {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useContext = useContext(MainContext),\n      me = _useContext.me;\n\n  var _useState = useState([]),\n      chats = _useState[0],\n      setChats = _useState[1];\n\n  var _useState2 = useState([]),\n      photos = _useState2[0],\n      setPhotos = _useState2[1];\n\n  var _useState3 = useState({\n    startDate: null,\n    endDate: null\n  }),\n      bookingDates = _useState3[0],\n      setBookingDates = _useState3[1];\n\n  var _useState4 = useState(true),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    apiGetListChats().then(function (res) {\n      setChats(res.data.reverse());\n      setLoading(false);\n    })[\"catch\"](function (e) {\n      setLoading(false);\n    });\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    isProfile: true\n  }), __jsx(React.Fragment, null, __jsx(Title, null, \"Inbox\"), __jsx(Divider, {\n    full: true,\n    grey: true\n  }), !loading ? __jsx(React.Fragment, null, chats.map(function (item, key) {\n    return __jsx(InboxItem, {\n      key: key,\n      chat: item,\n      me: me\n    });\n  })) : __jsx(React.Fragment, null, \"Loading...\")));\n});","map":{"version":3,"sources":["D:/git/webapp3/webapp/pages/inbox/index.js"],"names":["React","useState","useContext","useEffect","dynamic","Link","Router","useRouter","Header","apiGetListChats","Title","InboxItem","Divider","MainContext","router","id","query","me","chats","setChats","photos","setPhotos","startDate","endDate","bookingDates","setBookingDates","loading","setLoading","then","res","data","reverse","e","map","item","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAEA,SAAQC,eAAR,QAA8B,mBAA9B;AACA,SAAQC,KAAR,QAAoB,wCAApB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AAEA,SAAQC,OAAR,QAAsB,2CAAtB;AACA,SAAQC,WAAR,QAA0B,+CAA1B;AAGA,gBAAgB,YAAM;AAClB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AADkB,MAEVQ,EAFU,GAEHD,MAAM,CAACE,KAFJ,CAEVD,EAFU;;AAAA,oBAGLb,UAAU,CAACW,WAAD,CAHL;AAAA,MAGXI,EAHW,eAGXA,EAHW;;AAAA,kBAIQhB,QAAQ,CAAC,EAAD,CAJhB;AAAA,MAIXiB,KAJW;AAAA,MAIJC,QAJI;;AAAA,mBAKUlB,QAAQ,CAAC,EAAD,CALlB;AAAA,MAKXmB,MALW;AAAA,MAKHC,SALG;;AAAA,mBAMsBpB,QAAQ,CAAC;AAACqB,IAAAA,SAAS,EAAE,IAAZ;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAAD,CAN9B;AAAA,MAMXC,YANW;AAAA,MAMGC,eANH;;AAAA,mBAOYxB,QAAQ,CAAC,IAAD,CAPpB;AAAA,MAOXyB,OAPW;AAAA,MAOFC,UAPE;;AASlBxB,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,eAAe,GACVmB,IADL,CACU,UAAAC,GAAG,EAAI;AACTV,MAAAA,QAAQ,CAACU,GAAG,CAACC,IAAJ,CAASC,OAAT,EAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJL,WAKW,UAAAK,CAAC,EAAI;AACRL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAPL;AAQH,GATQ,EASN,EATM,CAAT;AAYA,SACI,4BACI,MAAC,MAAD;AAAQ,IAAA,SAAS;AAAjB,IADJ,EAEQ,4BACI,MAAC,KAAD,gBADJ,EAEI,MAAC,OAAD;AAAS,IAAA,IAAI,MAAb;AAAc,IAAA,IAAI;AAAlB,IAFJ,EAGK,CAACD,OAAD,GACD,4BACKR,KAAK,CAACe,GAAN,CAAU,UAACC,IAAD,EAAOC,GAAP;AAAA,WACH,MAAC,SAAD;AACI,MAAA,GAAG,EAAEA,GADT;AAEI,MAAA,IAAI,EAAED,IAFV;AAGI,MAAA,EAAE,EAAEjB;AAHR,MADG;AAAA,GAAV,CADL,CADC,GAWD,yCAdJ,CAFR,CADJ;AAsBH,CA3CD","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport Link from \"next/link\";\r\n\r\nimport Router, { useRouter } from 'next/router'\r\nimport Header from \"../../components/Header/Header\";\r\n\r\nimport {apiGetListChats} from \"../../actions/api\";\r\nimport {Title} from '../../components/Inbox/styledComponent'\r\nimport InboxItem from '../../components/Inbox/InboxItem'\r\n\r\nimport {Divider} from \"../../components/StyledComponents/Divider\"\r\nimport {MainContext} from \"../../components/contextProviders/MainContext\";\r\n\r\n\r\nexport default  () => {\r\n    const router = useRouter()\r\n    const { id } = router.query\r\n    const {me} = useContext(MainContext)\r\n    const [chats, setChats] = useState([])\r\n    const [photos, setPhotos] = useState([])\r\n    const [bookingDates, setBookingDates] = useState({startDate: null, endDate: null})\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        apiGetListChats()\r\n            .then(res => {\r\n                setChats(res.data.reverse())\r\n                setLoading(false)\r\n            })\r\n            .catch(e => {\r\n                setLoading(false)\r\n            })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header isProfile/>\r\n                <>\r\n                    <Title>Inbox</Title>\r\n                    <Divider full grey />\r\n                    {!loading ?\r\n                    <>\r\n                        {chats.map((item, key) =>\r\n                                <InboxItem\r\n                                    key={key}\r\n                                    chat={item}\r\n                                    me={me}\r\n                                />\r\n                        )}\r\n                    </>\r\n                    :\r\n                    <>Loading...</>\r\n                    }\r\n                </>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}