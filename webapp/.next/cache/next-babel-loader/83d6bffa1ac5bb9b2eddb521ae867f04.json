{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { modifyForReactSealect } from \"../../../utils/utils\";\nimport { Title, Label2 } from \"./../../Layouts/styledLayouts\";\nimport Select from \"../../controls/Select/Select\";\nimport { CounterLabel, YesNoLabel } from \"../Counter/Counter\";\nimport { Wrapper } from \"../../StyledComponents/Wrapper\";\nimport { Divider } from \"../../StyledComponents/Divider\";\nimport './styles.css';\nimport { Input } from \"../Input/Input\";\n\nvar OfferParams = function OfferParams(_ref) {\n  var params = _ref.params,\n      step = _ref.step,\n      onChange = _ref.onChange;\n  var paramsStep = params.filter(function (item) {\n    return item.step === step;\n  });\n\n  var preOnChangeSelect = function preOnChangeSelect(item, value) {\n    var clone = _Object$assign({}, item);\n\n    clone.value = value.value;\n    onChange(clone);\n  };\n\n  var preOnChangeBool = function preOnChangeBool(obj, value, item) {\n    var clone = _Object$assign({}, item);\n\n    clone.value = value === 'yes' ? true : false;\n    onChange(clone);\n  };\n\n  var preOnChangeInt = function preOnChangeInt(item, value) {\n    var clone = _Object$assign({}, item);\n\n    if (!value) value = 0;\n    clone.value = value.value;\n    onChange(clone);\n  };\n\n  var preOnChangeInput = function preOnChangeInput(item, value) {\n    var clone = _Object$assign({}, item);\n\n    clone.value = value;\n    onChange(clone);\n  };\n\n  console.log('paramsStep', paramsStep);\n  return __jsx(React.Fragment, null, paramsStep.map(function (item, key) {\n    var units = item.units ? \"(\".concat(item.units, \")\") : '';\n    if (item.units === 'Currency') units = '';\n    return __jsx(\"div\", {\n      className: \"z-item-params\",\n      key: key\n    }, item.type === 'list' && __jsx(\"div\", {\n      className: \"z-list-params\"\n    }, __jsx(Label2, null, \"\".concat(item.title, \" \").concat(units)), __jsx(Select, {\n      options: modifyForReactSealect(item.possibleValues),\n      value: item.value,\n      onChange: function onChange(value) {\n        return preOnChangeSelect(item, value);\n      },\n      mb: 25\n    })), item.type === 'input' && __jsx(\"div\", {\n      className: \"z-input-params\"\n    }, __jsx(Label2, null, \"\".concat(item.title, \" \").concat(units)), __jsx(Input, {\n      type: 'text',\n      value: item.value,\n      onChange: function onChange(e) {\n        return preOnChangeInput(item, e.target.value);\n      },\n      placeholder: '',\n      height40: true\n    })), item.type === 'int' && __jsx(\"div\", {\n      className: \"z-int-params\"\n    }, __jsx(CounterLabel, {\n      title: \"\".concat(item.title, \" \").concat(units),\n      name: '',\n      value: Number(item.value),\n      onChange: function onChange(val) {\n        return preOnChangeInt(item, val);\n      }\n    })), item.type === 'bool' && __jsx(\"div\", {\n      className: \"z-bool-params\"\n    }, __jsx(YesNoLabel, {\n      key: key,\n      keyArr: key,\n      title: \"\".concat(item.title, \" \").concat(units),\n      active: item.value,\n      params: item,\n      handleClick: preOnChangeBool\n    })));\n  }));\n};\n\nexport default OfferParams;","map":{"version":3,"sources":["D:/git/webapp3/webapp/components/controls/OfferParams/OfferParams.js"],"names":["React","useState","useContext","modifyForReactSealect","Title","Label2","Select","CounterLabel","YesNoLabel","Wrapper","Divider","Input","OfferParams","params","step","onChange","paramsStep","filter","item","preOnChangeSelect","value","clone","preOnChangeBool","obj","preOnChangeInt","preOnChangeInput","console","log","map","key","units","type","title","possibleValues","e","target","Number","val"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nimport {modifyForReactSealect} from \"../../../utils/utils\";\r\nimport {Title, Label2} from \"./../../Layouts/styledLayouts\";\r\nimport Select from \"../../controls/Select/Select\";\r\nimport {CounterLabel, YesNoLabel} from \"../Counter/Counter\";\r\nimport {Wrapper} from \"../../StyledComponents/Wrapper\";\r\nimport {Divider} from \"../../StyledComponents/Divider\";\r\n\r\nimport './styles.css'\r\nimport {Input} from \"../Input/Input\";\r\n\r\nconst OfferParams = ({params, step, onChange}) => {\r\n    let paramsStep = params.filter(item => item.step === step)\r\n\r\n    const preOnChangeSelect = (item, value) => {\r\n        let clone = Object.assign({}, item);\r\n        clone.value = value.value\r\n        onChange(clone)\r\n    }\r\n    const preOnChangeBool = (obj, value, item) => {\r\n        let clone = Object.assign({}, item);\r\n        clone.value = value === 'yes' ? true : false\r\n        onChange(clone)\r\n    }\r\n\r\n    const preOnChangeInt = (item, value) => {\r\n        let clone = Object.assign({}, item);\r\n        if(!value) value = 0\r\n        clone.value = value.value\r\n        onChange(clone)\r\n    }\r\n\r\n    const preOnChangeInput = (item, value) => {\r\n        let clone = Object.assign({}, item);\r\n        clone.value = value\r\n        onChange(clone)\r\n    }\r\n\r\n    console.log('paramsStep', paramsStep)\r\n\r\n    return (\r\n        <>\r\n            {paramsStep.map((item, key) => {\r\n                let units = item.units? `(${item.units})` : ''\r\n                if(item.units === 'Currency') units = ''\r\n\r\n                return (\r\n                    <div className='z-item-params' key={key}>\r\n                        {item.type === 'list' &&\r\n                        <div className='z-list-params' >\r\n                            <Label2>{`${item.title} ${units}`}</Label2>\r\n                            <Select\r\n                                options={modifyForReactSealect(item.possibleValues)}\r\n                                value={item.value}\r\n                                onChange={(value) => preOnChangeSelect(item, value)}\r\n                                mb={25}\r\n                            />\r\n                        </div>\r\n                        }\r\n\r\n                        {item.type === 'input' &&\r\n                        <div className='z-input-params' >\r\n                            <Label2>{`${item.title} ${units}`}</Label2>\r\n                            <Input type={'text'}\r\n                                   value={item.value}\r\n                                   onChange={e => preOnChangeInput(item, e.target.value)}\r\n                                   placeholder={''}\r\n                                   height40\r\n                            />\r\n                        </div>\r\n                        }\r\n\r\n                        {item.type === 'int' &&\r\n                        <div className='z-int-params' >\r\n                            <CounterLabel\r\n                                title={`${item.title} ${units}`}\r\n                                name={''}\r\n                                value={Number(item.value)}\r\n                                onChange={(val) => preOnChangeInt(item, val)}/>\r\n                        </div>\r\n                        }\r\n\r\n                        {item.type === 'bool' &&\r\n                        <div className='z-bool-params'>\r\n                            <YesNoLabel\r\n                                key={key}\r\n                                keyArr={key}\r\n                                title={`${item.title} ${units}`}\r\n                                active={item.value}\r\n                                params={item}\r\n                                handleClick={preOnChangeBool}/>\r\n                        </div>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                )\r\n            })}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OfferParams;\r\n"]},"metadata":{},"sourceType":"module"}