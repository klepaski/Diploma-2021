{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport Cropper from 'react-easy-crop';\nimport AvatarEditor from 'react-avatar-editor';\nimport 'cropperjs/dist/cropper.css';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { ArrowLeft, UploadImg } from '../StyledComponents/Icon';\nimport { Text } from '../StyledComponents/Text';\nimport { WrapperHeight } from '../StyledComponents/Wrapper';\nimport { modifySrc } from '../../utils/modifySrc';\nimport { TextArea } from '../controls/Input/Input';\nimport { CoverPhotoPreview } from './Photo';\n\nvar EditPhoto = function EditPhoto(_ref) {\n  var handleBack = _ref.handleBack,\n      handleRotate = _ref.handleRotate,\n      handleDelete = _ref.handleDelete,\n      photo = _ref.photo,\n      keyPhoto = _ref.keyPhoto,\n      onChangePhotoDescription = _ref.onChangePhotoDescription,\n      hidedenDescription = _ref.hidedenDescription,\n      loadingEdit = _ref.loadingEdit;\n\n  var _useState = useState(0),\n      step = _useState[0],\n      setStep = _useState[1];\n\n  var editorRef = useRef(null);\n\n  var _useState2 = useState(0),\n      rotateDeg = _useState2[0],\n      setRotateDeg = _useState2[1];\n\n  var _useState3 = useState({}),\n      image = _useState3[0],\n      setImage = _useState3[1];\n\n  var _useState4 = useState(0),\n      width = _useState4[0],\n      setWidth = _useState4[1];\n\n  var _useState5 = useState(0),\n      height = _useState5[0],\n      setHeight = _useState5[1];\n\n  var _useState6 = useState(null),\n      croppedImageUrl = _useState6[0],\n      setCroppedImageUrl = _useState6[1];\n\n  var _useState7 = useState(null),\n      blob = _useState7[0],\n      setBlob = _useState7[1]; // const [crop, setCrop] = useState({ aspect: 16 / 9 })\n\n\n  var _useState8 = useState({\n    x: 0,\n    y: 0\n  }),\n      crop = _useState8[0],\n      setCrop = _useState8[1];\n\n  var _useState9 = useState(1),\n      zoom = _useState9[0],\n      setZoom = _useState9[1];\n\n  var _useState10 = useState(null),\n      croppedAreaPixels = _useState10[0],\n      setCroppedAreaPixels = _useState10[1];\n\n  var _useState11 = useState(null),\n      croppedImage = _useState11[0],\n      setCroppedImage = _useState11[1];\n\n  var _useState12 = useState(false),\n      cropLoading = _useState12[0],\n      setCropLoading = _useState12[1];\n\n  var onCropComplete = useCallback(function (croppedArea, croppedAreaPixels) {\n    console.log(croppedArea, croppedAreaPixels);\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n  var editImage = photo.preview ? photo.preview : modifySrc(photo.photoUrl, 'offer'); // let imageRef = useRef(null)\n\n  var handleChangeStep = function handleChangeStep() {\n    if (step === 1 || step === 2) {\n      setStep(0);\n      return;\n    }\n\n    handleBack();\n  };\n\n  useEffect(function () {\n    var src = photo.preview ? photo.preview : modifySrc(photo.photoUrl);\n    photo.src = src;\n    var img = new Image();\n    img.src = src;\n\n    img.onload = function () {\n      setWidth(this.width);\n      setHeight(this.height);\n      setImage(photo);\n    };\n  }, []);\n\n  var rotateLeft = function rotateLeft(e) {\n    e.preventDefault();\n    setRotateDeg(rotateDeg - 90);\n  };\n\n  var rotateRight = function rotateRight(e) {\n    e.preventDefault();\n    setRotateDeg(rotateDeg + 90);\n  };\n\n  var handlePositionChange = function handlePositionChange(e) {};\n\n  var applyRotate = function applyRotate() {\n    if (rotateDeg === 0) {\n      handleBack();\n      return;\n    }\n\n    if (image) {\n      var url = editorRef.current.getImageScaledToCanvas().toDataURL();\n      editorRef.current.getImageScaledToCanvas().toBlob(function (blob) {\n        // return blob;\n        handleRotate(blob, url, keyPhoto);\n      }.bind(_this), 'image/jpeg', 1);\n    }\n  }; // const applyCrop = () => {\n  //     handleRotate(blob, croppedImageUrl, keyPhoto)\n  // }\n\n\n  var applyCrop = useCallback(function _callee() {\n    var _croppedImage;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setCropLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(getCroppedImg(editImage, croppedAreaPixels));\n\n          case 4:\n            _croppedImage = _context.sent;\n            console.log('donee', _croppedImage);\n            setCropLoading(false);\n            handleRotate(_croppedImage, _croppedImage, keyPhoto);\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0);\n            setCropLoading(false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]]);\n  }, [croppedAreaPixels]);\n  var styleCanvas = {\n    width: width,\n    height: height\n  };\n  var styleImg = {\n    width: '100%',\n    height: '100%',\n    background: \"url(\".concat(image.src, \") center center / contain no-repeat\"),\n    transform: \"rotate(\".concat(rotateDeg, \"deg)\")\n  }; // const onChangeCrop = crop => {\n  //     setCrop(crop);\n  // };\n  // const onCropComplete = crop => {\n  //     makeClientCrop(crop);\n  // };\n  // const onImageLoaded = image => {\n  //     // imageRef = image;\n  // };\n  // const makeClientCrop = async crop => {\n  //     if (imageRef.current && crop.width && crop.height) {\n  //         const croppedImageBlob = await getCroppedImg(\n  //             imageRef.current.imageRef,\n  //             crop,\n  //             'newFile.jpeg'\n  //         );\n  //         setBlob(croppedImageBlob)\n  //         let croppedImageUrl = window.URL.createObjectURL(croppedImageBlob);\n  //         // window.URL.revokeObjectURL(this.fileUrl);\n  //         setCroppedImageUrl(croppedImageUrl);\n  //     }\n  // }\n  // const getCroppedImg = async (image, crop, fileName) => {\n  //     const canvas = document.createElement('canvas');\n  //     const scaleX = image.naturalWidth / image.width;\n  //     const scaleY = image.naturalHeight / image.height;\n  //     canvas.width = Math.ceil(crop.width*scaleX);\n  //     canvas.height = Math.ceil(crop.height*scaleY);\n  //     const ctx = canvas.getContext('2d');\n  //\n  //     console.log('ctx', ctx)\n  //\n  //\n  //     ctx.drawImage(\n  //         image,\n  //         crop.x * scaleX,\n  //         crop.y * scaleY,\n  //         crop.width * scaleX,\n  //         crop.height * scaleY,\n  //         0,\n  //         0,\n  //         crop.width*scaleX,\n  //         crop.height*scaleY\n  //\n  //     );\n  //\n  //     return new Promise((resolve, reject) => {\n  //         canvas.toBlob(blob => {\n  //             if (!blob) {\n  //                 console.error('Canvas is empty');\n  //                 return;\n  //             }\n  //\n  //             blob.name = fileName;\n  //             resolve(blob)\n  //             // this.fileUrl = window.URL.createObjectURL(blob);\n  //             // window.URL.revokeObjectURL(this.fileUrl);\n  //             // resolve(this.fileUrl);\n  //         }, 'image/jpeg');\n  //     });\n  // }\n\n  return __jsx(React.Fragment, null, __jsx(WrapperHeight, null, __jsx(\"div\", {\n    className: 'z-photo-edit-header'\n  }, step !== 2 && __jsx(\"div\", {\n    className: \"display-flex\",\n    onClick: function onClick() {\n      return handleChangeStep();\n    }\n  }, __jsx(ArrowLeft, {\n    mr: 15\n  }), __jsx(Text, {\n    fz: 14\n  }, step === 0 && __jsx(React.Fragment, null, \"Description\"), step === 1 && __jsx(React.Fragment, null, \"Rotate photo\"), step === 2 && __jsx(React.Fragment, null, \"Crop photo\"))), step === 0 && __jsx(\"div\", {\n    className: \"display-flex\"\n  }, __jsx(\"div\", {\n    className: \"edit-photo-\\u0441hange-item\",\n    onClick: function onClick() {\n      return setStep(1);\n    }\n  }, \"rotate\"), __jsx(\"div\", {\n    className: \"edit-photo-\\u0441hange-item\",\n    onClick: function onClick() {\n      return setStep(2);\n    }\n  }, \"crop\"))), step === 0 && __jsx(React.Fragment, null, __jsx(CoverPhotoPreview, {\n    src: photo.preview ? photo.preview : modifySrc(photo.photoUrl, 'offer'),\n    mb: 40\n  }), !hidedenDescription && __jsx(TextArea, {\n    name: \"describe\",\n    value: photo.description || '',\n    onChange: function onChange(e) {\n      return onChangePhotoDescription(photo.id, e.target.value);\n    },\n    height: 90,\n    count: photo.description ? photo.description.length : '',\n    maxLength: 100,\n    placeholder: \"Add a short description of the photo, explain it to potential Clients\"\n  })), step === 1 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"photo-rotate-container\"\n  }, __jsx(\"div\", {\n    className: \"photo-rotate-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"photo-rotate-item\",\n    style: styleImg\n  }))), __jsx(\"div\", {\n    className: \"z-avatar-editor-wrapper\"\n  }, __jsx(AvatarEditor, {\n    ref: editorRef,\n    scale: 1,\n    width: width,\n    height: height,\n    onPositionChange: handlePositionChange,\n    rotate: rotateDeg,\n    borderRadius: 0,\n    color: [0, 0, 0, 0],\n    style: styleCanvas,\n    image: image.src\n  }))), step === 2 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"crop-container\"\n  }, __jsx(Cropper, {\n    image: editImage // image=\"https://thumbs.dreamstime.com/z/black-white-vertical-new-york-flatiron-building-stands-right-heart-manhattan-intersection-two-famous-nyc-landmarks-45486075.jpg\"\n    ,\n    crop: crop,\n    zoom: zoom,\n    aspect: 16 / 9,\n    onCropChange: setCrop,\n    onCropComplete: onCropComplete,\n    onZoomChange: setZoom\n  })))), __jsx(\"div\", {\n    className: \"edit-photo-footer\"\n  }, step === 0 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"edit-photo-delete-item\",\n    onClick: function onClick() {\n      return handleDelete(keyPhoto);\n    }\n  }, \"Delete this photo\")), step === 1 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"edit-photo-footer-item\",\n    onClick: function onClick(e) {\n      return rotateRight(e);\n    }\n  }, \"Rotate\"), __jsx(\"div\", {\n    className: \"edit-photo-footer-item\",\n    onClick: function onClick() {\n      return applyRotate();\n    }\n  }, loadingEdit ? 'Loading...' : 'Apply')), step === 2 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"edit-photo-footer-item\",\n    onClick: function onClick() {\n      return handleChangeStep();\n    }\n  }, \"Cancel\"), __jsx(\"div\", {\n    className: \"edit-photo-footer-item\",\n    onClick: function onClick() {\n      return applyCrop();\n    }\n  }, loadingEdit || cropLoading ? 'Loading...' : 'Apply'))));\n};\n\nexport default EditPhoto;\n\nvar createImage = function createImage(url) {\n  return new _Promise(function (resolve, reject) {\n    var image = new Image();\n    image.addEventListener('load', function () {\n      return resolve(image);\n    });\n    image.addEventListener('error', function (error) {\n      return reject(error);\n    });\n    image.setAttribute('crossOrigin', 'anonymous'); // needed to avoid cross-origin issues on CodeSandbox\n\n    image.src = url;\n  });\n};\n\nfunction getRadianAngle(degreeValue) {\n  return degreeValue * Math.PI / 180;\n}\n\nvar getCroppedImg = function getCroppedImg(imageSrc, pixelCrop) {\n  var rotation,\n      image,\n      canvas,\n      ctx,\n      maxSize,\n      safeArea,\n      data,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function getCroppedImg$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          rotation = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(createImage(imageSrc));\n\n        case 3:\n          image = _context2.sent;\n          canvas = document.createElement('canvas');\n          ctx = canvas.getContext('2d');\n          maxSize = Math.max(image.width, image.height);\n          safeArea = 2 * (maxSize / 2 * Math.sqrt(2)); // set each dimensions to double largest dimension to allow for a safe area for the\n          // image to rotate in without being clipped by canvas context\n\n          canvas.width = safeArea;\n          canvas.height = safeArea; // translate canvas context to a central location on image to allow rotating around the center.\n\n          ctx.translate(safeArea / 2, safeArea / 2);\n          ctx.rotate(getRadianAngle(rotation));\n          ctx.translate(-safeArea / 2, -safeArea / 2); // draw rotated image and store data.\n\n          ctx.drawImage(image, safeArea / 2 - image.width * 0.5, safeArea / 2 - image.height * 0.5);\n          data = ctx.getImageData(0, 0, safeArea, safeArea); // set canvas width to final desired crop size - this will clear existing context\n\n          canvas.width = pixelCrop.width;\n          canvas.height = pixelCrop.height; // paste generated rotate image with correct offsets for x,y crop values.\n\n          ctx.putImageData(data, 0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x, 0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y); // As Base64 string\n          // return canvas.toDataURL('image/jpeg');\n          // As a blob\n\n          return _context2.abrupt(\"return\", new _Promise(function (resolve) {\n            canvas.toBlob(function (file) {\n              resolve(file, URL.createObjectURL(file));\n            }, 'image/jpeg');\n          }));\n\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/components/Photo/EditPhoto.js"],"names":["React","useRef","useState","useEffect","useCallback","Cropper","AvatarEditor","ReactCrop","ArrowLeft","UploadImg","Text","WrapperHeight","modifySrc","TextArea","CoverPhotoPreview","EditPhoto","handleBack","handleRotate","handleDelete","photo","keyPhoto","onChangePhotoDescription","hidedenDescription","loadingEdit","step","setStep","editorRef","rotateDeg","setRotateDeg","image","setImage","width","setWidth","height","setHeight","croppedImageUrl","setCroppedImageUrl","blob","setBlob","x","y","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","croppedImage","setCroppedImage","cropLoading","setCropLoading","onCropComplete","croppedArea","console","log","editImage","preview","photoUrl","handleChangeStep","src","img","Image","onload","rotateLeft","e","preventDefault","rotateRight","handlePositionChange","applyRotate","url","current","getImageScaledToCanvas","toDataURL","toBlob","bind","applyCrop","getCroppedImg","error","styleCanvas","styleImg","background","transform","description","id","target","value","length","createImage","resolve","reject","addEventListener","setAttribute","getRadianAngle","degreeValue","Math","PI","imageSrc","pixelCrop","rotation","canvas","document","createElement","ctx","getContext","maxSize","max","safeArea","sqrt","translate","rotate","drawImage","data","getImageData","putImageData","file","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from 'react'\r\nimport Cropper from 'react-easy-crop'\r\nimport AvatarEditor from 'react-avatar-editor'\r\nimport 'cropperjs/dist/cropper.css'\r\nimport ReactCrop from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\n\r\nimport { ArrowLeft, UploadImg } from '../StyledComponents/Icon'\r\nimport { Text } from '../StyledComponents/Text'\r\nimport { WrapperHeight } from '../StyledComponents/Wrapper'\r\nimport { modifySrc } from '../../utils/modifySrc'\r\nimport { TextArea } from '../controls/Input/Input'\r\nimport { CoverPhotoPreview } from './Photo'\r\n\r\nconst EditPhoto = ({\r\n  handleBack,\r\n  handleRotate,\r\n  handleDelete,\r\n  photo,\r\n  keyPhoto,\r\n  onChangePhotoDescription,\r\n  hidedenDescription,\r\n  loadingEdit,\r\n}) => {\r\n  const [step, setStep] = useState(0)\r\n  const editorRef = useRef(null)\r\n  const [rotateDeg, setRotateDeg] = useState(0)\r\n  const [image, setImage] = useState({})\r\n  const [width, setWidth] = useState(0)\r\n  const [height, setHeight] = useState(0)\r\n\r\n  const [croppedImageUrl, setCroppedImageUrl] = useState(null)\r\n  const [blob, setBlob] = useState(null)\r\n  // const [crop, setCrop] = useState({ aspect: 16 / 9 })\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 })\r\n  const [zoom, setZoom] = useState(1)\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null)\r\n  const [croppedImage, setCroppedImage] = useState(null)\r\n  const [cropLoading, setCropLoading] = useState(false)\r\n\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    console.log(croppedArea, croppedAreaPixels)\r\n    setCroppedAreaPixels(croppedAreaPixels)\r\n  }, [])\r\n\r\n  const editImage = photo.preview ? photo.preview : modifySrc(photo.photoUrl, 'offer')\r\n\r\n  // let imageRef = useRef(null)\r\n\r\n  const handleChangeStep = () => {\r\n    if (step === 1 || step === 2) {\r\n      setStep(0)\r\n      return\r\n    }\r\n    handleBack()\r\n  }\r\n\r\n  useEffect(() => {\r\n    let src = photo.preview ? photo.preview : modifySrc(photo.photoUrl)\r\n    photo.src = src\r\n    let img = new Image()\r\n    img.src = src\r\n    img.onload = function () {\r\n      setWidth(this.width)\r\n      setHeight(this.height)\r\n      setImage(photo)\r\n    }\r\n  }, [])\r\n  const rotateLeft = (e) => {\r\n    e.preventDefault()\r\n    setRotateDeg(rotateDeg - 90)\r\n  }\r\n  const rotateRight = (e) => {\r\n    e.preventDefault()\r\n    setRotateDeg(rotateDeg + 90)\r\n  }\r\n  const handlePositionChange = (e) => {}\r\n  const applyRotate = () => {\r\n    if (rotateDeg === 0) {\r\n      handleBack()\r\n      return\r\n    }\r\n    if (image) {\r\n      const url = editorRef.current.getImageScaledToCanvas().toDataURL()\r\n      editorRef.current.getImageScaledToCanvas().toBlob(\r\n        function (blob) {\r\n          // return blob;\r\n          handleRotate(blob, url, keyPhoto)\r\n        }.bind(this),\r\n        'image/jpeg',\r\n        1,\r\n      )\r\n    }\r\n  }\r\n  // const applyCrop = () => {\r\n  //     handleRotate(blob, croppedImageUrl, keyPhoto)\r\n  // }\r\n  const applyCrop = useCallback(async () => {\r\n    setCropLoading(true)\r\n    try {\r\n      const croppedImage = await getCroppedImg(editImage, croppedAreaPixels)\r\n      console.log('donee', croppedImage)\r\n      setCropLoading(false)\r\n      handleRotate(croppedImage, croppedImage, keyPhoto)\r\n    } catch (e) {\r\n      console.error(e)\r\n      setCropLoading(false)\r\n    }\r\n  }, [croppedAreaPixels])\r\n\r\n  let styleCanvas = {\r\n    width: width,\r\n    height: height,\r\n  }\r\n  const styleImg = {\r\n    width: '100%',\r\n    height: '100%',\r\n    background: `url(${image.src}) center center / contain no-repeat`,\r\n    transform: `rotate(${rotateDeg}deg)`,\r\n  }\r\n\r\n  // const onChangeCrop = crop => {\r\n  //     setCrop(crop);\r\n  // };\r\n  // const onCropComplete = crop => {\r\n  //     makeClientCrop(crop);\r\n  // };\r\n  // const onImageLoaded = image => {\r\n  //     // imageRef = image;\r\n  // };\r\n\r\n  // const makeClientCrop = async crop => {\r\n  //     if (imageRef.current && crop.width && crop.height) {\r\n  //         const croppedImageBlob = await getCroppedImg(\r\n  //             imageRef.current.imageRef,\r\n  //             crop,\r\n  //             'newFile.jpeg'\r\n  //         );\r\n  //         setBlob(croppedImageBlob)\r\n  //         let croppedImageUrl = window.URL.createObjectURL(croppedImageBlob);\r\n  //         // window.URL.revokeObjectURL(this.fileUrl);\r\n  //         setCroppedImageUrl(croppedImageUrl);\r\n  //     }\r\n  // }\r\n\r\n  // const getCroppedImg = async (image, crop, fileName) => {\r\n  //     const canvas = document.createElement('canvas');\r\n  //     const scaleX = image.naturalWidth / image.width;\r\n  //     const scaleY = image.naturalHeight / image.height;\r\n  //     canvas.width = Math.ceil(crop.width*scaleX);\r\n  //     canvas.height = Math.ceil(crop.height*scaleY);\r\n  //     const ctx = canvas.getContext('2d');\r\n  //\r\n  //     console.log('ctx', ctx)\r\n  //\r\n  //\r\n  //     ctx.drawImage(\r\n  //         image,\r\n  //         crop.x * scaleX,\r\n  //         crop.y * scaleY,\r\n  //         crop.width * scaleX,\r\n  //         crop.height * scaleY,\r\n  //         0,\r\n  //         0,\r\n  //         crop.width*scaleX,\r\n  //         crop.height*scaleY\r\n  //\r\n  //     );\r\n  //\r\n  //     return new Promise((resolve, reject) => {\r\n  //         canvas.toBlob(blob => {\r\n  //             if (!blob) {\r\n  //                 console.error('Canvas is empty');\r\n  //                 return;\r\n  //             }\r\n  //\r\n  //             blob.name = fileName;\r\n  //             resolve(blob)\r\n  //             // this.fileUrl = window.URL.createObjectURL(blob);\r\n  //             // window.URL.revokeObjectURL(this.fileUrl);\r\n  //             // resolve(this.fileUrl);\r\n  //         }, 'image/jpeg');\r\n  //     });\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <WrapperHeight>\r\n        <div className={'z-photo-edit-header'}>\r\n          {step !== 2 && (\r\n            <div className=\"display-flex\" onClick={() => handleChangeStep()}>\r\n              <ArrowLeft mr={15} />\r\n              <Text fz={14}>\r\n                {step === 0 && <>Description</>}\r\n                {step === 1 && <>Rotate photo</>}\r\n                {step === 2 && <>Crop photo</>}\r\n              </Text>\r\n            </div>\r\n          )}\r\n          {step === 0 && (\r\n            <div className=\"display-flex\">\r\n              <div className=\"edit-photo-сhange-item\" onClick={() => setStep(1)}>\r\n                rotate\r\n              </div>\r\n              <div className=\"edit-photo-сhange-item\" onClick={() => setStep(2)}>\r\n                crop\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {step === 0 && (\r\n          <>\r\n            <CoverPhotoPreview\r\n              src={photo.preview ? photo.preview : modifySrc(photo.photoUrl, 'offer')}\r\n              mb={40}\r\n            />\r\n\r\n            {!hidedenDescription && (\r\n              <TextArea\r\n                name=\"describe\"\r\n                value={photo.description || ''}\r\n                onChange={(e) => onChangePhotoDescription(photo.id, e.target.value)}\r\n                height={90}\r\n                count={photo.description ? photo.description.length : ''}\r\n                maxLength={100}\r\n                placeholder=\"Add a short description of the photo, explain it to potential Clients\"\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {step === 1 && (\r\n          <>\r\n            <div className=\"photo-rotate-container\">\r\n              <div className=\"photo-rotate-wrapper\">\r\n                <div className=\"photo-rotate-item\" style={styleImg}></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"z-avatar-editor-wrapper\">\r\n              <AvatarEditor\r\n                ref={editorRef}\r\n                scale={1}\r\n                width={width}\r\n                height={height}\r\n                onPositionChange={handlePositionChange}\r\n                rotate={rotateDeg}\r\n                borderRadius={0}\r\n                color={[0, 0, 0, 0]}\r\n                style={styleCanvas}\r\n                image={image.src}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n        {step === 2 && (\r\n          <>\r\n            <div className=\"crop-container\">\r\n              <Cropper\r\n                image={editImage}\r\n                // image=\"https://thumbs.dreamstime.com/z/black-white-vertical-new-york-flatiron-building-stands-right-heart-manhattan-intersection-two-famous-nyc-landmarks-45486075.jpg\"\r\n                crop={crop}\r\n                zoom={zoom}\r\n                aspect={16 / 9}\r\n                onCropChange={setCrop}\r\n                onCropComplete={onCropComplete}\r\n                onZoomChange={setZoom}\r\n              />\r\n            </div>\r\n\r\n            {/*<ReactCrop*/}\r\n            {/*    ref={imageRef}*/}\r\n            {/*    src={photo.preview ? photo.preview : modifySrc(photo.photoUrl, 'offer')}*/}\r\n            {/*    crop={crop}*/}\r\n            {/*    onImageLoaded={onImageLoaded}*/}\r\n            {/*    onComplete={onCropComplete}*/}\r\n            {/*    onChange={onChangeCrop}*/}\r\n            {/*/>*/}\r\n\r\n            {/*{croppedImageUrl && (*/}\r\n            {/*    <div className=\"z-cropped-wrapper\">*/}\r\n            {/*        <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedImageUrl} />*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n          </>\r\n        )}\r\n      </WrapperHeight>\r\n\r\n      <div className=\"edit-photo-footer\">\r\n        {step === 0 && (\r\n          <>\r\n            <div className=\"edit-photo-delete-item\" onClick={() => handleDelete(keyPhoto)}>\r\n              Delete this photo\r\n            </div>\r\n            {/*<div className='edit-photo-footer-item' onClick={() => handleDelete(keyPhoto)}>Delete this photo</div>*/}\r\n          </>\r\n        )}\r\n        {step === 1 && (\r\n          <>\r\n            <div className=\"edit-photo-footer-item\" onClick={(e) => rotateRight(e)}>\r\n              Rotate\r\n            </div>\r\n            <div className=\"edit-photo-footer-item\" onClick={() => applyRotate()}>\r\n              {loadingEdit ? 'Loading...' : 'Apply'}\r\n            </div>\r\n          </>\r\n        )}\r\n        {step === 2 && (\r\n          <>\r\n            <div className=\"edit-photo-footer-item\" onClick={() => handleChangeStep()}>\r\n              Cancel\r\n            </div>\r\n            <div className=\"edit-photo-footer-item\" onClick={() => applyCrop()}>\r\n              {loadingEdit || cropLoading ? 'Loading...' : 'Apply'}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditPhoto\r\n\r\nconst createImage = (url) =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image()\r\n    image.addEventListener('load', () => resolve(image))\r\n    image.addEventListener('error', (error) => reject(error))\r\n    image.setAttribute('crossOrigin', 'anonymous') // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url\r\n  })\r\n\r\nfunction getRadianAngle(degreeValue) {\r\n  return (degreeValue * Math.PI) / 180\r\n}\r\n\r\nconst getCroppedImg = async (imageSrc, pixelCrop, rotation = 0) => {\r\n  const image = await createImage(imageSrc)\r\n  const canvas = document.createElement('canvas')\r\n  const ctx = canvas.getContext('2d')\r\n\r\n  const maxSize = Math.max(image.width, image.height)\r\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2))\r\n\r\n  // set each dimensions to double largest dimension to allow for a safe area for the\r\n  // image to rotate in without being clipped by canvas context\r\n  canvas.width = safeArea\r\n  canvas.height = safeArea\r\n\r\n  // translate canvas context to a central location on image to allow rotating around the center.\r\n  ctx.translate(safeArea / 2, safeArea / 2)\r\n  ctx.rotate(getRadianAngle(rotation))\r\n  ctx.translate(-safeArea / 2, -safeArea / 2)\r\n\r\n  // draw rotated image and store data.\r\n  ctx.drawImage(image, safeArea / 2 - image.width * 0.5, safeArea / 2 - image.height * 0.5)\r\n  const data = ctx.getImageData(0, 0, safeArea, safeArea)\r\n\r\n  // set canvas width to final desired crop size - this will clear existing context\r\n  canvas.width = pixelCrop.width\r\n  canvas.height = pixelCrop.height\r\n\r\n  // paste generated rotate image with correct offsets for x,y crop values.\r\n  ctx.putImageData(\r\n    data,\r\n    0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\r\n    0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y,\r\n  )\r\n\r\n  // As Base64 string\r\n  // return canvas.toDataURL('image/jpeg');\r\n\r\n  // As a blob\r\n  return new Promise((resolve) => {\r\n    canvas.toBlob((file) => {\r\n      resolve(file, URL.createObjectURL(file))\r\n    }, 'image/jpeg')\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}