{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment/moment';\nimport { MenuSettingsWrapper, MenuSettingsItem } from '../../components/Profile/styledProfileHeader';\nimport { Text } from \"../StyledComponents/Text\";\nimport { Input, TextArea } from \"../controls/Input/Input\";\nimport Select from \"../controls/Select/Select\";\nimport DatePicker from \"../controls/DateTimePickers/Datepicker\";\nimport { Wrapper } from \"../StyledComponents/Wrapper\";\nimport { listCountries, listLanguages } from \"../../utils/countriesLanguages\";\nimport { Divider } from \"../StyledComponents/Divider\";\nimport { Button } from \"../controls/Button/Button\";\nimport validate from \"../../utils/validation\";\nimport { apiChangePassword } from \"../../actions/api\";\nimport { showNotification } from \"../../utils/notification\";\nimport { MainContext } from \"../contextProviders/MainContext\";\n\nvar Security = function Security(props) {\n  var _useContext = useContext(MainContext),\n      me = _useContext.me,\n      setMe = _useContext.setMe;\n\n  var _useState = useState(''),\n      oldPassword = _useState[0],\n      setOldPassword = _useState[1];\n\n  var _useState2 = useState(''),\n      newPassword = _useState2[0],\n      setNewPassword = _useState2[1];\n\n  var _useState3 = useState(''),\n      errorNewPassword = _useState3[0],\n      setErrorNewPassword = _useState3[1];\n\n  var _useState4 = useState(''),\n      confirmPassword = _useState4[0],\n      setConfirmPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      error = _useState5[0],\n      setError = _useState5[1];\n\n  var _useState6 = useState(''),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  useEffect(function () {\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords don't match\");\n    } else {\n      setError(null);\n    }\n  }, [newPassword, confirmPassword]);\n\n  var onChange = function onChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value,\n        required = _e$target.required;\n\n    switch (name) {\n      case 'oldPassword':\n        setOldPassword(value);\n        break;\n\n      case 'newPassword':\n        setNewPassword(value);\n        if (value.length >= 6) setErrorNewPassword('');\n        break;\n\n      case 'confirmPassword':\n        setConfirmPassword(value);\n        break;\n    }\n  };\n\n  var onSave = function onSave() {\n    var data = {\n      oldPassword: oldPassword,\n      newPassword: newPassword\n    };\n\n    if (newPassword.length < 6) {\n      setErrorNewPassword('Min length 6 symbols');\n      return;\n    }\n\n    setLoading(true);\n    apiChangePassword(data).then(function _callee(res) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              showNotification('info', 'Your password was updated successfully');\n              setLoading(false);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    })[\"catch\"](function (e) {\n      setLoading(false);\n      showNotification('error', e);\n    });\n  };\n\n  var disabled = !oldPassword || !newPassword || !confirmPassword || error;\n  return __jsx(React.Fragment, null, __jsx(Text, {\n    bold: true,\n    fz: 18,\n    mb: 20\n  }, \"Security\"), __jsx(Text, {\n    fz: 14,\n    mb: '5px'\n  }, \"Old Password\"), __jsx(Input, {\n    type: 'password',\n    name: \"oldPassword\",\n    value: oldPassword,\n    onChange: onChange,\n    mb: 10,\n    placeholder: \"\"\n  }), __jsx(Text, {\n    fz: 14,\n    mb: '5px',\n    mt: 20\n  }, \"New Password\"), __jsx(Input, {\n    type: 'password',\n    name: \"newPassword\",\n    value: newPassword,\n    error: errorNewPassword,\n    onChange: onChange,\n    mb: 10,\n    placeholder: \"\"\n  }), __jsx(Text, {\n    fz: 14,\n    mb: '5px',\n    mt: 20\n  }, \"Confirm Password\"), __jsx(Input, {\n    type: 'password',\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: onChange,\n    mb: 10,\n    placeholder: \"\",\n    error: confirmPassword && error\n  }), __jsx(Button, {\n    blue: true,\n    onClick: onSave,\n    loading: loading,\n    disabled: disabled\n  }, \"Update Password\"));\n};\n\nexport default Security;","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/components/Profile/Security.js"],"names":["React","useState","useContext","useEffect","moment","MenuSettingsWrapper","MenuSettingsItem","Text","Input","TextArea","Select","DatePicker","Wrapper","listCountries","listLanguages","Divider","Button","validate","apiChangePassword","showNotification","MainContext","Security","props","me","setMe","oldPassword","setOldPassword","newPassword","setNewPassword","errorNewPassword","setErrorNewPassword","confirmPassword","setConfirmPassword","error","setError","loading","setLoading","onChange","e","target","name","value","required","length","onSave","data","then","res","disabled"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport moment from 'moment/moment'\r\n\r\nimport {MenuSettingsWrapper, MenuSettingsItem} from '../../components/Profile/styledProfileHeader'\r\nimport {Text} from \"../StyledComponents/Text\";\r\nimport {Input, TextArea} from \"../controls/Input/Input\";\r\nimport Select from \"../controls/Select/Select\";\r\nimport DatePicker from \"../controls/DateTimePickers/Datepicker\";\r\nimport {Wrapper} from \"../StyledComponents/Wrapper\";\r\nimport {listCountries, listLanguages} from \"../../utils/countriesLanguages\";\r\nimport {Divider} from \"../StyledComponents/Divider\";\r\nimport {Button} from \"../controls/Button/Button\";\r\nimport validate from \"../../utils/validation\";\r\nimport {apiChangePassword} from \"../../actions/api\";\r\nimport {showNotification} from \"../../utils/notification\";\r\nimport {MainContext} from \"../contextProviders/MainContext\";\r\n\r\n\r\nconst Security = (props) => {\r\n    const {me, setMe} = useContext(MainContext)\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [errorNewPassword, setErrorNewPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(newPassword !== confirmPassword) {\r\n            setError(`Passwords don't match`)\r\n        } else {\r\n            setError(null)\r\n        }\r\n    }, [newPassword, confirmPassword])\r\n\r\n    const onChange = e => {\r\n        let {name, value, required} = e.target\r\n        switch(name) {\r\n            case 'oldPassword':\r\n                setOldPassword(value)\r\n                break;\r\n            case 'newPassword':\r\n                setNewPassword(value)\r\n                if(value.length >= 6) setErrorNewPassword('')\r\n                break;\r\n            case 'confirmPassword':\r\n                setConfirmPassword(value)\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const onSave = () => {\r\n        let data = {\r\n            oldPassword: oldPassword,\r\n            newPassword: newPassword\r\n        }\r\n        if(newPassword.length < 6) {\r\n            setErrorNewPassword('Min length 6 symbols')\r\n            return\r\n        }\r\n        setLoading(true)\r\n        apiChangePassword(data)\r\n            .then(async (res) => {\r\n                showNotification('info', 'Your password was updated successfully')\r\n                setLoading(false)\r\n            })\r\n            .catch((e) => {\r\n                setLoading(false)\r\n                showNotification('error', e)\r\n            });\r\n    }\r\n\r\n    const disabled = !oldPassword || !newPassword || !confirmPassword || error\r\n\r\n    return (\r\n        <>\r\n            <Text bold fz={18} mb={20} >Security</Text>\r\n            <Text fz={14} mb={'5px'} >Old Password</Text>\r\n            <Input type={'password'}\r\n                   name=\"oldPassword\"\r\n                   value={oldPassword}\r\n                   onChange={onChange}\r\n                   mb={10}\r\n                   placeholder=\"\"\r\n            />\r\n            <Text fz={14} mb={'5px'} mt={20} >New Password</Text>\r\n            <Input type={'password'}\r\n                   name=\"newPassword\"\r\n                   value={newPassword}\r\n                   error={errorNewPassword}\r\n                   onChange={onChange}\r\n                   mb={10}\r\n                   placeholder=\"\"\r\n            />\r\n            <Text fz={14} mb={'5px'} mt={20} >Confirm Password</Text>\r\n            <Input type={'password'}\r\n                   name=\"confirmPassword\"\r\n                   value={confirmPassword}\r\n                   onChange={onChange}\r\n                   mb={10}\r\n                   placeholder=\"\"\r\n                   error={confirmPassword && error}\r\n            />\r\n\r\n\r\n\r\n            <Button blue onClick={onSave} loading={loading} disabled={disabled} >Update Password</Button>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Security;\r\n"]},"metadata":{},"sourceType":"module"}