{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { space } from 'styled-system';\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n  float: left;\n`;\nconst CheckboxWrapper = styled.div`\n  ${space};\n  width: 100%;\n  display: flex;\n  margin-bottom: 10px;\n`;\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`;\nconst HiddenCheckbox = styled.input.attrs({\n  type: 'checkbox'\n})`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  background: ${props => props.checked ? '#00C874' : 'transparent'}\n  border: 1px solid ${props => props.checked ? '#00C874' : '#979797'};\n  border-radius: 2px;\n  transition: all 150ms;\n  \n  ${props => props.blue && css`\n        background: ${props => props.checked ? '#6436C7' : 'transparent'}\n        border: 1px solid ${props => props.checked ? '#6436C7' : '#979797'};\n    `}\n\n  ${HiddenCheckbox}:focus + & {\n    // box-shadow: 0 0 0 2px #09ee7f;\n  }\n\n  ${Icon} {\n    visibility: ${props => props.checked ? 'visible' : 'hidden'}\n  }\n`;\nconst Label = styled.div`\n  margin-left: 32px;\n  font-size: ${props => props.fz ? `${props.fz}px` : '12px'};\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst Checkbox = (_ref) => {\n  let {\n    className,\n    checked,\n    blue\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"checked\", \"blue\"]);\n\n  return __jsx(CheckboxContainer, {\n    className: className\n  }, __jsx(HiddenCheckbox, _extends({\n    checked: checked\n  }, props)), __jsx(StyledCheckbox, {\n    checked: checked,\n    blue: blue\n  }, __jsx(Icon, {\n    viewBox: \"0 0 24 24\"\n  }, __jsx(\"polyline\", {\n    points: \"20 6 9 17 4 12\"\n  }))));\n};\n\nconst CheckboxWithLabel = ({\n  checked,\n  onChange,\n  label,\n  fz,\n  blue\n}) => {\n  return __jsx(CheckboxWrapper, null, __jsx(\"label\", null, __jsx(Checkbox, {\n    checked: checked,\n    onChange: onChange,\n    blue: blue\n  }), __jsx(Label, {\n    fz: fz\n  }, label)));\n};\n\nexport { Checkbox, CheckboxWithLabel };","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/components/controls/Checkbox/Checkbox.js"],"names":["React","styled","css","space","CheckboxContainer","div","CheckboxWrapper","Icon","svg","HiddenCheckbox","input","attrs","type","StyledCheckbox","props","checked","blue","Label","fz","Checkbox","className","CheckboxWithLabel","onChange","label"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,MAAMC,iBAAiB,GAAGH,MAAM,CAACI,GAAI;;;;CAArC;AAKA,MAAMC,eAAe,GAAGL,MAAM,CAACI,GAAI;IAC/BF,KAAM;;;;CADV;AAMA,MAAMI,IAAI,GAAGN,MAAM,CAACO,GAAI;;;;CAAxB;AAKA,MAAMC,cAAc,GAAGR,MAAM,CAACS,KAAP,CAAaC,KAAb,CAAmB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAyC;;;;;;;;;;;CAAhE;AAaA,MAAMC,cAAc,GAAGZ,MAAM,CAACI,GAAI;;;;gBAIlBS,KAAK,IAAKA,KAAK,CAACC,OAAN,GAAgB,SAAhB,GAA4B,aAAe;sBAC/CD,KAAK,IAAKA,KAAK,CAACC,OAAN,GAAgB,SAAhB,GAA4B,SAAW;;;;IAInED,KAAK,IACLA,KAAK,CAACE,IAAN,IACAd,GAAI;sBACcY,KAAK,IAAKA,KAAK,CAACC,OAAN,GAAgB,SAAhB,GAA4B,aAAe;4BAC/CD,KAAK,IAAKA,KAAK,CAACC,OAAN,GAAgB,SAAhB,GAA4B,SAAW;KACvE;;IAEFN,cAAe;;;;IAIfF,IAAK;kBACSO,KAAK,IAAKA,KAAK,CAACC,OAAN,GAAgB,SAAhB,GAA4B,QAAU;;CArBlE;AAyBA,MAAME,KAAK,GAAGhB,MAAM,CAACI,GAAI;;eAEVS,KAAK,IAAIA,KAAK,CAACI,EAAN,GAAY,GAAEJ,KAAK,CAACI,EAAG,IAAvB,GAA6B,MAAO;;CAF5D;;AAQA,MAAMC,QAAQ,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAF;AAAaL,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,GAAD;AAAA,MAAgCF,KAAhC;;AAAA,SACb,MAAC,iBAAD;AAAmB,IAAA,SAAS,EAAEM;AAA9B,KACI,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAEL;AAAzB,KAAsCD,KAAtC,EADJ,EAEI,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAEC,OAAzB;AAAkC,IAAA,IAAI,EAAEC;AAAxC,KACI,MAAC,IAAD;AAAM,IAAA,OAAO,EAAC;AAAd,KACI;AAAU,IAAA,MAAM,EAAC;AAAjB,IADJ,CADJ,CAFJ,CADa;AAAA,CAAjB;;AAWA,MAAMK,iBAAiB,GAAG,CAAC;AAACN,EAAAA,OAAD;AAAUO,EAAAA,QAAV;AAAoBC,EAAAA,KAApB;AAA2BL,EAAAA,EAA3B;AAA+BF,EAAAA;AAA/B,CAAD,KAA0C;AAChE,SACI,MAAC,eAAD,QACI,qBACI,MAAC,QAAD;AACI,IAAA,OAAO,EAAED,OADb;AAEI,IAAA,QAAQ,EAAEO,QAFd;AAGI,IAAA,IAAI,EAAEN;AAHV,IADJ,EAMI,MAAC,KAAD;AAAO,IAAA,EAAE,EAAEE;AAAX,KACKK,KADL,CANJ,CADJ,CADJ;AAeH,CAhBD;;AAkBA,SAAQJ,QAAR,EAAkBE,iBAAlB","sourcesContent":["import React from 'react'\r\nimport styled, {css} from 'styled-components'\r\nimport { space } from 'styled-system'\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  float: left;\r\n`\r\nconst CheckboxWrapper = styled.div`\r\n  ${space};\r\n  width: 100%;\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n`\r\nconst Icon = styled.svg`\r\n  fill: none;\r\n  stroke: white;\r\n  stroke-width: 2px;\r\n`\r\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`\r\n\r\nconst StyledCheckbox = styled.div`\r\n  display: inline-block;\r\n  width: 18px;\r\n  height: 18px;\r\n  background: ${props => (props.checked ? '#00C874' : 'transparent')}\r\n  border: 1px solid ${props => (props.checked ? '#00C874' : '#979797')};\r\n  border-radius: 2px;\r\n  transition: all 150ms;\r\n  \r\n  ${props =>\r\n    props.blue &&\r\n    css`\r\n        background: ${props => (props.checked ? '#6436C7' : 'transparent')}\r\n        border: 1px solid ${props => (props.checked ? '#6436C7' : '#979797')};\r\n    `}\r\n\r\n  ${HiddenCheckbox}:focus + & {\r\n    // box-shadow: 0 0 0 2px #09ee7f;\r\n  }\r\n\r\n  ${Icon} {\r\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')}\r\n  }\r\n`\r\n\r\nconst Label = styled.div`\r\n  margin-left: 32px;\r\n  font-size: ${props => props.fz ? `${props.fz}px` : '12px'};\r\n  color: rgba(0, 0, 0, 0.8);\r\n`\r\n\r\n\r\n\r\nconst Checkbox = ({ className, checked, blue, ...props }) => (\r\n    <CheckboxContainer className={className}>\r\n        <HiddenCheckbox checked={checked} {...props} />\r\n        <StyledCheckbox checked={checked} blue={blue}>\r\n            <Icon viewBox=\"0 0 24 24\">\r\n                <polyline points=\"20 6 9 17 4 12\" />\r\n            </Icon>\r\n        </StyledCheckbox>\r\n    </CheckboxContainer>\r\n)\r\n\r\nconst CheckboxWithLabel = ({checked, onChange, label, fz, blue}) => {\r\n    return (\r\n        <CheckboxWrapper>\r\n            <label>\r\n                <Checkbox\r\n                    checked={checked}\r\n                    onChange={onChange}\r\n                    blue={blue}\r\n                />\r\n                <Label fz={fz} >\r\n                    {label}\r\n                </Label>\r\n            </label>\r\n        </CheckboxWrapper>\r\n    )\r\n\r\n}\r\n\r\nexport {Checkbox, CheckboxWithLabel}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}