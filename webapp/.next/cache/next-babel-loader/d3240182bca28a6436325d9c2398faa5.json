{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport { space } from 'styled-system';\nimport { Check } from \"../../StyledComponents/Icon\";\nimport { Text } from \"../../StyledComponents/Text\";\nimport { Counter } from \"../Counter/Counter\";\nimport { Button } from \"../Button/Button\";\nconst InputWrapper = styled.div`\n  ${space};\n  position: relative;\n  min-height: 61px;\n  height: 61px;\n  width: 100%;\n`;\nconst InputStyled = styled.input.attrs(props => ({\n  type: props.type\n}))`\n  // ${space};\n  font-size: ${props => props.fz ? `${props.fz}px` : '14px'}\n  color: rgba(1, 1, 1, 0.8);\n  width: 100%;\n  height: ${props => props.height40 ? \"40px\" : \"46px\"}\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n  padding: 13px;\n  box-sizing: border-box;\n  \n  :focus {\n    outline: none;\n  }\n  ::-webkit-input-placeholder {\n      color: rgba(1, 1, 1, 0.5);\n    }\n    :-ms-input-placeholder { \n      color: rgba(1, 1, 1, 0.5);\n    }\n    ::placeholder {\n      color: rgba(1, 1, 1, 0.5);\n    }\n`;\nconst TextAreaStyled = styled.textarea.attrs(props => ({\n  type: props.type\n}))`\n  ${space};\n  font-size: ${props => props.fz ? `${props.fz}px` : '14px'}\n  color: rgba(1, 1, 1, 0.8);\n  width: 100%;\n  height:  ${props => props.height ? `${props.height}px` : '95px'};\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n  padding: 13px;\n  box-sizing: border-box;\n  white-space: pre-line;\n  \n  :focus {\n    outline: none;\n  }\n  ::-webkit-input-placeholder {\n      color: rgba(1, 1, 1, 0.5);\n    }\n    :-ms-input-placeholder { \n      color: rgba(1, 1, 1, 0.5);\n    }\n    ::placeholder {\n      color: rgba(1, 1, 1, 0.5);\n    }\n  ::before {\n    content: ${props => props.count};\n  }  \n`;\nconst TextAreaWrapper = styled.div`\n  ${space};\n  position: relative;\n`;\nconst TextAreaCount = styled.div`\n  ${space};\n  position: absolute;\n  bottom: 7px;\n  right: 7px;\n  font-size: 12px;\n  color: #898989;\n`;\nconst Error = styled.div`\n  ${space};\n  position: relative;\n  font-size: 11px;\n  text-align: right;\n  color: #bb1616;\n`;\n\nconst Input = (_ref) => {\n  let {\n    count\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"count\"]);\n\n  return __jsx(InputWrapper, props, __jsx(InputStyled, props), props.error && __jsx(Error, null, props.error));\n};\n\nconst TextArea = (_ref2) => {\n  let {\n    count\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"count\"]);\n\n  return __jsx(TextAreaWrapper, null, __jsx(TextAreaStyled, props), __jsx(TextAreaCount, null, count));\n};\n\nconst Input2 = (_ref3) => {\n  let props = _Object$assign({}, _ref3);\n\n  return __jsx(InputWrapper, props, __jsx(InputStyled, props));\n};\n\nconst Wrapper = styled.div`\n   ${space};\n   display: flex;\n   width: 100%;\n   \n   Input2 {\n      width: calc(100% - 80px);\n   }\n   \n   input {\n        border-radius: 5px 0 0 5px;\n        border-right: none;\n   }\n   \n   Button {\n      width: 80px;\n      border-radius: 0 5px 5px 0;\n   }\n`;\n\nconst InputWithButton = (_ref4) => {\n  let {\n    disabled,\n    handleClick\n  } = _ref4,\n      props = _objectWithoutProperties(_ref4, [\"disabled\", \"handleClick\"]);\n\n  return __jsx(Wrapper, null, __jsx(Input2, props), __jsx(Button, {\n    transparent: true,\n    disabled: disabled,\n    onClick: handleClick\n  }, \"Add\"));\n};\n\nexport { Input, TextArea, InputWithButton };","map":{"version":3,"sources":["D:/git/webapp3/webapp/components/controls/Input/Input.js"],"names":["styled","space","Check","Text","Counter","Button","InputWrapper","div","InputStyled","input","attrs","props","type","fz","height40","TextAreaStyled","textarea","height","count","TextAreaWrapper","TextAreaCount","Error","Input","error","TextArea","Input2","Wrapper","InputWithButton","disabled","handleClick"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAAQC,KAAR,QAAoB,6BAApB;AACA,SAAQC,IAAR,QAAmB,6BAAnB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AAGA,MAAMC,YAAY,GAAGN,MAAM,CAACO,GAAI;IAC5BN,KAAM;;;;;CADV;AAOA,MAAMO,WAAW,GAAGR,MAAM,CAACS,KAAP,CAAaC,KAAb,CAAmBC,KAAK,KAAK;AAC7CC,EAAAA,IAAI,EAAED,KAAK,CAACC;AADiC,CAAL,CAAxB,CAEhB;OACGX,KAAM;eACEU,KAAK,IAAIA,KAAK,CAACE,EAAN,GAAY,GAAEF,KAAK,CAACE,EAAG,IAAvB,GAA6B,MAAO;;;YAGhDF,KAAK,IAAIA,KAAK,CAACG,QAAN,GAAiB,MAAjB,GAA0B,MAAO;;;;;;;;;;;;;;;;;;CAPtD;AA0BA,MAAMC,cAAc,GAAGf,MAAM,CAACgB,QAAP,CAAgBN,KAAhB,CAAsBC,KAAK,KAAK;AACnDC,EAAAA,IAAI,EAAED,KAAK,CAACC;AADuC,CAAL,CAA3B,CAEnB;IACAX,KAAM;eACKU,KAAK,IAAIA,KAAK,CAACE,EAAN,GAAY,GAAEF,KAAK,CAACE,EAAG,IAAvB,GAA6B,MAAO;;;aAG/CF,KAAK,IAAIA,KAAK,CAACM,MAAN,GAAgB,GAAEN,KAAK,CAACM,MAAO,IAA/B,GAAqC,MAAO;;;;;;;;;;;;;;;;;;;;eAoBnDN,KAAK,IAAIA,KAAK,CAACO,KAAM;;CA3BpC;AA8BA,MAAMC,eAAe,GAAGnB,MAAM,CAACO,GAAI;IAC/BN,KAAM;;CADV;AAIA,MAAMmB,aAAa,GAAGpB,MAAM,CAACO,GAAI;IAC7BN,KAAM;;;;;;CADV;AAQA,MAAMoB,KAAK,GAAGrB,MAAM,CAACO,GAAI;IACrBN,KAAM;;;;;CADV;;AAQA,MAAMqB,KAAK,GAAG,UAAuB;AAAA,MAAtB;AAACJ,IAAAA;AAAD,GAAsB;AAAA,MAAXP,KAAW;;AACjC,SACI,MAAC,YAAD,EAAkBA,KAAlB,EACI,MAAC,WAAD,EAAiBA,KAAjB,CADJ,EAEKA,KAAK,CAACY,KAAN,IAAe,MAAC,KAAD,QAAQZ,KAAK,CAACY,KAAd,CAFpB,CADJ;AAMH,CAPD;;AASA,MAAMC,QAAQ,GAAG,WAAuB;AAAA,MAAtB;AAACN,IAAAA;AAAD,GAAsB;AAAA,MAAXP,KAAW;;AACpC,SACI,MAAC,eAAD,QACI,MAAC,cAAD,EAAoBA,KAApB,CADJ,EAEI,MAAC,aAAD,QAAgBO,KAAhB,CAFJ,CADJ;AAMH,CAPD;;AASA,MAAMO,MAAM,GAAG,WAAgB;AAAA,MAAXd,KAAW;;AAC3B,SACI,MAAC,YAAD,EAAkBA,KAAlB,EACI,MAAC,WAAD,EAAiBA,KAAjB,CADJ,CADJ;AAKH,CAND;;AAQA,MAAMe,OAAO,GAAG1B,MAAM,CAACO,GAAI;KACtBN,KAAM;;;;;;;;;;;;;;;;;CADX;;AAuBA,MAAM0B,eAAe,GAAG,WAAuC;AAAA,MAAtC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAsC;AAAA,MAAXlB,KAAW;;AAC3D,SACI,MAAC,OAAD,QACI,MAAC,MAAD,EAAYA,KAAZ,CADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,WAAW,MAAnB;AAAoB,IAAA,QAAQ,EAAEiB,QAA9B;AAAwC,IAAA,OAAO,EAAEC;AAAjD,WAFJ,CADJ;AAMH,CAPD;;AASA,SAAQP,KAAR,EAAeE,QAAf,EAAyBG,eAAzB","sourcesContent":["import styled from \"styled-components\";\r\nimport { space } from 'styled-system'\r\nimport {Check} from \"../../StyledComponents/Icon\";\r\nimport {Text} from \"../../StyledComponents/Text\";\r\nimport {Counter} from \"../Counter/Counter\";\r\nimport {Button} from \"../Button/Button\";\r\n\r\n\r\nconst InputWrapper = styled.div`\r\n  ${space};\r\n  position: relative;\r\n  min-height: 61px;\r\n  height: 61px;\r\n  width: 100%;\r\n`;\r\nconst InputStyled = styled.input.attrs(props => ({\r\n    type: props.type,\r\n}))`\r\n  // ${space};\r\n  font-size: ${props => props.fz ? `${props.fz}px` : '14px'}\r\n  color: rgba(1, 1, 1, 0.8);\r\n  width: 100%;\r\n  height: ${props => props.height40 ? \"40px\" : \"46px\"}\r\n  border: 1px solid rgba(0, 0, 0, 0.3);\r\n  border-radius: 5px;\r\n  padding: 13px;\r\n  box-sizing: border-box;\r\n  \r\n  :focus {\r\n    outline: none;\r\n  }\r\n  ::-webkit-input-placeholder {\r\n      color: rgba(1, 1, 1, 0.5);\r\n    }\r\n    :-ms-input-placeholder { \r\n      color: rgba(1, 1, 1, 0.5);\r\n    }\r\n    ::placeholder {\r\n      color: rgba(1, 1, 1, 0.5);\r\n    }\r\n`;\r\nconst TextAreaStyled = styled.textarea.attrs(props => ({\r\n    type: props.type,\r\n}))`\r\n  ${space};\r\n  font-size: ${props => props.fz ? `${props.fz}px` : '14px'}\r\n  color: rgba(1, 1, 1, 0.8);\r\n  width: 100%;\r\n  height:  ${props => props.height ? `${props.height}px` : '95px'};\r\n  border: 1px solid rgba(0, 0, 0, 0.3);\r\n  border-radius: 5px;\r\n  padding: 13px;\r\n  box-sizing: border-box;\r\n  white-space: pre-line;\r\n  \r\n  :focus {\r\n    outline: none;\r\n  }\r\n  ::-webkit-input-placeholder {\r\n      color: rgba(1, 1, 1, 0.5);\r\n    }\r\n    :-ms-input-placeholder { \r\n      color: rgba(1, 1, 1, 0.5);\r\n    }\r\n    ::placeholder {\r\n      color: rgba(1, 1, 1, 0.5);\r\n    }\r\n  ::before {\r\n    content: ${props => props.count};\r\n  }  \r\n`;\r\nconst TextAreaWrapper = styled.div`\r\n  ${space};\r\n  position: relative;\r\n`;\r\nconst TextAreaCount = styled.div`\r\n  ${space};\r\n  position: absolute;\r\n  bottom: 7px;\r\n  right: 7px;\r\n  font-size: 12px;\r\n  color: #898989;\r\n`;\r\nconst Error = styled.div`\r\n  ${space};\r\n  position: relative;\r\n  font-size: 11px;\r\n  text-align: right;\r\n  color: #bb1616;\r\n`;\r\n\r\nconst Input = ({count, ...props}) => {\r\n    return (\r\n        <InputWrapper {...props}>\r\n            <InputStyled {...props} />\r\n            {props.error && <Error>{props.error}</Error>}\r\n        </InputWrapper>\r\n    )\r\n}\r\n\r\nconst TextArea = ({count, ...props}) => {\r\n    return (\r\n        <TextAreaWrapper>\r\n            <TextAreaStyled {...props} />\r\n            <TextAreaCount>{count}</TextAreaCount>\r\n        </TextAreaWrapper>\r\n    )\r\n}\r\n\r\nconst Input2 = ({...props}) => {\r\n    return (\r\n        <InputWrapper {...props}>\r\n            <InputStyled {...props} />\r\n        </InputWrapper>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n   ${space};\r\n   display: flex;\r\n   width: 100%;\r\n   \r\n   Input2 {\r\n      width: calc(100% - 80px);\r\n   }\r\n   \r\n   input {\r\n        border-radius: 5px 0 0 5px;\r\n        border-right: none;\r\n   }\r\n   \r\n   Button {\r\n      width: 80px;\r\n      border-radius: 0 5px 5px 0;\r\n   }\r\n`;\r\n\r\n\r\n\r\n\r\nconst InputWithButton = ({disabled, handleClick, ...props}) => {\r\n    return (\r\n        <Wrapper>\r\n            <Input2 {...props} />\r\n            <Button transparent disabled={disabled} onClick={handleClick} >Add</Button>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport {Input, TextArea, InputWithButton}\r\n\r\n"]},"metadata":{},"sourceType":"module"}