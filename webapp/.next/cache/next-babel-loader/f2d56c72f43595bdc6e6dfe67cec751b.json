{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Title, Footer, TipWrapper2 } from \"../../Layouts/styledLayouts\";\nimport { Text } from \"../../StyledComponents/Text\";\nimport { Input } from \"../../controls/Input/Input\";\nimport { Button, ButtonMin } from \"../../../components/controls/Button/Button\";\n\nvar Videos = function Videos(_ref) {\n  var videos = _ref.videos,\n      _onChange = _ref.onChange,\n      isLoading = _ref.isLoading,\n      onSave = _ref.onSave,\n      handleAddInput = _ref.handleAddInput;\n\n  if (!videos || !videos.length) {\n    videos = [];\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Title, {\n    mb: 25\n  }, \"Videos\"), __jsx(Text, {\n    fz: 16,\n    mb: 30,\n    grey6: true\n  }, \"Videos are the best option to demonstrate your programmers in action and persuade the clients you are a real professional.\"), videos.map(function (item, key) {\n    return __jsx(Input, {\n      key: key,\n      type: \"text\",\n      name: \"\",\n      value: videos[key],\n      onChange: function onChange(e) {\n        return _onChange(key, e.target.value);\n      },\n      placeholder: \"youtube link\"\n    });\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: 'right'\n    }\n  }, __jsx(ButtonMin, {\n    green: true,\n    inline: true,\n    onClick: handleAddInput\n  }, \"Add more\")), __jsx(TipWrapper2, {\n    mt: 40,\n    mb: 40\n  }, __jsx(Text, {\n    fz: 12\n  }, \"Profiles with videos are more likely to attract attention of the potential clients, as they help imagine, visualize and understand the offers better than anything else. Please mind the quality and content of the video.\")), __jsx(Button, {\n    green: true,\n    loading: isLoading,\n    onClick: onSave,\n    mt: 70\n  }, \"Save\"));\n};\n\nexport default Videos;","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/components/Offer/edit/Videos.js"],"names":["React","useState","useContext","useEffect","Title","Footer","TipWrapper2","Text","Input","Button","ButtonMin","Videos","videos","onChange","isLoading","onSave","handleAddInput","length","map","item","key","e","target","value","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AAEA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,WAAvB,QAAyC,6BAAzC;AACA,SAAQC,IAAR,QAAmB,6BAAnB;AACA,SAAQC,KAAR,QAAoB,4BAApB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,4CAAhC;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA2D;AAAA,MAAzDC,MAAyD,QAAzDA,MAAyD;AAAA,MAAjDC,SAAiD,QAAjDA,QAAiD;AAAA,MAAvCC,SAAuC,QAAvCA,SAAuC;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,cAAoB,QAApBA,cAAoB;;AACtE,MAAI,CAACJ,MAAD,IAAW,CAACA,MAAM,CAACK,MAAvB,EAA+B;AAC3BL,IAAAA,MAAM,GAAG,EAAT;AACH;;AAGD,SACI,4BACI,MAAC,KAAD;AAAO,IAAA,EAAE,EAAE;AAAX,cADJ,EAEI,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE,EAAV;AAAc,IAAA,EAAE,EAAE,EAAlB;AAAsB,IAAA,KAAK;AAA3B,kIAFJ,EAOQA,MAAM,CAACM,GAAP,CAAW,UAACC,IAAD,EAAOC,GAAP;AAAA,WACP,MAAC,KAAD;AACI,MAAA,GAAG,EAAEA,GADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,EAHT;AAII,MAAA,KAAK,EAAER,MAAM,CAACQ,GAAD,CAJjB;AAKI,MAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,eAAOR,SAAQ,CAACO,GAAD,EAAMC,CAAC,CAACC,MAAF,CAASC,KAAf,CAAf;AAAA,OALd;AAMI,MAAA,WAAW,EAAC;AANhB,MADO;AAAA,GAAX,CAPR,EAkBI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ;AAAZ,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,MAAM,MAAvB;AAAwB,IAAA,OAAO,EAAER;AAAjC,gBADJ,CAlBJ,EAuBI,MAAC,WAAD;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE;AAAzB,KACI,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAV,kOADJ,CAvBJ,EA+BI,MAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,OAAO,EAAEF,SAAvB;AAAkC,IAAA,OAAO,EAAEC,MAA3C;AAAmD,IAAA,EAAE,EAAE;AAAvD,YA/BJ,CADJ;AAoCH,CA1CD;;AA4CA,eAAeJ,MAAf","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\n\r\nimport {Title, Footer, TipWrapper2} from \"../../Layouts/styledLayouts\";\r\nimport {Text} from \"../../StyledComponents/Text\";\r\nimport {Input} from \"../../controls/Input/Input\";\r\nimport {Button, ButtonMin} from \"../../../components/controls/Button/Button\"\r\n\r\n\r\nconst Videos = ({videos, onChange, isLoading, onSave, handleAddInput}) => {\r\n    if (!videos || !videos.length) {\r\n        videos = []\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Title mb={25} >Videos</Title>\r\n            <Text fz={16} mb={30} grey6 >\r\n                Videos are the best option to demonstrate your programmers in action and persuade the clients you are a real professional.\r\n            </Text>\r\n\r\n            {\r\n                videos.map((item, key) =>\r\n                    <Input\r\n                        key={key}\r\n                        type='text'\r\n                        name=''\r\n                        value={videos[key]}\r\n                        onChange={(e) => onChange(key, e.target.value)}\r\n                        placeholder=\"youtube link\"\r\n                    />\r\n                )\r\n            }\r\n            <div style={{textAlign: 'right'}}>\r\n                <ButtonMin green inline onClick={handleAddInput}>Add more</ButtonMin>\r\n            </div>\r\n\r\n\r\n            <TipWrapper2 mt={40} mb={40} >\r\n                <Text fz={12} >\r\n                    Profiles with videos are more likely to attract attention of the potential clients,\r\n                    as they help imagine, visualize and understand the offers better than anything else.\r\n                    Please mind the quality and content of the video.\r\n                </Text>\r\n            </TipWrapper2>\r\n\r\n            <Button green loading={isLoading} onClick={onSave} mt={70}>Save</Button>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Videos;\r\n"]},"metadata":{},"sourceType":"module"}