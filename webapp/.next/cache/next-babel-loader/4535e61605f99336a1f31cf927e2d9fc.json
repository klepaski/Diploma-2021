{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport Router from 'next/router';\nimport moment from 'moment/moment';\nimport ImageGallery from \"react-image-gallery\";\nimport { CheckLabel, Title, WhoCard } from \"../../components/Layouts/styledLayouts\";\nimport { ContainerDesktop } from '../../components/StyledComponents/Grid';\nimport { Wrapper } from \"../../components/StyledComponents/Wrapper\";\nimport Header from \"../../components/Header/Header\";\nimport { withAuthSync } from '../../utils/auth';\nimport { FlexBlock } from \"../../components/StyledComponents/FlexBlock\";\nimport { ProfileAvatar } from \"../../components/Profile/styledProfileHeader\";\nimport { modifySrc } from \"../../utils/modifySrc\";\nimport { Text } from \"../../components/StyledComponents/Text\";\nimport { ButtonMinHeight } from \"../../components/controls/Button/Button\";\nimport { Divider } from \"../../components/StyledComponents/Divider\";\nimport { HorizontalScrollItem, HorizontalScrollWrapper } from \"../../components/controls/Scroll/Scroll\";\nimport { MainContext } from \"../../components/contextProviders/MainContext\";\nimport { apiGetListUserOffers } from \"../../actions/api\";\nimport OfferCardItem from \"../../components/Offer/cards/OfferCardItem\";\nimport { Wallpaper, DotList } from \"../../components/Profile/styledUser\";\nimport { ButtonWithIcon } from \"../../components/controls/Button/ButtonWithIcon\";\n\nconst UserContent = ({\n  user\n}) => {\n  const {\n    0: arrayPhotos,\n    1: setArrayPhotos\n  } = useState([]);\n  const {\n    0: offers,\n    1: setOffers\n  } = useState([]);\n  const {\n    0: loadingOffers,\n    1: setLoadingOffers\n  } = useState([]);\n  const {\n    me,\n    setMe\n  } = useContext(MainContext);\n  const refGallery = useRef(null);\n  useEffect(() => {\n    if (user.photo && user.photo.length) {\n      try {\n        let coverUrl = user.coverPhoto && user.coverPhoto.photoUrl ? user.coverPhoto.photoUrl : null;\n        let filteredPhoto = user.photo.filter(item => item.photoUrl && user.photoUrl !== coverUrl);\n        if (coverUrl) filteredPhoto.unshift({\n          photoUrl: coverUrl\n        });\n        let images = filteredPhoto.map(item => {\n          if (item.photoUrl) {\n            return {\n              original: modifySrc(item.photoUrl, 'coverProfile')\n            };\n          }\n        });\n        setArrayPhotos(images);\n      } catch (e) {\n        setArrayPhotos([]);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (user.id) {\n      setLoadingOffers(true);\n      apiGetListUserOffers(user.id).then(res => {\n        setOffers(res.data);\n        setLoadingOffers(false);\n      }).catch(e => {\n        setLoadingOffers(false);\n      });\n    }\n  }, [user.id]);\n  let profilePhotoSrc = modifySrc(user.profilePhotoURL, 'profile');\n  let coverSrc = modifySrc(user.coverPhoto && user.coverPhoto.photoUrl ? user.coverPhoto.photoUrl : null, 'coverProfile');\n\n  const handleFullScreen = () => {\n    refGallery.current.fullScreen();\n  };\n\n  console.log('arrayPhotos', arrayPhotos);\n  const isOrganizer = user.role.includes('organiser');\n  return __jsx(React.Fragment, null, __jsx(Wallpaper, {\n    src: coverSrc\n  }, !!arrayPhotos.length && __jsx(ButtonWithIcon, {\n    gallery: true,\n    textRight: true,\n    onClick: handleFullScreen\n  }, \"Gallery\")), __jsx(ImageGallery, {\n    ref: refGallery,\n    items: arrayPhotos,\n    showThumbnails: false,\n    showPlayButton: false,\n    additionalClass: 'z-profile-gallery'\n  }), __jsx(ContainerDesktop, null, __jsx(Wrapper, {\n    pl: 16,\n    pr: 16,\n    pb: 50\n  }, __jsx(FlexBlock, {\n    left: true,\n    mb: 30,\n    column: isOrganizer,\n    verticalcenter: isOrganizer\n  }, __jsx(ProfileAvatar, {\n    src: profilePhotoSrc,\n    alt: 'logo'\n  }), __jsx(FlexBlock, {\n    column: true,\n    nowidth: true,\n    mt: 30,\n    ml: 12,\n    verticalcenter: isOrganizer,\n    center: isOrganizer\n  }, __jsx(Text, {\n    bold: true,\n    fz: 18\n  }, `${user.firstName || ''} ${user.lastName || ''}`), __jsx(Text, {\n    fz: 10\n  }, \"Joined \", moment(new Date(user.createdAt), \"YYYYMMDD\").fromNow()))), isOrganizer ? __jsx(React.Fragment, null, user.country && __jsx(FlexBlock, {\n    mb: 20,\n    center: true\n  }, __jsx(Text, {\n    fz: 16\n  }, \"Lives in \", user.country)), user.phone && __jsx(FlexBlock, {\n    mb: 20,\n    center: true\n  }, __jsx(Text, {\n    green2: true,\n    fz: 16\n  }, user.phone), \" \"), user.email && __jsx(FlexBlock, {\n    mb: 20,\n    center: true\n  }, __jsx(Text, {\n    green2: true,\n    fz: 16\n  }, user.email))) : __jsx(React.Fragment, null, user.country && __jsx(FlexBlock, {\n    left: true,\n    ml: 25,\n    mb: 20\n  }, __jsx(DotList, null), __jsx(Text, {\n    fz: 16\n  }, \"Lives in \", user.country)), user.phone && __jsx(FlexBlock, {\n    left: true,\n    ml: 25,\n    mb: 20\n  }, __jsx(DotList, null), __jsx(Text, {\n    green2: true,\n    fz: 16\n  }, user.phone)), user.email && __jsx(FlexBlock, {\n    left: true,\n    ml: 25,\n    mb: 20\n  }, __jsx(DotList, null), __jsx(Text, {\n    green2: true,\n    fz: 16\n  }, user.email))), __jsx(Divider, {\n    grey: true,\n    mt: 40,\n    mb: 22\n  }), __jsx(Text, {\n    bold: true,\n    fz: 18\n  }, \"About\"), __jsx(Text, {\n    fz: 14,\n    mt: 15\n  }, user.describe), __jsx(Divider, {\n    grey: true,\n    mt: 28,\n    mb: 22\n  }), __jsx(Text, {\n    bold: true,\n    fz: 18,\n    mb: 30\n  }, `${user.firstName || ''} ${user.lastName || ''}`, \" provided\"), __jsx(CheckLabel, {\n    grbl: true,\n    label: \"Email address\"\n  }), __jsx(Divider, {\n    grey: true,\n    mt: 28,\n    mb: 22\n  }), __jsx(Text, {\n    bold: true,\n    fz: 18,\n    mb: 30\n  }, `${user.firstName || ''} ${user.lastName || ''}`, \" listings\"), loadingOffers ? __jsx(React.Fragment, null, \"Loading...\") : __jsx(HorizontalScrollWrapper, null, offers.map((item, key) => __jsx(HorizontalScrollItem, {\n    key: key\n  }, __jsx(OfferCardItem, {\n    offer: item\n  })))))));\n};\n\nexport default UserContent;","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/components/Profile/UserContent.js"],"names":["React","useState","useContext","useEffect","useRef","Router","moment","ImageGallery","CheckLabel","Title","WhoCard","ContainerDesktop","Wrapper","Header","withAuthSync","FlexBlock","ProfileAvatar","modifySrc","Text","ButtonMinHeight","Divider","HorizontalScrollItem","HorizontalScrollWrapper","MainContext","apiGetListUserOffers","OfferCardItem","Wallpaper","DotList","ButtonWithIcon","UserContent","user","arrayPhotos","setArrayPhotos","offers","setOffers","loadingOffers","setLoadingOffers","me","setMe","refGallery","photo","length","coverUrl","coverPhoto","photoUrl","filteredPhoto","filter","item","unshift","images","map","original","e","id","then","res","data","catch","profilePhotoSrc","profilePhotoURL","coverSrc","handleFullScreen","current","fullScreen","console","log","isOrganizer","role","includes","firstName","lastName","Date","createdAt","fromNow","country","phone","email","describe","key"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect, useRef} from 'react';\r\nimport Router from 'next/router'\r\nimport moment from 'moment/moment'\r\nimport ImageGallery from \"react-image-gallery\";\r\n\r\nimport {CheckLabel, Title, WhoCard} from \"../../components/Layouts/styledLayouts\";\r\nimport { ContainerDesktop } from '../../components/StyledComponents/Grid'\r\nimport {Wrapper} from \"../../components/StyledComponents/Wrapper\";\r\nimport Header from \"../../components/Header/Header\"\r\nimport { withAuthSync} from '../../utils/auth'\r\nimport {FlexBlock} from \"../../components/StyledComponents/FlexBlock\";\r\nimport {ProfileAvatar} from \"../../components/Profile/styledProfileHeader\";\r\nimport {modifySrc} from \"../../utils/modifySrc\";\r\nimport {Text} from \"../../components/StyledComponents/Text\";\r\nimport {ButtonMinHeight} from \"../../components/controls/Button/Button\";\r\nimport {Divider} from \"../../components/StyledComponents/Divider\";\r\nimport {HorizontalScrollItem, HorizontalScrollWrapper} from \"../../components/controls/Scroll/Scroll\";\r\nimport {MainContext} from \"../../components/contextProviders/MainContext\";\r\nimport {apiGetListUserOffers} from \"../../actions/api\";\r\nimport OfferCardItem from \"../../components/Offer/cards/OfferCardItem\";\r\nimport {Wallpaper, DotList} from \"../../components/Profile/styledUser\"\r\nimport {ButtonWithIcon} from \"../../components/controls/Button/ButtonWithIcon\";\r\n\r\n\r\n\r\n\r\nconst UserContent = ({user}) => {\r\n    const [arrayPhotos, setArrayPhotos] = useState([])\r\n    const [offers, setOffers] = useState([])\r\n    const [loadingOffers, setLoadingOffers] = useState([])\r\n\r\n    const {me, setMe} = useContext(MainContext)\r\n    const refGallery = useRef(null)\r\n\r\n    useEffect(() => {\r\n        if(user.photo && user.photo.length) {\r\n            try{\r\n                let coverUrl = (user.coverPhoto && user.coverPhoto.photoUrl) ? user.coverPhoto.photoUrl : null\r\n                let filteredPhoto = user.photo.filter(item => (item.photoUrl && user.photoUrl !== coverUrl))\r\n                if(coverUrl) filteredPhoto.unshift({photoUrl: coverUrl})\r\n                let images = filteredPhoto.map(item => {\r\n                    if(item.photoUrl)  {\r\n                        return {original: modifySrc(item.photoUrl, 'coverProfile')}\r\n                    }\r\n                })\r\n                setArrayPhotos(images)\r\n            } catch (e) {\r\n                setArrayPhotos([])\r\n            }\r\n\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(user.id) {\r\n            setLoadingOffers(true)\r\n            apiGetListUserOffers(user.id)\r\n                .then(res => {\r\n                    setOffers(res.data)\r\n                    setLoadingOffers(false)\r\n                })\r\n                .catch(e => {\r\n                    setLoadingOffers(false)\r\n                })\r\n        }\r\n    }, [user.id])\r\n\r\n\r\n\r\n    let profilePhotoSrc = modifySrc(user.profilePhotoURL, 'profile')\r\n    let coverSrc =  modifySrc((user.coverPhoto &&  user.coverPhoto.photoUrl) ?  user.coverPhoto.photoUrl : null, 'coverProfile')\r\n\r\n\r\n\r\n    const handleFullScreen = () => {\r\n        refGallery.current.fullScreen()\r\n    }\r\n\r\n    console.log('arrayPhotos', arrayPhotos)\r\n\r\n    const isOrganizer = user.role.includes('organiser')\r\n\r\n\r\n    return (\r\n        <>\r\n            <Wallpaper src={coverSrc}>\r\n                {!!arrayPhotos.length && <ButtonWithIcon gallery textRight onClick={handleFullScreen}>Gallery</ButtonWithIcon> }\r\n            </Wallpaper>\r\n\r\n            <ImageGallery\r\n                ref={refGallery}\r\n                items={arrayPhotos}\r\n                showThumbnails={false}\r\n                showPlayButton={false}\r\n                additionalClass={'z-profile-gallery'}\r\n            />\r\n\r\n            <ContainerDesktop>\r\n                <Wrapper pl={16} pr={16} pb={50}>\r\n                    <FlexBlock left mb={30} column={isOrganizer} verticalcenter={isOrganizer}>\r\n                        <ProfileAvatar src={profilePhotoSrc} alt={'logo'} />\r\n                        <FlexBlock column nowidth mt={30} ml={12} verticalcenter={isOrganizer} center={isOrganizer} >\r\n                            <Text bold fz={18}>{`${user.firstName || ''} ${user.lastName || ''}`}</Text>\r\n                            <Text fz={10}>Joined {moment(new Date(user.createdAt), \"YYYYMMDD\").fromNow()}</Text>\r\n                        </FlexBlock>\r\n                    </FlexBlock>\r\n\r\n                    {isOrganizer ?\r\n                        <>\r\n                            {user.country && <FlexBlock mb={20} center><Text fz={16}>Lives in {user.country}</Text></FlexBlock>}\r\n                            {user.phone && <FlexBlock mb={20} center><Text green2 fz={16}>{user.phone}</Text> </FlexBlock> }\r\n                            {user.email && <FlexBlock mb={20} center><Text green2 fz={16}>{user.email}</Text></FlexBlock> }\r\n                        </>\r\n                        :\r\n                        <>\r\n                            {user.country &&\r\n                            <FlexBlock left ml={25} mb={20}>\r\n                                <DotList/>\r\n                                <Text fz={16}>Lives in {user.country}</Text>\r\n                            </FlexBlock>\r\n                            }\r\n                            {user.phone &&\r\n                            <FlexBlock left ml={25} mb={20}>\r\n                                <DotList/>\r\n                                <Text green2 fz={16}>{user.phone}</Text>\r\n                            </FlexBlock>\r\n                            }\r\n                            {user.email &&\r\n                            <FlexBlock left ml={25} mb={20}>\r\n                                <DotList/>\r\n                                <Text green2 fz={16}>{user.email}</Text>\r\n                            </FlexBlock>\r\n                            }\r\n                        </>\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n                    {/*{me.id !== user.id &&*/}\r\n                    {/*<ButtonMinHeight transparentGreen bold mt={20} onClick={() => Router.push('/inbox')}>Open messages</ButtonMinHeight>*/}\r\n                    {/*}*/}\r\n\r\n\r\n                    {/*<ButtonMinHeight  bold mt={20} onClick={() => Router.push('/profile/edit')}>Edit</ButtonMinHeight>*/}\r\n                    {/*<ButtonMinHeight  bold mt={20} onClick={() => Router.push('/profile/settings')}>Settings</ButtonMinHeight>*/}\r\n                    {/*<Text logo logostar fz={18} mt={50} ml={50}>Reviews</Text>*/}\r\n                    {/*<Text logo logocheck fz={18} mt={15} ml={50}>Verified</Text>*/}\r\n                    <Divider grey mt={40} mb={22}/>\r\n                    <Text bold fz={18}>About</Text>\r\n                    <Text fz={14} mt={15}>{user.describe}</Text>\r\n                    <Divider grey mt={28} mb={22}/>\r\n                    <Text bold fz={18} mb={30}>{`${user.firstName || ''} ${user.lastName || ''}`} provided</Text>\r\n\r\n\r\n                    {/*<CheckLabel grbl label='Government ID'/>*/}\r\n                    <CheckLabel grbl label='Email address'/>\r\n                    {/*<CheckLabel grbl label='Phone number'/>*/}\r\n\r\n                    <Divider grey mt={28} mb={22}/>\r\n\r\n                    <Text bold fz={18} mb={30}>{`${user.firstName || ''} ${user.lastName || ''}`} listings</Text>\r\n                    {loadingOffers ?\r\n                        <>\r\n                            Loading...\r\n                        </>\r\n                        :\r\n                        <HorizontalScrollWrapper>\r\n                            {offers.map((item, key) =>\r\n                                <HorizontalScrollItem key={key}>\r\n                                    <OfferCardItem offer={item} />\r\n                                </HorizontalScrollItem>\r\n                            )}\r\n                        </HorizontalScrollWrapper>\r\n                    }\r\n\r\n                </Wrapper>\r\n            </ContainerDesktop>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default UserContent\r\n\r\n"]},"metadata":{},"sourceType":"module"}