{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nexport const hasError = errors => {\n  let hasError = false;\n\n  for (let key in errors) {\n    if (errors[key]) hasError = true;\n  }\n\n  return hasError;\n};\nexport const modifyForReactSealect = (options = []) => {\n  let arr = [];\n  options.map(item => {\n    arr.push({\n      label: item,\n      value: item\n    });\n  });\n  return arr;\n};\nexport const addOrRemove = (array, value) => {\n  if (!_Array$isArray(array)) return array;\n  let index = array.findIndex(item => item.id === value.id);\n\n  if (index === -1) {\n    array.push(value);\n  } else {\n    array.splice(index, 1);\n  }\n\n  return array;\n};\nexport const isIncludesThisId = (array, id) => {\n  if (!_Array$isArray(array)) return array;\n  let found = false;\n  array.map(item => {\n    if (item.id === id) found = true;\n  });\n  return found;\n};\nexport const urlSearchParams = () => {\n  if (false) {\n    let urlParams = new URLSearchParams(window.location.search);\n    let obj = {\n      search: urlParams.get('search'),\n      from: urlParams.get('from'),\n      to: urlParams.get('to'),\n      country: urlParams.get('country')\n    };\n    return obj;\n  } else {\n    return {};\n  }\n};\nexport const modifyToBr = value => {\n  try {\n    let modified = value.replace(/(\\r\\n|\\n)/g, \"<br/>\");\n    return {\n      __html: modified\n    };\n  } catch (e) {\n    return {\n      __html: value || ''\n    };\n  }\n};","map":{"version":3,"sources":["D:/git/webapp3/webapp/utils/utils.js"],"names":["hasError","errors","key","modifyForReactSealect","options","arr","map","item","push","label","value","addOrRemove","array","index","findIndex","id","splice","isIncludesThisId","found","urlSearchParams","urlParams","URLSearchParams","window","location","search","obj","get","from","to","country","modifyToBr","modified","replace","__html","e"],"mappings":";AAAA,OAAO,MAAMA,QAAQ,GAAIC,MAAD,IAAY;AAChC,MAAID,QAAQ,GAAG,KAAf;;AACA,OAAI,IAAIE,GAAR,IAAeD,MAAf,EAAuB;AACnB,QAAGA,MAAM,CAACC,GAAD,CAAT,EAAgBF,QAAQ,GAAG,IAAX;AACnB;;AACD,SAAOA,QAAP;AACH,CANM;AAQP,OAAO,MAAMG,qBAAqB,GAAG,CAACC,OAAO,GAAG,EAAX,KAAkB;AACnD,MAAIC,GAAG,GAAG,EAAV;AACAD,EAAAA,OAAO,CAACE,GAAR,CAAaC,IAAD,IAAU;AAClBF,IAAAA,GAAG,CAACG,IAAJ,CAAS;AAACC,MAAAA,KAAK,EAAEF,IAAR;AAAcG,MAAAA,KAAK,EAAEH;AAArB,KAAT;AACH,GAFD;AAGA,SAAOF,GAAP;AACH,CANM;AAQP,OAAO,MAAMM,WAAW,GAAG,CAACC,KAAD,EAAQF,KAAR,KAAkB;AACzC,MAAG,CAAC,eAAcE,KAAd,CAAJ,EAA0B,OAAOA,KAAP;AAC1B,MAAIC,KAAK,GAAGD,KAAK,CAACE,SAAN,CAAgBP,IAAI,IAAIA,IAAI,CAACQ,EAAL,KAAYL,KAAK,CAACK,EAA1C,CAAZ;;AACA,MAAIF,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdD,IAAAA,KAAK,CAACJ,IAAN,CAAWE,KAAX;AACH,GAFD,MAEO;AACHE,IAAAA,KAAK,CAACI,MAAN,CAAaH,KAAb,EAAoB,CAApB;AACH;;AACD,SAAOD,KAAP;AACH,CATM;AAWP,OAAO,MAAMK,gBAAgB,GAAG,CAACL,KAAD,EAAQG,EAAR,KAAe;AAC3C,MAAG,CAAC,eAAcH,KAAd,CAAJ,EAA0B,OAAOA,KAAP;AAC1B,MAAIM,KAAK,GAAG,KAAZ;AACAN,EAAAA,KAAK,CAACN,GAAN,CAAUC,IAAI,IAAI;AACd,QAAGA,IAAI,CAACQ,EAAL,KAAYA,EAAf,EAAmBG,KAAK,GAAG,IAAR;AACtB,GAFD;AAGA,SAAOA,KAAP;AACH,CAPM;AASP,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC,aAAoB;AAChB,QAAIC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAhB;AACA,QAAIC,GAAG,GAAG;AACND,MAAAA,MAAM,EAAEJ,SAAS,CAACM,GAAV,CAAc,QAAd,CADF;AAENC,MAAAA,IAAI,EAAEP,SAAS,CAACM,GAAV,CAAc,MAAd,CAFA;AAGNE,MAAAA,EAAE,EAAER,SAAS,CAACM,GAAV,CAAc,IAAd,CAHE;AAING,MAAAA,OAAO,EAAET,SAAS,CAACM,GAAV,CAAc,SAAd;AAJH,KAAV;AAMA,WAAOD,GAAP;AACH,GATD,MASO;AACH,WAAO,EAAP;AACH;AACJ,CAbM;AAeP,OAAO,MAAMK,UAAU,GAAIpB,KAAD,IAAW;AACjC,MAAI;AACA,QAAIqB,QAAQ,GAAGrB,KAAK,CAACsB,OAAN,CAAc,YAAd,EAA4B,OAA5B,CAAf;AACA,WAAO;AAACC,MAAAA,MAAM,EAAEF;AAAT,KAAP;AACH,GAHD,CAGE,OAAMG,CAAN,EAAS;AACP,WAAO;AAACD,MAAAA,MAAM,EAAEvB,KAAK,IAAI;AAAlB,KAAP;AACH;AAEJ,CARM","sourcesContent":["export const hasError = (errors) => {\r\n    let hasError = false;\r\n    for(let key in errors) {\r\n        if(errors[key]) hasError = true\r\n    }\r\n    return hasError\r\n}\r\n\r\nexport const modifyForReactSealect = (options = []) => {\r\n    let arr = [];\r\n    options.map((item) => {\r\n        arr.push({label: item, value: item})\r\n    })\r\n    return arr;\r\n}\r\n\r\nexport const addOrRemove = (array, value) => {\r\n    if(!Array.isArray(array)) return array;\r\n    let index = array.findIndex(item => item.id === value.id)\r\n    if (index === -1) {\r\n        array.push(value);\r\n    } else {\r\n        array.splice(index, 1);\r\n    }\r\n    return array;\r\n}\r\n\r\nexport const isIncludesThisId = (array, id) => {\r\n    if(!Array.isArray(array)) return array;\r\n    let found = false;\r\n    array.map(item => {\r\n        if(item.id === id) found = true\r\n    })\r\n    return found;\r\n}\r\n\r\nexport const urlSearchParams = () => {\r\n    if(process.browser) {\r\n        let urlParams = new URLSearchParams(window.location.search);\r\n        let obj = {\r\n            search: urlParams.get('search'),\r\n            from: urlParams.get('from'),\r\n            to: urlParams.get('to'),\r\n            country: urlParams.get('country')\r\n        }\r\n        return obj;\r\n    } else {\r\n        return {}\r\n    }\r\n}\r\n\r\nexport const modifyToBr = (value) => {\r\n    try {\r\n        let modified = value.replace(/(\\r\\n|\\n)/g, \"<br/>\")\r\n        return {__html: modified};\r\n    } catch(e) {\r\n        return {__html: value || ''};\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}