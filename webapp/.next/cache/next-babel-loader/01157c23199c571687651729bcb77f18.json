{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { Wrapper } from '../../components/StyledComponents/Wrapper';\nimport { ButtonWithIcon } from '../../components/controls/Button/ButtonWithIcon';\nimport { Divider } from '../../components/StyledComponents/Divider';\nimport { Close, LogoGreen } from '../../components/StyledComponents/Icon';\nimport { FlexBlock } from '../../components/StyledComponents/FlexBlock';\nimport { Text } from '../../components/StyledComponents/Text';\nimport RegEmail from '../../components/Auth/RegEmail';\nimport GoogleLoginBtn from '../../components/Auth/GoogleLoginBtn';\nimport FacebookLoginBtn from '../../components/Auth/FacebookLoginBtn';\nimport { urlSearchParams } from '../../utils/utils';\nimport styled, { css } from 'styled-components';\nimport { device } from '../../lib/mediaDevice';\nimport { useDetectDevice } from '../../lib/useDetectDevice';\n\nconst RegistrationPage = () => {\n  const {\n    0: viewRegEmail,\n    1: setView\n  } = useState(false);\n  let {\n    ioid\n  } = urlSearchParams();\n  const currentDevice = useDetectDevice();\n\n  if (ioid) {\n    localStorage.setItem('ioid', ioid);\n  }\n\n  return __jsx(LoginWrap, null, __jsx(Wrapper, {\n    p: 25\n  }, viewRegEmail ? __jsx(FormWrap, {\n    isRegEmail: true\n  }, __jsx(RegEmail, {\n    setView: setView\n  })) : __jsx(React.Fragment, null, __jsx(Wrapper, {\n    mb: 35\n  }, currentDevice.isMobileTablet ? __jsx(Close, {\n    onClick: () => Router.back()\n  }) : __jsx(Link, {\n    href: '/'\n  }, __jsx(LogoGreen, null))), __jsx(FormWrap, null, __jsx(GoogleLoginBtn, null), __jsx(FacebookLoginBtn, null), __jsx(FlexBlock, null, __jsx(Divider, {\n    grey: true,\n    full: true\n  }), __jsx(Text, null, \"or\"), __jsx(Divider, {\n    grey: true,\n    full: true\n  })), __jsx(ButtonWithIcon, {\n    email: true,\n    mt: 10,\n    onClick: () => setView(true)\n  }, \"Register with E-mail\"), __jsx(Divider, {\n    grey: true,\n    full: true,\n    mt: 20,\n    mb: 16\n  }), __jsx(FlexBlock, {\n    right: true\n  }, __jsx(Text, {\n    mr: 10\n  }, \"Already signed up?\"), __jsx(Link, {\n    href: '/login'\n  }, __jsx(Text, {\n    isLink: true\n  }, \"Log in\")))))));\n};\n\nconst LoginWrap = styled.div`\n  ${LogoGreen} {\n    width: 46px;\n    cursor: pointer;\n  }\n`;\nconst FormWrap = styled.div`\n  @media ${device.laptopDesktop} {\n    width: 400px;\n    margin: 10% auto 0 auto;\n\n    ${p => p.isRegEmail && css`\n        margin-top: 0;\n      `}\n  }\n`;\nexport default RegistrationPage;","map":{"version":3,"sources":["D:/4/диплом/webapp/pages/registration/index.js"],"names":["React","useState","useContext","Link","Router","Wrapper","ButtonWithIcon","Divider","Close","LogoGreen","FlexBlock","Text","RegEmail","GoogleLoginBtn","FacebookLoginBtn","urlSearchParams","styled","css","device","useDetectDevice","RegistrationPage","viewRegEmail","setView","ioid","currentDevice","localStorage","setItem","isMobileTablet","back","LoginWrap","div","FormWrap","laptopDesktop","p","isRegEmail"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,2CAAxB;AACA,SAASC,cAAT,QAA+B,iDAA/B;AACA,SAASC,OAAT,QAAwB,2CAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,wCAAjC;AACA,SAASC,SAAT,QAA0B,6CAA1B;AACA,SAASC,IAAT,QAAqB,wCAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,eAAT,QAAgC,2BAAhC;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAA0BrB,QAAQ,CAAC,KAAD,CAAxC;AACA,MAAI;AAAEsB,IAAAA;AAAF,MAAWR,eAAe,EAA9B;AACA,QAAMS,aAAa,GAAGL,eAAe,EAArC;;AAEA,MAAII,IAAJ,EAAU;AACRE,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BH,IAA7B;AACD;;AAED,SACE,MAAC,SAAD,QACE,MAAC,OAAD;AAAS,IAAA,CAAC,EAAE;AAAZ,KACGF,YAAY,GACX,MAAC,QAAD;AAAU,IAAA,UAAU;AAApB,KACE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEC;AAAnB,IADF,CADW,GAKX,4BACE,MAAC,OAAD;AAAS,IAAA,EAAE,EAAE;AAAb,KACGE,aAAa,CAACG,cAAd,GACC,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,MAAMvB,MAAM,CAACwB,IAAP;AAAtB,IADD,GAGC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,KACE,MAAC,SAAD,OADF,CAJJ,CADF,EAWE,MAAC,QAAD,QACE,MAAC,cAAD,OADF,EAEE,MAAC,gBAAD,OAFF,EAIE,MAAC,SAAD,QACE,MAAC,OAAD;AAAS,IAAA,IAAI,MAAb;AAAc,IAAA,IAAI;AAAlB,IADF,EAEE,MAAC,IAAD,aAFF,EAGE,MAAC,OAAD;AAAS,IAAA,IAAI,MAAb;AAAc,IAAA,IAAI;AAAlB,IAHF,CAJF,EASE,MAAC,cAAD;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,EAAE,EAAE,EAA1B;AAA8B,IAAA,OAAO,EAAE,MAAMN,OAAO,CAAC,IAAD;AAApD,4BATF,EAYE,MAAC,OAAD;AAAS,IAAA,IAAI,MAAb;AAAc,IAAA,IAAI,MAAlB;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE;AAA/B,IAZF,EAaE,MAAC,SAAD;AAAW,IAAA,KAAK;AAAhB,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAV,0BADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,KACE,MAAC,IAAD;AAAM,IAAA,MAAM;AAAZ,cADF,CAFF,CAbF,CAXF,CANJ,CADF,CADF;AA4CD,CArDD;;AAuDA,MAAMO,SAAS,GAAGb,MAAM,CAACc,GAAI;IACzBrB,SAAU;;;;CADd;AAMA,MAAMsB,QAAQ,GAAGf,MAAM,CAACc,GAAI;WACjBZ,MAAM,CAACc,aAAc;;;;MAIzBC,CAAD,IACAA,CAAC,CAACC,UAAF,IACAjB,GAAI;;OAEF;;CATR;AAaA,eAAeG,gBAAf","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport Link from 'next/link'\r\nimport Router from 'next/router'\r\nimport { Wrapper } from '../../components/StyledComponents/Wrapper'\r\nimport { ButtonWithIcon } from '../../components/controls/Button/ButtonWithIcon'\r\nimport { Divider } from '../../components/StyledComponents/Divider'\r\nimport { Close, LogoGreen } from '../../components/StyledComponents/Icon'\r\nimport { FlexBlock } from '../../components/StyledComponents/FlexBlock'\r\nimport { Text } from '../../components/StyledComponents/Text'\r\nimport RegEmail from '../../components/Auth/RegEmail'\r\nimport GoogleLoginBtn from '../../components/Auth/GoogleLoginBtn'\r\nimport FacebookLoginBtn from '../../components/Auth/FacebookLoginBtn'\r\nimport { urlSearchParams } from '../../utils/utils'\r\nimport styled, { css } from 'styled-components'\r\nimport { device } from '../../lib/mediaDevice'\r\nimport { useDetectDevice } from '../../lib/useDetectDevice'\r\n\r\nconst RegistrationPage = () => {\r\n  const [viewRegEmail, setView] = useState(false)\r\n  let { ioid } = urlSearchParams()\r\n  const currentDevice = useDetectDevice()\r\n\r\n  if (ioid) {\r\n    localStorage.setItem('ioid', ioid)\r\n  }\r\n\r\n  return (\r\n    <LoginWrap>\r\n      <Wrapper p={25}>\r\n        {viewRegEmail ? (\r\n          <FormWrap isRegEmail>\r\n            <RegEmail setView={setView} />\r\n          </FormWrap>\r\n        ) : (\r\n          <>\r\n            <Wrapper mb={35}>\r\n              {currentDevice.isMobileTablet ? (\r\n                <Close onClick={() => Router.back()} />\r\n              ) : (\r\n                <Link href={'/'}>\r\n                  <LogoGreen />\r\n                </Link>\r\n              )}\r\n            </Wrapper>\r\n\r\n            <FormWrap>\r\n              <GoogleLoginBtn />\r\n              <FacebookLoginBtn />\r\n\r\n              <FlexBlock>\r\n                <Divider grey full />\r\n                <Text>or</Text>\r\n                <Divider grey full />\r\n              </FlexBlock>\r\n              <ButtonWithIcon email mt={10} onClick={() => setView(true)}>\r\n                Register with E-mail\r\n              </ButtonWithIcon>\r\n              <Divider grey full mt={20} mb={16} />\r\n              <FlexBlock right>\r\n                <Text mr={10}>Already signed up?</Text>\r\n                <Link href={'/login'}>\r\n                  <Text isLink>Log in</Text>\r\n                </Link>\r\n              </FlexBlock>\r\n            </FormWrap>\r\n          </>\r\n        )}\r\n      </Wrapper>\r\n    </LoginWrap>\r\n  )\r\n}\r\n\r\nconst LoginWrap = styled.div`\r\n  ${LogoGreen} {\r\n    width: 46px;\r\n    cursor: pointer;\r\n  }\r\n`\r\nconst FormWrap = styled.div`\r\n  @media ${device.laptopDesktop} {\r\n    width: 400px;\r\n    margin: 10% auto 0 auto;\r\n\r\n    ${(p) =>\r\n      p.isRegEmail &&\r\n      css`\r\n        margin-top: 0;\r\n      `}\r\n  }\r\n`\r\n\r\nexport default RegistrationPage\r\n"]},"metadata":{},"sourceType":"module"}