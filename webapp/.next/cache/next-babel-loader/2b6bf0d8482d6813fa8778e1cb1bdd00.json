{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport Link from 'next/link';\nimport styled, { css } from 'styled-components';\nimport Router, { useRouter } from 'next/router';\nimport Header from '../../components/Header/Header';\nimport { apiGetListChats } from '../../actions/api';\nimport { Title } from '../../components/Inbox/styledComponent';\nimport InboxItem from '../../components/Inbox/InboxItem';\nimport { Divider } from '../../components/StyledComponents/Divider';\nimport { MainContext } from '../../components/contextProviders/MainContext';\nimport { ContainerDesktop } from '../../components/StyledComponents/Grid';\nexport default (() => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    me\n  } = useContext(MainContext);\n  const {\n    0: chats,\n    1: setChats\n  } = useState([]);\n  const {\n    0: photos,\n    1: setPhotos\n  } = useState([]);\n  const {\n    0: bookingDates,\n    1: setBookingDates\n  } = useState({\n    startDate: null,\n    endDate: null\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    apiGetListChats().then(res => {\n      setChats(res.data.reverse());\n      setLoading(false);\n    }).catch(e => {\n      setLoading(false);\n    });\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    isProfile: true\n  }), __jsx(ContainerDesktop, null, __jsx(Title, null, \"Inbox\"), __jsx(Divider, {\n    full: true,\n    grey: true\n  }), !loading ? __jsx(React.Fragment, null, !chats.length ? __jsx(NotYet, null, \"You have no messages yet\") : __jsx(React.Fragment, null, chats.map((item, key) => __jsx(InboxItem, {\n    key: key,\n    chat: item,\n    me: me\n  })))) : __jsx(React.Fragment, null, \"Loading...\")));\n});\nconst NotYet = styled.div`\n  font-size: 18px;\n  margin-top: 20px;\n  color: rgba(0, 0, 0, 0.8);\n  text-align: center;\n`;","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/pages/inbox/index.js"],"names":["React","useState","useContext","useEffect","dynamic","Link","styled","css","Router","useRouter","Header","apiGetListChats","Title","InboxItem","Divider","MainContext","ContainerDesktop","router","id","query","me","chats","setChats","photos","setPhotos","bookingDates","setBookingDates","startDate","endDate","loading","setLoading","then","res","data","reverse","catch","e","length","map","item","key","NotYet","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,KAAT,QAAsB,wCAAtB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,OAAT,QAAwB,2CAAxB;AACA,SAASC,WAAT,QAA4B,+CAA5B;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AAEA,gBAAe,MAAM;AACnB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASlB,UAAU,CAACa,WAAD,CAAzB;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACsB,MAAD;AAAA,OAASC;AAAT,MAAsBvB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACwB,YAAD;AAAA,OAAeC;AAAf,MAAkCzB,QAAQ,CAAC;AAAE0B,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,OAAO,EAAE;AAA5B,GAAD,CAAhD;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwB7B,QAAQ,CAAC,IAAD,CAAtC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,eAAe,GACZoB,IADH,CACSC,GAAD,IAAS;AACbV,MAAAA,QAAQ,CAACU,GAAG,CAACC,IAAJ,CAASC,OAAT,EAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJH,EAKGK,KALH,CAKUC,CAAD,IAAO;AACZN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAWA,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,SAAS;AAAjB,IADF,EAEE,MAAC,gBAAD,QACE,MAAC,KAAD,gBADF,EAEE,MAAC,OAAD;AAAS,IAAA,IAAI,MAAb;AAAc,IAAA,IAAI;AAAlB,IAFF,EAGG,CAACD,OAAD,GACC,4BACG,CAACR,KAAK,CAACgB,MAAP,GACC,MAAC,MAAD,mCADD,GAGC,4BACGhB,KAAK,CAACiB,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,KACT,MAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,GAAhB;AAAqB,IAAA,IAAI,EAAED,IAA3B;AAAiC,IAAA,EAAE,EAAEnB;AAArC,IADD,CADH,CAJJ,CADD,GAaC,yCAhBJ,CAFF,CADF;AAwBD,CA5CD;AA8CA,MAAMqB,MAAM,GAAGnC,MAAM,CAACoC,GAAI;;;;;CAA1B","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport dynamic from 'next/dynamic'\r\nimport Link from 'next/link'\r\nimport styled, { css } from 'styled-components'\r\nimport Router, { useRouter } from 'next/router'\r\nimport Header from '../../components/Header/Header'\r\nimport { apiGetListChats } from '../../actions/api'\r\nimport { Title } from '../../components/Inbox/styledComponent'\r\nimport InboxItem from '../../components/Inbox/InboxItem'\r\nimport { Divider } from '../../components/StyledComponents/Divider'\r\nimport { MainContext } from '../../components/contextProviders/MainContext'\r\nimport { ContainerDesktop } from '../../components/StyledComponents/Grid'\r\n\r\nexport default () => {\r\n  const router = useRouter()\r\n  const { id } = router.query\r\n  const { me } = useContext(MainContext)\r\n  const [chats, setChats] = useState([])\r\n  const [photos, setPhotos] = useState([])\r\n  const [bookingDates, setBookingDates] = useState({ startDate: null, endDate: null })\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    apiGetListChats()\r\n      .then((res) => {\r\n        setChats(res.data.reverse())\r\n        setLoading(false)\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Header isProfile />\r\n      <ContainerDesktop>\r\n        <Title>Inbox</Title>\r\n        <Divider full grey />\r\n        {!loading ? (\r\n          <>\r\n            {!chats.length ? (\r\n              <NotYet>You have no messages yet</NotYet>\r\n            ) : (\r\n              <>\r\n                {chats.map((item, key) => (\r\n                  <InboxItem key={key} chat={item} me={me} />\r\n                ))}\r\n              </>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>Loading...</>\r\n        )}\r\n      </ContainerDesktop>\r\n    </>\r\n  )\r\n}\r\n\r\nconst NotYet = styled.div`\r\n  font-size: 18px;\r\n  margin-top: 20px;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  text-align: center;\r\n`\r\n"]},"metadata":{},"sourceType":"module"}