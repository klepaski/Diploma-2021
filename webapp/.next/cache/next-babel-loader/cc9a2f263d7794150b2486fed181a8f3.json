{"ast":null,"code":"import { NotificationManager } from 'react-notifications';\nexport const showNotification = (type = 'info', msg) => {\n  let text = '';\n\n  switch (type) {\n    case 'error':\n      if (msg.response instanceof Object && msg.response.data instanceof Object && msg.response.data.error instanceof Object && msg.response.data.error.message) {\n        text = msg.response.data.error.message;\n      } else if (msg instanceof Object && msg.response instanceof Object && msg.response.data instanceof Object && (typeof msg.response.data.error == 'string' || typeof msg.response.data.message == 'string')) {\n        text = msg.response.data.message || msg.data.response.data.error;\n      } else if (msg instanceof Object && (typeof msg.message == 'string' || typeof msg.error == 'string')) {\n        text = msg.message || msg.error;\n      } else if (typeof msg == 'string') {\n        text = msg;\n      } else {\n        text = 'error';\n      }\n\n      break;\n\n    case 'info':\n      if (msg instanceof String || typeof msg == 'string') text = msg;\n      break;\n\n    default:\n  }\n\n  console.log(msg);\n  NotificationManager[type](text);\n};","map":{"version":3,"sources":["D:/4/диплом/webapp/utils/notification.js"],"names":["NotificationManager","showNotification","type","msg","text","response","Object","data","error","message","String","console","log"],"mappings":"AAAA,SAAQA,mBAAR,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,IAAI,GAAG,MAAR,EAAgBC,GAAhB,KAAyB;AACrD,MAAIC,IAAI,GAAG,EAAX;;AACA,UAAQF,IAAR;AACI,SAAK,OAAL;AACI,UACIC,GAAG,CAACE,QAAJ,YAAwBC,MAAxB,IACAH,GAAG,CAACE,QAAJ,CAAaE,IAAb,YAA6BD,MAD7B,IAEAH,GAAG,CAACE,QAAJ,CAAaE,IAAb,CAAkBC,KAAlB,YAAmCF,MAFnC,IAGAH,GAAG,CAACE,QAAJ,CAAaE,IAAb,CAAkBC,KAAlB,CAAwBC,OAJ5B,EAKE;AACEL,QAAAA,IAAI,GAAGD,GAAG,CAACE,QAAJ,CAAaE,IAAb,CAAkBC,KAAlB,CAAwBC,OAA/B;AACH,OAPD,MAQK,IACDN,GAAG,YAAYG,MAAf,IACAH,GAAG,CAACE,QAAJ,YAAwBC,MADxB,IAEAH,GAAG,CAACE,QAAJ,CAAaE,IAAb,YAA6BD,MAF7B,KAGC,OAAOH,GAAG,CAACE,QAAJ,CAAaE,IAAb,CAAkBC,KAAzB,IAAmC,QAAnC,IAA+C,OAAOL,GAAG,CAACE,QAAJ,CAAaE,IAAb,CAAkBE,OAAzB,IAAqC,QAHrF,CADC,EAKH;AACEL,QAAAA,IAAI,GAAGD,GAAG,CAACE,QAAJ,CAAaE,IAAb,CAAkBE,OAAlB,IAA6BN,GAAG,CAACI,IAAJ,CAASF,QAAT,CAAkBE,IAAlB,CAAuBC,KAA3D;AACH,OAPI,MAQA,IACDL,GAAG,YAAYG,MAAf,KACC,OAAOH,GAAG,CAACM,OAAX,IAAuB,QAAvB,IAAmC,OAAON,GAAG,CAACK,KAAX,IAAqB,QADzD,CADC,EAGH;AACEJ,QAAAA,IAAI,GAAGD,GAAG,CAACM,OAAJ,IAAeN,GAAG,CAACK,KAA1B;AACH,OALI,MAMA,IACD,OAAOL,GAAP,IAAe,QADd,EAEH;AACEC,QAAAA,IAAI,GAAGD,GAAP;AACH,OAJI,MAIE;AACHC,QAAAA,IAAI,GAAG,OAAP;AACH;;AACD;;AACJ,SAAK,MAAL;AACI,UAAGD,GAAG,YAAYO,MAAf,IAAyB,OAAOP,GAAP,IAAe,QAA3C,EAAqDC,IAAI,GAAGD,GAAP;AACrD;;AACJ;AAnCJ;;AAsCAQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACAH,EAAAA,mBAAmB,CAACE,IAAD,CAAnB,CAA0BE,IAA1B;AACH,CA1CM","sourcesContent":["import {NotificationManager} from 'react-notifications';\r\n\r\nexport const showNotification = (type = 'info', msg ) => {\r\n    let text = ''\r\n    switch (type) {\r\n        case 'error' :\r\n            if(\r\n                msg.response instanceof Object &&\r\n                msg.response.data instanceof Object &&\r\n                msg.response.data.error instanceof Object &&\r\n                msg.response.data.error.message\r\n            ) {\r\n                text = msg.response.data.error.message\r\n            }\r\n            else if(\r\n                msg instanceof Object &&\r\n                msg.response instanceof Object &&\r\n                msg.response.data instanceof Object &&\r\n                (typeof(msg.response.data.error) == 'string' || typeof(msg.response.data.message) == 'string' )\r\n            ) {\r\n                text = msg.response.data.message || msg.data.response.data.error\r\n            }\r\n            else if(\r\n                msg instanceof Object &&\r\n                (typeof(msg.message) == 'string' || typeof(msg.error) == 'string' )\r\n            ) {\r\n                text = msg.message || msg.error\r\n            }\r\n            else if(\r\n                typeof(msg) == 'string'\r\n            ) {\r\n                text = msg\r\n            } else {\r\n                text = 'error'\r\n            }\r\n            break;\r\n        case 'info' :\r\n            if(msg instanceof String || typeof(msg) == 'string') text = msg\r\n            break;\r\n        default :\r\n    }\r\n\r\n    console.log(msg)\r\n    NotificationManager[type](text)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}