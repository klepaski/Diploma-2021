{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Button } from \"../../controls/Button/Button\";\nimport BasePrice from \"../price/BasePrice\";\nimport { WrapperHeight } from \"../../StyledComponents/Wrapper\";\nimport { Label, Label2, Title, WrapRadioBlock, WrapRadioBlock2 } from \"../../Layouts/styledLayouts\";\nimport { Divider } from \"../../StyledComponents/Divider\";\nimport { Clr1, Clr2 } from \"../../StyledComponents/Icon\";\nimport { Text } from \"../../StyledComponents/Text\";\nimport { RadioBtn } from \"../../controls/Radio/Radio\";\nimport { Input } from \"../../controls/Input/Input\";\nimport Select from \"../../controls/Select/Select\";\nimport { CURRENCY } from \"../../../utils/data\";\nexport default (({\n  offer,\n  onChange,\n  isLoading,\n  onSave\n}) => {\n  const preOnChange = ({\n    type,\n    value\n  }) => {\n    onChange({\n      target: {\n        name: type,\n        value: value\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Title, {\n    mb: 40\n  }, \"How do you want to set your price?\"), __jsx(Divider, {\n    grey: true,\n    full: true,\n    mt: 10,\n    mb: 10\n  }), __jsx(Title, {\n    mb: 15\n  }, \"Price\"), __jsx(Label, null, \"Your price for one offer\"), __jsx(Label2, null, \"Value\"), __jsx(Input, {\n    name: \"pricePerAct\",\n    value: offer.pricePerAct,\n    onChange: e => preOnChange({\n      type: e.target.name,\n      value: e.target.value\n    }),\n    mb: 10,\n    placeholder: \"Ex.: 500\"\n  }), __jsx(Label2, null, \"Currency\"), __jsx(Select, {\n    options: CURRENCY,\n    value: offer.currency,\n    onChange: value => preOnChange({\n      type: 'currency',\n      value: value.value\n    }),\n    mb: 30\n  }), __jsx(Button, {\n    green: true,\n    loading: isLoading,\n    onClick: onSave,\n    mt: 70\n  }, \"Save\"));\n});","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/components/Offer/edit/Price.js"],"names":["React","useState","useContext","useEffect","Button","BasePrice","WrapperHeight","Label","Label2","Title","WrapRadioBlock","WrapRadioBlock2","Divider","Clr1","Clr2","Text","RadioBtn","Input","Select","CURRENCY","offer","onChange","isLoading","onSave","preOnChange","type","value","target","name","pricePerAct","e","currency"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AAEA,SAAQC,MAAR,QAAqB,8BAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAAQC,aAAR,QAA4B,gCAA5B;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,cAA9B,EAA8CC,eAA9C,QAAoE,6BAApE;AACA,SAAQC,OAAR,QAAsB,gCAAtB;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,6BAAzB;AACA,SAAQC,IAAR,QAAmB,6BAAnB;AACA,SAAQC,QAAR,QAAuB,4BAAvB;AACA,SAAQC,KAAR,QAAoB,4BAApB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AAEA,gBAAe,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAD,KAA0C;AACrD,QAAMC,WAAW,GAAG,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD,KAAmB;AACnCL,IAAAA,QAAQ,CAAE;AAACM,MAAAA,MAAM,EAAE;AAACC,QAAAA,IAAI,EAAEH,IAAP;AAAaC,QAAAA,KAAK,EAAEA;AAApB;AAAT,KAAF,CAAR;AACH,GAFD;;AAMA,SACI,4BACI,MAAC,KAAD;AAAO,IAAA,EAAE,EAAE;AAAX,0CADJ,EAGI,MAAC,OAAD;AAAS,IAAA,IAAI,MAAb;AAAc,IAAA,IAAI,MAAlB;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE;AAA/B,IAHJ,EAMI,MAAC,KAAD;AAAO,IAAA,EAAE,EAAE;AAAX,aANJ,EAOI,MAAC,KAAD,mCAPJ,EAQI,MAAC,MAAD,gBARJ,EASI,MAAC,KAAD;AACI,IAAA,IAAI,EAAC,aADT;AAEI,IAAA,KAAK,EAAEN,KAAK,CAACS,WAFjB;AAGI,IAAA,QAAQ,EAAEC,CAAC,IAAIN,WAAW,CAAC;AAACC,MAAAA,IAAI,EAAEK,CAAC,CAACH,MAAF,CAASC,IAAhB;AAAsBF,MAAAA,KAAK,EAAEI,CAAC,CAACH,MAAF,CAASD;AAAtC,KAAD,CAH9B;AAII,IAAA,EAAE,EAAE,EAJR;AAKI,IAAA,WAAW,EAAC;AALhB,IATJ,EAiBI,MAAC,MAAD,mBAjBJ,EAkBI,MAAC,MAAD;AACI,IAAA,OAAO,EAAEP,QADb;AAEI,IAAA,KAAK,EAAEC,KAAK,CAACW,QAFjB;AAGI,IAAA,QAAQ,EAAGL,KAAD,IAAWF,WAAW,CAAC;AAACC,MAAAA,IAAI,EAAE,UAAP;AAAmBC,MAAAA,KAAK,EAAEA,KAAK,CAACA;AAAhC,KAAD,CAHpC;AAII,IAAA,EAAE,EAAE;AAJR,IAlBJ,EAyBI,MAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,OAAO,EAAEJ,SAAvB;AAAkC,IAAA,OAAO,EAAEC,MAA3C;AAAmD,IAAA,EAAE,EAAE;AAAvD,YAzBJ,CADJ;AA6BH,CApCD","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\n\r\nimport {Button} from \"../../controls/Button/Button\";\r\nimport BasePrice from \"../price/BasePrice\";\r\nimport {WrapperHeight} from \"../../StyledComponents/Wrapper\";\r\nimport {Label, Label2, Title, WrapRadioBlock, WrapRadioBlock2} from \"../../Layouts/styledLayouts\";\r\nimport {Divider} from \"../../StyledComponents/Divider\";\r\nimport {Clr1, Clr2} from \"../../StyledComponents/Icon\";\r\nimport {Text} from \"../../StyledComponents/Text\";\r\nimport {RadioBtn} from \"../../controls/Radio/Radio\";\r\nimport {Input} from \"../../controls/Input/Input\";\r\nimport Select from \"../../controls/Select/Select\";\r\nimport {CURRENCY} from \"../../../utils/data\"\r\n\r\nexport default ({offer, onChange, isLoading, onSave}) => {\r\n    const preOnChange = ({type, value}) => {\r\n        onChange( {target: {name: type, value: value}})\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Title mb={40} >How do you want to set your price?</Title>\r\n\r\n            <Divider grey full mt={10} mb={10}></Divider>\r\n\r\n\r\n            <Title mb={15} >Price</Title>\r\n            <Label>Your price for one offer</Label>\r\n            <Label2 >Value</Label2>\r\n            <Input\r\n                name='pricePerAct'\r\n                value={offer.pricePerAct}\r\n                onChange={e => preOnChange({type: e.target.name, value: e.target.value})}\r\n                mb={10}\r\n                placeholder=\"Ex.: 500\"\r\n            />\r\n            {/*<Text blue mb={30} fz={18} >Your price is: 350 AED</Text>*/}\r\n            <Label2 >Currency</Label2>\r\n            <Select\r\n                options={CURRENCY}\r\n                value={offer.currency}\r\n                onChange={(value) => preOnChange({type: 'currency', value: value.value})}\r\n                mb={30}\r\n            />\r\n\r\n            <Button green loading={isLoading} onClick={onSave} mt={70}>Save</Button>\r\n        </>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}