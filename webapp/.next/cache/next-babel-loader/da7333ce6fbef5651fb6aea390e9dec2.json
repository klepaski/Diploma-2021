{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { Wrapper } from \"../../StyledComponents/Wrapper\";\nimport { Title } from \"../../Layouts/styledLayouts\";\nimport { Divider } from \"../../StyledComponents/Divider\";\nimport OfferParams from \"../../controls/OfferParams/OfferParams\";\nimport { HeaderChat } from \"../../Inbox/styledComponent\";\nimport Link from \"next/link\";\nimport arrowBack from \"../../../static/img/arrow-back.svg\";\nimport { FlexBlock } from \"../../StyledComponents/FlexBlock\";\nimport { Text } from \"../../StyledComponents/Text\";\nimport { BookCategory, BookLabel, BookLabelForm, BookOfferImg, BookText, BookTitle, BookWrapPrice, WrapBookTop, WrapBookTopLeft, WrapBookTopRight } from \"../../Booking/styledComponent\";\nimport { modifySrc } from \"../../../utils/modifySrc\";\nimport { Button, ButtonMinHeight } from \"../../controls/Button/Button\";\nimport { Input, TextArea } from \"../../controls/Input/Input\";\n\nvar DetailsBook = function DetailsBook(_ref) {\n  var offer = _ref.offer,\n      bookingDates = _ref.bookingDates,\n      setDetailsView = _ref.setDetailsView,\n      onChange = _ref.onChange,\n      handleBook = _ref.handleBook,\n      loadingReserv = _ref.loadingReserv;\n\n  var _useState = useState(''),\n      dates = _useState[0],\n      setDates = _useState[1];\n\n  useEffect(function () {\n    var from = bookingDates.startDate,\n        to = bookingDates.endDate;\n\n    if (new Date(from).getTime() === new Date(to).getTime()) {\n      setDates(moment(from).format('D MMM YYYY'));\n    } else {\n      setDates(moment(from).format('D MMM YYYY') + ' - ' + moment(to).format('D MMM YYYY'));\n    }\n  }, []);\n  console.log('bookingDates', bookingDates);\n  if (!offer.id) return null;\n  return __jsx(React.Fragment, null, __jsx(HeaderChat, null, __jsx(\"img\", {\n    src: arrowBack,\n    alt: \"\",\n    onClick: function onClick() {\n      return setDetailsView(false);\n    }\n  })), __jsx(Wrapper, {\n    p: 17\n  }, __jsx(Text, {\n    fz: 28,\n    mb: 20\n  }, \"Let\\u2019s define the details about your order\"), __jsx(WrapBookTop, null, __jsx(WrapBookTopLeft, null, __jsx(BookCategory, null, offer.subCategory && offer.subCategory.category ? offer.subCategory.category : offer.category.category), __jsx(BookTitle, null, offer.name)), __jsx(WrapBookTopRight, null, __jsx(BookOfferImg, {\n    src: modifySrc(offer.avatarUrl, 'offer')\n  }))), __jsx(Divider, {\n    grey: true,\n    full: true,\n    mt: 20,\n    mb: 20\n  }), __jsx(BookLabel, null, \"Dates\"), __jsx(BookText, null, dates), __jsx(Divider, {\n    grey: true,\n    full: true,\n    mt: 20,\n    mb: 20\n  }), __jsx(BookLabel, null, \"Location\"), __jsx(Input, {\n    name: \"location\",\n    value: bookingDates.location,\n    onChange: onChange,\n    mb: 10,\n    placeholder: \"\"\n  }), __jsx(TextArea, {\n    name: \"locationDetails\",\n    value: bookingDates.locationDetails,\n    onChange: onChange,\n    height: 90,\n    placeholder: \"Additional information for the location\"\n  }), __jsx(Divider, {\n    grey: true,\n    full: true,\n    mt: 20,\n    mb: 20\n  }), __jsx(BookLabel, null, \"Start time of performance\"), __jsx(Input, {\n    name: \"startTime\",\n    value: bookingDates.startTime,\n    onChange: onChange,\n    mb: 10,\n    placeholder: \"\"\n  }), __jsx(Divider, {\n    grey: true,\n    full: true,\n    mt: 20,\n    mb: 20\n  }), __jsx(BookLabel, null, \"Additional terms\"), __jsx(TextArea, {\n    name: \"additionalTerms\",\n    value: bookingDates.additionalTerms,\n    onChange: onChange,\n    height: 90,\n    placeholder: \"\"\n  }), __jsx(Button, {\n    mt: 20,\n    mb: 10,\n    green: true,\n    loading: loadingReserv,\n    onClick: handleBook\n  }, \"Send request to organizer\")));\n};\n\nexport default DetailsBook;","map":{"version":3,"sources":["D:/git/webapp3/webapp/components/Offer/detailsBook/index.js"],"names":["React","useState","useEffect","moment","Wrapper","Title","Divider","OfferParams","HeaderChat","Link","arrowBack","FlexBlock","Text","BookCategory","BookLabel","BookLabelForm","BookOfferImg","BookText","BookTitle","BookWrapPrice","WrapBookTop","WrapBookTopLeft","WrapBookTopRight","modifySrc","Button","ButtonMinHeight","Input","TextArea","DetailsBook","offer","bookingDates","setDetailsView","onChange","handleBook","loadingReserv","dates","setDates","from","startDate","to","endDate","Date","getTime","format","console","log","id","subCategory","category","name","avatarUrl","location","locationDetails","startTime","additionalTerms"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport moment from 'moment'\r\n\r\nimport {Wrapper} from \"../../StyledComponents/Wrapper\";\r\nimport {Title} from \"../../Layouts/styledLayouts\";\r\nimport {Divider} from \"../../StyledComponents/Divider\";\r\n\r\nimport OfferParams from \"../../controls/OfferParams/OfferParams\";\r\nimport {HeaderChat} from \"../../Inbox/styledComponent\";\r\nimport Link from \"next/link\";\r\nimport arrowBack from \"../../../static/img/arrow-back.svg\";\r\nimport {FlexBlock} from \"../../StyledComponents/FlexBlock\";\r\nimport {Text} from \"../../StyledComponents/Text\";\r\nimport {\r\n    BookCategory, BookLabel, BookLabelForm,\r\n    BookOfferImg, BookText,\r\n    BookTitle, BookWrapPrice,\r\n    WrapBookTop,\r\n    WrapBookTopLeft,\r\n    WrapBookTopRight\r\n} from \"../../Booking/styledComponent\";\r\nimport {modifySrc} from \"../../../utils/modifySrc\";\r\nimport {Button, ButtonMinHeight} from \"../../controls/Button/Button\";\r\nimport {Input, TextArea} from \"../../controls/Input/Input\";\r\n\r\nconst DetailsBook = ({offer, bookingDates, setDetailsView, onChange, handleBook, loadingReserv}) => {\r\n    const [dates, setDates] = useState('')\r\n\r\n    useEffect(() => {\r\n        let from = bookingDates.startDate,\r\n            to = bookingDates.endDate;\r\n        if(new Date(from).getTime() === new Date(to).getTime()) {\r\n            setDates(moment(from).format('D MMM YYYY'))\r\n        } else {\r\n            setDates(moment(from).format('D MMM YYYY') + ' - ' + moment(to).format('D MMM YYYY'))\r\n        }\r\n    }, [])\r\n\r\n    console.log('bookingDates', bookingDates)\r\n\r\n\r\n    if(!offer.id) return null\r\n    return (\r\n        <>\r\n            <HeaderChat>\r\n                <img src={arrowBack} alt=\"\" onClick={() => setDetailsView(false)} />\r\n            </HeaderChat>\r\n            <Wrapper p={17}>\r\n                <Text fz={28} mb={20}>Let’s define the details about your order</Text>\r\n                <WrapBookTop>\r\n                    <WrapBookTopLeft>\r\n                        <BookCategory>\r\n                            {(offer.subCategory && offer.subCategory.category) ?\r\n                                offer.subCategory.category\r\n                                :\r\n                                offer.category.category\r\n                            }\r\n                        </BookCategory>\r\n\r\n                        <BookTitle>{offer.name}</BookTitle>\r\n                        {/*<Text grey mt={10}>Organizer: {me.firstName} {me.lastName}</Text>*/}\r\n                    </WrapBookTopLeft>\r\n                    <WrapBookTopRight>\r\n                        <BookOfferImg src={modifySrc(offer.avatarUrl, 'offer')} />\r\n                    </WrapBookTopRight>\r\n                </WrapBookTop>\r\n\r\n                <Divider grey full mt={20} mb={20} />\r\n                <BookLabel>Dates</BookLabel>\r\n                <BookText>{dates}</BookText>\r\n\r\n                <Divider grey full mt={20} mb={20} />\r\n                <BookLabel>Location</BookLabel>\r\n                <Input\r\n                    name='location'\r\n                    value={bookingDates.location}\r\n                    onChange={onChange}\r\n                    mb={10}\r\n                    placeholder=\"\"\r\n                />\r\n                <TextArea name='locationDetails'\r\n                          value={bookingDates.locationDetails}\r\n                          onChange={onChange}\r\n                          height={90}\r\n                          placeholder=\"Additional information for the location\"\r\n                />\r\n\r\n                <Divider grey full mt={20} mb={20} />\r\n                <BookLabel>Start time of performance</BookLabel>\r\n                <Input\r\n                    name='startTime'\r\n                    value={bookingDates.startTime}\r\n                    onChange={onChange}\r\n                    mb={10}\r\n                    placeholder=\"\"\r\n                />\r\n                <Divider grey full mt={20} mb={20} />\r\n                <BookLabel>Additional terms</BookLabel>\r\n                <TextArea name='additionalTerms'\r\n                          value={bookingDates.additionalTerms}\r\n                          onChange={onChange}\r\n                          height={90}\r\n                          placeholder=\"\"\r\n                />\r\n\r\n                <Button mt={20} mb={10} green loading={loadingReserv} onClick={handleBook} >Send request to organizer</Button>\r\n\r\n            </Wrapper>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default DetailsBook;\r\n"]},"metadata":{},"sourceType":"module"}