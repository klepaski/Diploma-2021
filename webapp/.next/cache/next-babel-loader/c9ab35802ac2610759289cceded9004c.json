{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport Link from \"next/link\";\nimport Router from 'next/router';\nimport { MainContext, MainConsumer } from \"../contextProviders/MainContext\";\nimport { SubTitle } from '../StyledComponents/Text';\nimport { HeaderWrapper, HeaderWrapperReg, HeaderWrapperProfile, HeaderWrapperOffer, HeaderLogo, PreviewBtn } from './styledHeader';\nimport { Text } from \"../../components/StyledComponents/Text\";\nimport { Logo, LogoGreen, LogoPurple, Bars, GreenArrowDown, PurpleArrowDown, PlusPurple, Preferences, ArrowLeft } from '../StyledComponents/Icon';\nimport { logout } from \"../../utils/auth\";\nimport { Input } from \"../../components/controls/Input/Input\";\nimport Sidebar from './Sidebar';\nimport { modifySrc } from \"../../utils/modifySrc\";\n\nconst Header = ({\n  isReg,\n  isProfile,\n  isOffer,\n  isPreview,\n  previewOfferCb,\n  isHomepage\n}) => {\n  const {\n    me,\n    checkedMe\n  } = useContext(MainContext);\n  const {\n    0: openedSidebar,\n    1: setOpen\n  } = useState(false);\n\n  const toggleSidebar = () => {\n    if (!openedSidebar) {\n      document.getElementsByTagName(\"body\")[0].className = \"no-scroll\";\n    } else {\n      document.getElementsByTagName(\"body\")[0].classList.remove(\"no-scroll\");\n    }\n\n    setOpen(!openedSidebar);\n  };\n\n  if (false && !openedSidebar) {\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"no-scroll\");\n  } // console.log(isReg, isProfile, isOffer, isPreview)\n\n\n  return __jsx(React.Fragment, null, isReg ? __jsx(HeaderWrapperReg, null, me.firstName, \" \", me.lastName) : isProfile ? __jsx(HeaderWrapperProfile, null, __jsx(\"div\", {\n    onClick: toggleSidebar\n  }, __jsx(LogoGreen, null), __jsx(GreenArrowDown, null)), previewOfferCb ? __jsx(PreviewBtn, {\n    onClick: () => previewOfferCb()\n  }, \"Preview\") : __jsx(Input, {\n    placeholder: \"Search\",\n    ml: 10,\n    height40: true\n  })) : isPreview ? __jsx(HeaderWrapperOffer, null, __jsx(\"div\", null, __jsx(LogoPurple, null), __jsx(PurpleArrowDown, null)), __jsx(\"div\", null, __jsx(Text, {\n    blue: true\n  }, \"Preview\"))) : __jsx(HeaderWrapper, {\n    isHomepage: !!isHomepage\n  }, __jsx(\"div\", null, __jsx(Logo, null), me.id && __jsx(Bars, {\n    onClick: toggleSidebar\n  })), checkedMe && __jsx(React.Fragment, null, !me.id ? __jsx(Link, {\n    href: \"/registration\",\n    as: '/registration'\n  }, __jsx(SubTitle, {\n    white: true\n  }, \"Sign up\")) : __jsx(HeaderLogo, {\n    src: modifySrc(me.profilePhotoURL, 'profile'),\n    onClick: () => Router.push('/profile')\n  }) // <SubTitle white onClick={logout}>Logout</SubTitle>\n  )), openedSidebar && __jsx(Sidebar, {\n    isHomepage: !!isHomepage,\n    toggleSidebar: toggleSidebar,\n    logout: logout\n  }));\n};\n\nexport default Header;","map":{"version":3,"sources":["D:/git/webapp3/webapp/components/Header/Header.js"],"names":["React","useState","useContext","Link","Router","MainContext","MainConsumer","SubTitle","HeaderWrapper","HeaderWrapperReg","HeaderWrapperProfile","HeaderWrapperOffer","HeaderLogo","PreviewBtn","Text","Logo","LogoGreen","LogoPurple","Bars","GreenArrowDown","PurpleArrowDown","PlusPurple","Preferences","ArrowLeft","logout","Input","Sidebar","modifySrc","Header","isReg","isProfile","isOffer","isPreview","previewOfferCb","isHomepage","me","checkedMe","openedSidebar","setOpen","toggleSidebar","document","getElementsByTagName","className","classList","remove","firstName","lastName","id","profilePhotoURL","push"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\r\nimport Link from \"next/link\";\r\nimport Router from 'next/router'\r\nimport {MainContext, MainConsumer} from \"../contextProviders/MainContext\";\r\nimport {SubTitle} from '../StyledComponents/Text'\r\nimport {HeaderWrapper, HeaderWrapperReg, HeaderWrapperProfile, HeaderWrapperOffer, HeaderLogo, PreviewBtn} from './styledHeader'\r\nimport {Text} from \"../../components/StyledComponents/Text\";\r\nimport {\r\n    Logo,\r\n    LogoGreen,\r\n    LogoPurple,\r\n    Bars,\r\n    GreenArrowDown,\r\n    PurpleArrowDown,\r\n    PlusPurple,\r\n    Preferences,\r\n    ArrowLeft\r\n} from '../StyledComponents/Icon'\r\nimport {logout} from \"../../utils/auth\";\r\nimport {Input} from \"../../components/controls/Input/Input\";\r\nimport Sidebar from './Sidebar'\r\nimport {modifySrc} from \"../../utils/modifySrc\";\r\n\r\nconst Header = ({isReg, isProfile, isOffer, isPreview, previewOfferCb, isHomepage}) => {\r\n    const {me, checkedMe} = useContext(MainContext)\r\n    const [openedSidebar, setOpen] = useState(false)\r\n\r\n    const toggleSidebar = () => {\r\n        if(!openedSidebar) {\r\n            document.getElementsByTagName(\"body\")[0].className = \"no-scroll\";\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].classList.remove(\"no-scroll\");\r\n        }\r\n        setOpen(!openedSidebar)\r\n    }\r\n\r\n    if(process.browser && !openedSidebar) {\r\n        document.getElementsByTagName(\"body\")[0].classList.remove(\"no-scroll\");\r\n    }\r\n\r\n    // console.log(isReg, isProfile, isOffer, isPreview)\r\n\r\n    return (\r\n        <>\r\n            {isReg ?\r\n                <HeaderWrapperReg>\r\n                    {me.firstName} {me.lastName}\r\n                </HeaderWrapperReg>\r\n                :\r\n                isProfile ?\r\n                    <HeaderWrapperProfile>\r\n                        <div onClick={toggleSidebar}>\r\n                            <LogoGreen/>\r\n                            <GreenArrowDown  />\r\n                        </div>\r\n                        {previewOfferCb ?\r\n                            <PreviewBtn onClick={() => previewOfferCb()}>Preview</PreviewBtn>\r\n                            :\r\n                            <Input placeholder={\"Search\"} ml={10} height40/>\r\n                        }\r\n                    </HeaderWrapperProfile>\r\n                    :\r\n                    isPreview ?\r\n                        <HeaderWrapperOffer>\r\n                            <div>\r\n                                <LogoPurple/>\r\n                                <PurpleArrowDown/>\r\n                            </div>\r\n                            <div>\r\n                                <Text blue>Preview</Text>\r\n                            </div>\r\n                        </HeaderWrapperOffer>\r\n                    :\r\n                    <HeaderWrapper isHomepage={!!isHomepage}>\r\n                        <div>\r\n                            <Logo/>\r\n                            {me.id  && <Bars onClick={toggleSidebar} />}\r\n                        </div>\r\n                        {checkedMe &&\r\n                            <>\r\n                                {!me.id ?\r\n                                    <Link href=\"/registration\" as={'/registration'}>\r\n                                        <SubTitle white>Sign up</SubTitle>\r\n                                    </Link>\r\n                                    :\r\n                                    <HeaderLogo\r\n                                        src={modifySrc(me.profilePhotoURL, 'profile')}\r\n                                        onClick={() => Router.push('/profile')}\r\n                                    />\r\n                                    // <SubTitle white onClick={logout}>Logout</SubTitle>\r\n                                }\r\n                            </>\r\n                        }\r\n                    </HeaderWrapper>\r\n            }\r\n\r\n            {openedSidebar && <Sidebar isHomepage={!!isHomepage} toggleSidebar={toggleSidebar} logout={logout} />}\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}