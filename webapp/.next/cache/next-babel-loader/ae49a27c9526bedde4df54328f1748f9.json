{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Link from \"next/link\";\nimport Modal from 'react-modal';\nimport { MainContext, MainConsumer } from \"../../components/contextProviders/MainContext\";\nimport { apiCreateParam, apiEditParam, apiGetParams } from '../../actions/api';\nimport { Button, ButtonMin } from \"../../components/controls/Button/Button\";\nimport { Title, Label, WrapRadioBlock, Footer, TipWrapper2, Label2 } from \"../../components/Layouts/styledLayouts\";\nimport Header from \"../../components/Header/Header\";\nimport { Wrapper, WrapperHeight } from \"../../components/StyledComponents/Wrapper\";\nimport { apiAdminProgrammerCategories, apiEditCategoryTemplare, apiCreateEventType, apiGetFrontCategories } from \"../../actions/api\";\nimport { ButtonWithIcon } from \"../../components/controls/Button/ButtonWithIcon\";\nimport UploadBtn from \"../../components/controls/Upload/UploadBtn\";\nimport { showNotification } from \"../../utils/notification\";\nimport { Input } from \"../../components/controls/Input/Input\";\nimport { CheckboxWithLabel } from \"../../components/controls/Checkbox/Checkbox\";\nimport '../../static/css/styles-admin.css';\n\nconst Categories = () => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: fileCategories,\n    1: setCtegories\n  } = useState([]);\n  const {\n    0: fileParams,\n    1: setParams\n  } = useState([]);\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n  const {\n    0: listParams,\n    1: setListParams\n  } = useState([]);\n  const {\n    0: editable,\n    1: setEditable\n  } = useState({\n    templates: []\n  });\n  useEffect(() => {\n    apiGetParams().then(res => {\n      setListParams(res.data);\n    });\n    apiGetFrontCategories().then(res => {\n      setCategories(res.data);\n    });\n  }, []);\n\n  const openModal = item => {\n    let clone = _Object$assign({}, item);\n\n    let found = id => {\n      let found = item.templates.find(el => el.templateId.id === id);\n      if (found) return found;\n      return {};\n    };\n\n    let listTemplates = listParams.map(item => {\n      let copy = _Object$assign({}, item);\n\n      return {\n        title: copy.title,\n        templateId: copy.id,\n        main: found(copy.id).main,\n        require: found(copy.id).require,\n        order: found(copy.id).order\n      };\n    });\n    clone.templates = listTemplates;\n    setEditable(clone);\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n    setEditable({});\n  };\n\n  const onChange = (name, value, key) => {\n    let templatesCopy = [...editable.templates];\n    templatesCopy[key][name] = value;\n    setEditable(_objectSpread({}, editable, {\n      templates: templatesCopy\n    }));\n  };\n\n  const modifyArr = () => {};\n\n  const handleEdit = () => {\n    let obj = _Object$assign({}, editable);\n\n    obj.сategoryId = obj.id;\n    let tmp = obj.templates.filter(item => {\n      if (item.main || item.order || item.require) return true;\n    });\n    obj.templates = tmp;\n    apiEditCategoryTemplare(obj).then(res => {\n      let newArr = categories.map((item, index) => {\n        if (item.id === obj.id) {\n          let clone = _objectSpread({}, item, {\n            templates: res.data.success\n          });\n\n          return clone;\n        } else {\n          return item;\n        }\n      }); // let newArr = categories.map(el => (el.id === obj.id ? ({...el, templates: res.data.success}) : el))\n\n      setCategories(newArr);\n      closeModal();\n    }).catch(e => {});\n  };\n\n  const handleFix = item => {\n    let obj = item;\n    obj.сategoryId = obj.id;\n    let tmp = [{\n      \"title\": \"Sex\",\n      \"templateId\": \"5e060a51e6346e0027417d58\",\n      \"order\": \"1\"\n    }, {\n      \"title\": \"Languages\",\n      \"templateId\": \"5e060ad6e6346e0027417d5d\",\n      \"order\": \"1\"\n    }, {\n      \"title\": \"Half day rate\",\n      \"templateId\": \"5e060c40e6346e0027417d6e\",\n      \"order\": \"1\"\n    }, {\n      \"title\": \"Full day rate\",\n      \"templateId\": \"5e060c4fe6346e0027417d6f\",\n      \"order\": \"1\"\n    }, {\n      \"title\": \"Preparation time\",\n      \"templateId\": \"5e060ccce6346e0027417d75\",\n      \"order\": \"1\"\n    }, {\n      \"title\": \"Ability to travel to other countries\",\n      \"templateId\": \"5e060d2be6346e0027417d7b\",\n      \"order\": \"1\"\n    }];\n    obj.templates = tmp;\n    apiEditCategoryTemplare(obj).then(res => {\n      let newArr = categories.map((item, index) => {\n        if (item.id === obj.id) {\n          let clone = _objectSpread({}, item, {\n            templates: res.data.success\n          });\n\n          return clone;\n        } else {\n          return item;\n        }\n      }); // let newArr = categories.map(el => (el.id === obj.id ? ({...el, templates: res.data.success}) : el))\n\n      setCategories(newArr);\n      closeModal();\n    }).catch(e => {});\n  };\n\n  const onDrop = files => {\n    setCtegories(files[0]);\n  }; // const onDrop2 = (files) => {\n  //     setParams(files[0])\n  // }\n\n\n  const handleSave = () => {\n    let data = new FormData();\n    data.append(\"file\", fileCategories);\n    apiAdminProgrammerCategories(data).then(res => {\n      showNotification('info', 'success');\n    });\n  }; // const handleSave2 = () => {\n  //     let data = new FormData();\n  //     data.append(\"file\", fileParams);\n  //     apiAdminCategoriesParams('5db01618f4ac9e6e168739a1', data)\n  //         .then(res => {\n  //             showNotification('info', 'success')\n  //         })\n  // }\n\n\n  const onChangeText = e => {\n    setText(e.target.value);\n  };\n\n  const create = async () => {\n    let arr = [];\n    arr.push(text);\n    const res = await apiCreateEventType({\n      type: arr\n    });\n    setText('');\n    showNotification('info', 'success');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Wrapper, {\n    p: 17,\n    pt: 40\n  }, __jsx(Title, {\n    mb: 10\n  }, \" admin page\"), __jsx(\"div\", {\n    className: \"z-custom-table\"\n  }, __jsx(\"div\", {\n    className: \"z-custom-table-header\"\n  }, __jsx(\"div\", {\n    className: \"z-custom-table-column-1\"\n  }, \"Title\"), __jsx(\"div\", {\n    className: \"z-custom-table-column-3\"\n  }, __jsx(\"div\", {\n    className: 'z-a-param'\n  }, __jsx(\"div\", {\n    className: \"z-a-param-item-1\"\n  }, \"Title\"), __jsx(\"div\", {\n    className: \"z-a-param-item-2\"\n  }, \"Order\"), __jsx(\"div\", {\n    className: \"z-a-param-item-2\"\n  }, \"Require\"), __jsx(\"div\", {\n    className: \"z-a-param-item-2\"\n  }, \"Main\")))), categories.map(item => __jsx(\"div\", {\n    key: item.id,\n    className: \"z-custom-table-row\"\n  }, __jsx(\"div\", {\n    className: \"z-custom-table-column-1\"\n  }, item.category), __jsx(\"div\", {\n    className: \"z-custom-table-column-3 z-custom-table-column-3-fix\"\n  }, item.templates.map(item => {\n    return __jsx(\"div\", {\n      key: item._id,\n      className: 'z-a-param'\n    }, __jsx(\"div\", {\n      className: \"z-a-param-item-1\"\n    }, item.templateId.title), __jsx(\"div\", {\n      className: \"z-a-param-item-2\"\n    }, item.order), __jsx(\"div\", {\n      className: \"z-a-param-item-2\"\n    }, item.require ? 'yes' : ''), __jsx(\"div\", {\n      className: \"z-a-param-item-2\"\n    }, item.main));\n  })), __jsx(\"div\", {\n    className: \"z-custom-table-column-1\"\n  }, __jsx(\"span\", {\n    onClick: () => openModal(item)\n  }, \"Set\"), __jsx(\"span\", {\n    style: {\n      paddingLeft: '10px'\n    },\n    onClick: () => handleFix(item)\n  }, \"fix\"))))), __jsx(Label2, {\n    mt: 30\n  }, \"Programmer categories\"), __jsx(UploadBtn, {\n    Btn: __jsx(ButtonWithIcon, {\n      upload: true\n    }, \"programmer.xls\"),\n    onDropFiles: onDrop\n  }), __jsx(\"div\", null, fileCategories.name), __jsx(Button, {\n    mt: 20,\n    mb: 50,\n    green: true,\n    onClick: handleSave\n  }, \"Upload categories\"), __jsx(Input, {\n    type: 'text',\n    value: text,\n    onChange: onChangeText,\n    placeholder: \"event type\",\n    mt: 20,\n    fz: 15\n  }), __jsx(Button, {\n    green: true,\n    onClick: create\n  }, \"Add Event type\")), __jsx(Modal, {\n    isOpen: isOpen,\n    onRequestClose: closeModal,\n    ariaHideApp: false,\n    className: \" modal-params\"\n  }, __jsx(\"div\", {\n    className: 'mp-wrap'\n  }, __jsx(\"div\", {\n    className: \"mp-title\"\n  }, editable.category), __jsx(\"div\", {\n    className: \"mp-content\"\n  }, !!editable.templates && editable.templates.map((item, key) => __jsx(\"div\", {\n    key: item.id,\n    className: 'mp-params-list-item'\n  }, __jsx(\"div\", {\n    className: 'mp-params-list-item-title'\n  }, item.title), __jsx(\"div\", {\n    className: 'flex-list-params'\n  }, __jsx(\"div\", null, __jsx(Input, {\n    value: item.order,\n    name: \"order\",\n    onChange: e => onChange(e.target.name, e.target.value, key),\n    placeholder: \"Order\",\n    mb: '5px'\n  })), __jsx(\"div\", {\n    className: 'a-for-checkbox'\n  }, __jsx(\"div\", {\n    style: {\n      color: 'grey',\n      fontSize: '12px'\n    }\n  }, \"require\"), __jsx(CheckboxWithLabel, {\n    checked: item.require,\n    onChange: e => onChange('require', !item.require, key)\n  })), __jsx(\"div\", null, __jsx(Input, {\n    value: item.main,\n    name: \"main\",\n    onChange: e => onChange(e.target.name, e.target.value, key),\n    placeholder: \"Main\",\n    mb: '5px'\n  })))))), __jsx(\"div\", {\n    className: \"mp-footer\"\n  }, __jsx(Button, {\n    inline: true,\n    blue: true,\n    onClick: handleEdit\n  }, \"\\u0423\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    inline: true,\n    onClick: closeModal\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\")))));\n};\n\nexport default Categories;","map":{"version":3,"sources":["D:/4/диплом/webapp/pages/admin/categories.js"],"names":["React","useState","useContext","useEffect","Link","Modal","MainContext","MainConsumer","apiCreateParam","apiEditParam","apiGetParams","Button","ButtonMin","Title","Label","WrapRadioBlock","Footer","TipWrapper2","Label2","Header","Wrapper","WrapperHeight","apiAdminProgrammerCategories","apiEditCategoryTemplare","apiCreateEventType","apiGetFrontCategories","ButtonWithIcon","UploadBtn","showNotification","Input","CheckboxWithLabel","Categories","isOpen","setIsOpen","fileCategories","setCtegories","fileParams","setParams","text","setText","categories","setCategories","listParams","setListParams","editable","setEditable","templates","then","res","data","openModal","item","clone","found","id","find","el","templateId","listTemplates","map","copy","title","main","require","order","closeModal","onChange","name","value","key","templatesCopy","modifyArr","handleEdit","obj","сategoryId","tmp","filter","newArr","index","success","catch","e","handleFix","onDrop","files","handleSave","FormData","append","onChangeText","target","create","arr","push","type","category","_id","paddingLeft","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport Link from \"next/link\";\r\nimport Modal from 'react-modal';\r\nimport { MainContext, MainConsumer } from \"../../components/contextProviders/MainContext\"\r\nimport {apiCreateParam, apiEditParam, apiGetParams} from '../../actions/api'\r\n\r\nimport {Button, ButtonMin} from \"../../components/controls/Button/Button\";\r\nimport {Title, Label, WrapRadioBlock, Footer, TipWrapper2, Label2} from \"../../components/Layouts/styledLayouts\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport {Wrapper, WrapperHeight} from \"../../components/StyledComponents/Wrapper\";\r\nimport {apiAdminProgrammerCategories, apiEditCategoryTemplare, apiCreateEventType, apiGetFrontCategories} from \"../../actions/api\";\r\nimport {ButtonWithIcon} from \"../../components/controls/Button/ButtonWithIcon\";\r\nimport UploadBtn from \"../../components/controls/Upload/UploadBtn\";\r\nimport {showNotification} from \"../../utils/notification\";\r\nimport {Input} from \"../../components/controls/Input/Input\";\r\nimport {CheckboxWithLabel} from \"../../components/controls/Checkbox/Checkbox\";\r\nimport '../../static/css/styles-admin.css'\r\n\r\nconst Categories = () => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [fileCategories, setCtegories] = useState([])\r\n    const [fileParams, setParams] = useState([])\r\n    const [text, setText] = useState('')\r\n    const [categories, setCategories] = useState([])\r\n    const [listParams, setListParams] = useState([])\r\n    const [editable, setEditable] = useState({templates: []})\r\n\r\n    useEffect(() => {\r\n        apiGetParams()\r\n            .then(res => {\r\n                setListParams(res.data)\r\n            })\r\n\r\n        apiGetFrontCategories()\r\n            .then(res => {\r\n                setCategories(res.data)\r\n            })\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const openModal = (item) => {\r\n        let clone = Object.assign({}, item)\r\n\r\n        let found = id => {\r\n            let found = item.templates.find(el => el.templateId.id === id)\r\n\r\n            if(found) return found\r\n            return {}\r\n        }\r\n\r\n        let listTemplates = listParams.map(item => {\r\n            let copy = Object.assign({}, item)\r\n            return {\r\n                title: copy.title,\r\n                templateId: copy.id,\r\n                main: found(copy.id).main,\r\n                require: found(copy.id).require,\r\n                order: found(copy.id).order\r\n            }\r\n        });\r\n        clone.templates = listTemplates\r\n        setEditable(clone)\r\n        setIsOpen(true)\r\n    }\r\n    const closeModal = () => {\r\n        setIsOpen(false)\r\n        setEditable({})\r\n    }\r\n\r\n    const onChange = (name, value, key) => {\r\n        let templatesCopy = [...editable.templates]\r\n        templatesCopy[key][name] = value\r\n        setEditable({...editable, templates: templatesCopy})\r\n    }\r\n\r\n    const modifyArr = () => {\r\n\r\n    }\r\n\r\n\r\n    const handleEdit = () => {\r\n        let obj = Object.assign({}, editable)\r\n        obj.сategoryId = obj.id\r\n\r\n        let tmp = obj.templates.filter(item => {\r\n            if(item.main || item.order || item.require) return true\r\n        })\r\n        obj.templates = tmp;\r\n\r\n        apiEditCategoryTemplare(obj)\r\n            .then(res => {\r\n                let newArr = categories.map((item, index) => {\r\n                    if(item.id === obj.id) {\r\n                        let clone = {...item, templates: res.data.success}\r\n                        return clone\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n\r\n                // let newArr = categories.map(el => (el.id === obj.id ? ({...el, templates: res.data.success}) : el))\r\n\r\n                setCategories(newArr)\r\n                closeModal()\r\n            })\r\n            .catch(e => {\r\n\r\n            })\r\n    }\r\n\r\n    const handleFix = (item) => {\r\n        let obj = item;\r\n        obj.сategoryId = obj.id\r\n\r\n        let tmp = [\r\n            {\"title\":\"Sex\",\"templateId\":\"5e060a51e6346e0027417d58\", \"order\":\"1\"},\r\n            {\"title\":\"Languages\",\"templateId\":\"5e060ad6e6346e0027417d5d\",\"order\":\"1\"},\r\n            {\"title\":\"Half day rate\",\"templateId\":\"5e060c40e6346e0027417d6e\",\"order\":\"1\"},\r\n            {\"title\":\"Full day rate\",\"templateId\":\"5e060c4fe6346e0027417d6f\",\"order\":\"1\"},\r\n            {\"title\":\"Preparation time\",\"templateId\":\"5e060ccce6346e0027417d75\",\"order\":\"1\"},\r\n            {\"title\":\"Ability to travel to other countries\",\"templateId\":\"5e060d2be6346e0027417d7b\",\"order\":\"1\"}\r\n            ]\r\n\r\n        obj.templates = tmp;\r\n\r\n        apiEditCategoryTemplare(obj)\r\n            .then(res => {\r\n                let newArr = categories.map((item, index) => {\r\n                    if(item.id === obj.id) {\r\n                        let clone = {...item, templates: res.data.success}\r\n                        return clone\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n\r\n                // let newArr = categories.map(el => (el.id === obj.id ? ({...el, templates: res.data.success}) : el))\r\n\r\n                setCategories(newArr)\r\n                closeModal()\r\n            })\r\n            .catch(e => {\r\n\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const onDrop = (files) => {\r\n        setCtegories(files[0])\r\n    }\r\n    // const onDrop2 = (files) => {\r\n    //     setParams(files[0])\r\n    // }\r\n    const handleSave = () => {\r\n        let data = new FormData();\r\n        data.append(\"file\", fileCategories);\r\n        apiAdminProgrammerCategories( data)\r\n            .then(res => {\r\n                showNotification('info', 'success')\r\n            })\r\n    }\r\n    // const handleSave2 = () => {\r\n    //     let data = new FormData();\r\n    //     data.append(\"file\", fileParams);\r\n    //     apiAdminCategoriesParams('5db01618f4ac9e6e168739a1', data)\r\n    //         .then(res => {\r\n    //             showNotification('info', 'success')\r\n    //         })\r\n    // }\r\n    const onChangeText = e => {\r\n        setText(e.target.value)\r\n    }\r\n    const create = async () => {\r\n        let arr = [];\r\n        arr.push(text)\r\n        const res = await apiCreateEventType({type: arr});\r\n        setText('')\r\n        showNotification('info', 'success')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Wrapper p={17} pt={40} >\r\n                <Title mb={10} > admin page</Title>\r\n\r\n                <div className=\"z-custom-table\">\r\n                    <div className=\"z-custom-table-header\">\r\n                        <div className=\"z-custom-table-column-1\">\r\n                            Title\r\n                        </div>\r\n                        <div className=\"z-custom-table-column-3\">\r\n                            <div className={'z-a-param'}>\r\n                                <div className=\"z-a-param-item-1\">\r\n                                    Title\r\n                                </div>\r\n                                <div className=\"z-a-param-item-2\">\r\n                                   Order\r\n                                </div>\r\n                                <div className=\"z-a-param-item-2\">\r\n                                    Require\r\n                                </div>\r\n                                <div className=\"z-a-param-item-2\">\r\n                                   Main\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {categories.map(item =>\r\n                        <div key={item.id} className=\"z-custom-table-row\">\r\n                            <div className=\"z-custom-table-column-1\">\r\n                                {item.category}\r\n                            </div>\r\n                            <div className=\"z-custom-table-column-3 z-custom-table-column-3-fix\">\r\n                                {item.templates.map(item => {\r\n                                    return (\r\n                                        <div key={item._id} className={'z-a-param'}>\r\n                                            <div className=\"z-a-param-item-1\">\r\n                                                {item.templateId.title}\r\n                                            </div>\r\n                                            <div className=\"z-a-param-item-2\">\r\n                                                {item.order}\r\n                                            </div>\r\n                                            <div className=\"z-a-param-item-2\">\r\n                                                {item.require? 'yes': ''}\r\n                                            </div>\r\n                                            <div className=\"z-a-param-item-2\">\r\n                                                {item.main}\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n\r\n                            </div>\r\n                            <div className=\"z-custom-table-column-1\">\r\n                                <span onClick={() => openModal(item)}>Set</span>\r\n\r\n                                <span style={{paddingLeft: '10px'}} onClick={() => handleFix(item)}>fix</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n\r\n\r\n                <Label2 mt={30} >Programmer categories</Label2>\r\n                <UploadBtn\r\n                    Btn={<ButtonWithIcon upload>programmer.xls</ButtonWithIcon>}\r\n                    onDropFiles={onDrop}\r\n                />\r\n                <div>{fileCategories.name}</div>\r\n                <Button mt={20} mb={50} green onClick={handleSave}>Upload categories</Button>\r\n\r\n\r\n                {/*<Label2 mt={30} >Programmer params </Label2>*/}\r\n                {/*<UploadBtn*/}\r\n                {/*    accept={'text/*'}*/}\r\n                {/*    Btn={<ButtonWithIcon upload>testTemplateCategories.csv</ButtonWithIcon>}*/}\r\n                {/*    onDropFiles={onDrop2}*/}\r\n                {/*/>*/}\r\n                {/*<div>{fileParams.name}</div>*/}\r\n                {/*<Button mt={20} mb={50} green onClick={handleSave2}>Upload categories</Button>*/}\r\n\r\n\r\n\r\n                <Input type={'text'}\r\n                       value={text}\r\n                       onChange={onChangeText}\r\n                       placeholder=\"event type\"\r\n                       mt={20}\r\n                       fz={15}\r\n                />\r\n                <Button green onClick={create}>Add Event type</Button>\r\n\r\n\r\n            </Wrapper>\r\n\r\n\r\n            <Modal\r\n                isOpen={isOpen}\r\n                onRequestClose={closeModal}\r\n                ariaHideApp={false}\r\n                className=\" modal-params\"\r\n            >\r\n\r\n                <div className={'mp-wrap'}>\r\n                    <div className=\"mp-title\">\r\n                        {editable.category}\r\n                    </div>\r\n                    <div className=\"mp-content\">\r\n                        {!!editable.templates && editable.templates.map((item, key) =>\r\n\r\n                            <div key={item.id} className={'mp-params-list-item'}>\r\n                                <div className={'mp-params-list-item-title'}>{item.title}</div>\r\n                                <div className={'flex-list-params'}>\r\n                                    <div>\r\n                                        <Input value={item.order}\r\n                                               name='order'\r\n                                               onChange={e => onChange(e.target.name, e.target.value, key )}\r\n                                               placeholder=\"Order\"\r\n                                               mb={'5px'}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={'a-for-checkbox'}>\r\n                                        <div style={{color: 'grey', fontSize: '12px'}}>require</div>\r\n                                        <CheckboxWithLabel\r\n                                            checked={item.require}\r\n                                            onChange={e => onChange('require', !item.require, key )}\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <Input value={item.main}\r\n                                               name='main'\r\n                                               onChange={e => onChange(e.target.name, e.target.value, key )}\r\n                                               placeholder=\"Main\"\r\n                                               mb={'5px'}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"mp-footer\">\r\n                        <Button\r\n                            inline\r\n                            blue\r\n                            onClick={handleEdit}\r\n                        >\r\n                           Установить\r\n                        </Button>\r\n\r\n                        <Button\r\n                            inline\r\n                            onClick={closeModal}\r\n                        >\r\n                            Закрыть\r\n                        </Button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </Modal>\r\n\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Categories;\r\n\r\n"]},"metadata":{},"sourceType":"module"}