{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport { Wrapper, WrapperHeight } from \"../../../components/StyledComponents/Wrapper\";\nimport { Footer } from \"../../../components/Layouts/styledLayouts\";\nimport { Button } from \"../../../components/controls/Button/Button\";\nimport Upload from '../../../components/Offer/photos/Upload';\nimport Photos from '../../../components/Offer/photos/Photos';\nimport EditPhoto from '../../../components/Photo/EditPhoto';\nimport CoverPhoto from '../../../components/Offer/photos/CoverPhoto';\nimport Video from '../../../components/Offer/photos/Video';\nimport Header from \"../../../components/Header/Header\";\nimport { apiEditOffer, apiOfferPhotos, apiSetOfferCoverPhoto, apiRemoveOfferPhoto, apiEditOfferPhoto } from '../../../actions/api';\nimport withOfferInfo from \"../../../utils/offer\";\nimport { showNotification } from \"../../../utils/notification\";\nimport useOffer from \"../../../hooks/useOffer\";\nimport '../../../components/Offer/photos/photo.css';\nimport { MainContext } from \"../../../components/contextProviders/MainContext\";\nimport { ContainerDesktop } from \"../../StyledComponents/Grid\";\n\nconst PhotosEdit = ({\n  offer,\n  setOffer,\n  isLoading,\n  onSave\n}) => {\n  const {\n    0: step,\n    1: setStep\n  } = useState(2);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: loadingEdit,\n    1: setLoadingEdit\n  } = useState(false);\n  const {\n    0: isDeletingAll,\n    1: setIsDeletingAll\n  } = useState(false);\n  const {\n    0: uploading,\n    1: setUploading\n  } = useState(false);\n  const {\n    0: photos,\n    1: setPhotos\n  } = useState([]);\n  const {\n    0: videos,\n    1: setVideos\n  } = useState(['']);\n  const {\n    0: cover,\n    1: setCover\n  } = useState(null);\n  const {\n    0: photoEditable,\n    1: setPhotoEditable\n  } = useState({});\n  const {\n    0: keyPhoto,\n    1: setKeyPhoto\n  } = useState(null);\n  useEffect(() => {\n    if (offer.videoUrl && offer.videoUrl.length) {\n      setVideos(offer.videoUrl);\n    }\n\n    if (offer.offerPhoto && offer.offerPhoto.length) {\n      setPhotos(offer.offerPhoto);\n      setAvatarId();\n      setStep(2);\n    }\n  }, [offer.id]);\n\n  const setAvatarId = () => {\n    if (!offer.avatarUrl) {\n      setCover(offer.offerPhoto[0].id);\n    } else {\n      let avatar = offer.offerPhoto.find(item => item.photoUrl === offer.avatarUrl);\n\n      if (avatar && avatar.id) {\n        setCover(avatar.id);\n      }\n    }\n  };\n\n  const onDrop = files => {\n    // setPhotos([...photos, ...files])\n    // setStep(2)\n    onUploadFiles(files);\n  };\n\n  const onUploadFiles = async files => {\n    let data = new FormData();\n    data.append(\"offerId\", offer.id);\n    files.forEach(file => {\n      if (!file.id || file.blob) {\n        if (file.blob) {\n          data.append(\"file\", file.blob, file.name);\n        } else {\n          data.append(\"file\", file, file.name);\n        }\n      }\n    });\n    setUploading(true);\n    let res = await apiOfferPhotos(data);\n\n    if (res.data) {\n      setPhotos([...photos, ...res.data]);\n    }\n\n    setUploading(false);\n    setStep(2);\n  };\n\n  const onSetCover = id => {\n    setCover(id);\n    setStep(2);\n  };\n\n  const handleChangeStep = i => {\n    if (step === 5 && i === -1) {\n      setStep(2);\n      return;\n    }\n\n    if ((step === 1 || step === 2) && i === -1) {\n      Router.push('/offers/[id]/params', `/offers/${id}/params`, {\n        shallow: true\n      });\n    } else {\n      setStep(step + i);\n    }\n  };\n\n  const handleSavePhotos = async () => {\n    let data = new FormData();\n    data.append(\"offerId\", offer.id);\n    photos.forEach(file => {\n      if (!file.id || file.blob) {\n        if (file.blob) {\n          data.append(\"file\", file.blob, file.name);\n        } else {\n          data.append(\"file\", file, file.name);\n        }\n      }\n    });\n    handleSendPhotos(data); // let photosDeleting = photos.filter((item, key) => (item.blob && item.id))\n    //\n    // if(photosDeleting.length) {\n    //     Promise.all(photosDeleting.map(item => handleRemovePhoto(item.id)))\n    //         .then(res => {\n    //             handleSendPhotos(data)\n    //         })\n    // } else {\n    //     handleSendPhotos(data)\n    // }\n  };\n\n  const handleSendPhotos = data => {\n    //TODO optimaze and don't send if something not changed\n    setLoading(true);\n    let photosWithDesc = photos.filter(item => item.description);\n\n    _Promise.all(photosWithDesc.map(item => handleEditPhoto(item))).then(res => {\n      console.log('res', res);\n    });\n\n    apiOfferPhotos(data).then(res => {\n      setLoading(false);\n      let photosFilter = photos.filter(item => {\n        return item.id && !item.blob;\n      });\n      setPhotos([...photosFilter, ...res.data]);\n      let offerPhotos = [...photosFilter, ...res.data];\n      apiSetOfferCoverPhoto(offer.id, {\n        offerPhotoId: cover\n      }).then(res => {\n        setOffer(_objectSpread({}, offer));\n        setOffer(_objectSpread({}, offer, {\n          offerPhoto: offerPhotos,\n          avatarUrl: res.data.avatarUrl\n        }));\n        setLoading(false);\n        onSave();\n      });\n    }).catch(e => {\n      showNotification('error', e);\n      setLoading(false);\n    });\n  };\n\n  const handleEditPhoto = async photo => {\n    const res = await apiEditOfferPhoto(photo);\n    console.log(res);\n    return res;\n  };\n\n  const handleRemovePhoto = async id => {\n    const res = await apiRemoveOfferPhoto(id);\n    console.log(res);\n    return res;\n  };\n\n  const handleDeletePhoto = async key => {\n    let photoByKey = photos[key];\n\n    if (photoByKey.id) {\n      const res = await handleRemovePhoto(photoByKey.id);\n      let photosClone = [...photos];\n      photosClone.splice(key, 1);\n      setPhotos(photosClone);\n      setStep(2);\n    } else {\n      let photosClone = [...photos];\n      photosClone.splice(key, 1);\n      setPhotos(photosClone);\n      setStep(2);\n    }\n  };\n\n  const setEditablePhoto = (photo, key) => {\n    setPhotoEditable(photo);\n    setKeyPhoto(key);\n    setStep(4);\n  };\n\n  const handleBackFromEdit = () => {\n    setPhotoEditable({});\n    setKeyPhoto(null);\n    setStep(2);\n  };\n\n  const handleRotate = async (blob, url, key) => {\n    let photosCopy = [...photos],\n        ephoto = photosCopy[key],\n        isCover = !!(cover == ephoto.id);\n    setLoadingEdit(true);\n    let data = new FormData();\n    data.append(\"offerId\", offer.id);\n    data.append(\"file\", blob, 'filename');\n    let res = await apiOfferPhotos(data);\n    if (ephoto && ephoto.id) await handleRemovePhoto(ephoto.id);\n\n    if (isCover) {\n      setCover(res.data[0].id);\n    }\n\n    photosCopy[key] = res.data[0];\n    setPhotos(photosCopy);\n    setLoadingEdit(false);\n    setStep(2);\n  };\n\n  const onChangePhotoDescription = (id, value) => {\n    value = value.slice(0, 100);\n    let photosClone = [...photos];\n    let key = photosClone.findIndex(item => item.id === id);\n    photosClone[key].description = value;\n    setPhotos(photosClone);\n    console.log(key, value);\n  };\n\n  const handleDeleteAll = () => {\n    if (window.confirm('Are you sure you want to delete all photos?')) {\n      setIsDeletingAll(true);\n\n      _Promise.all(photos.map(item => handleRemovePhoto(item.id))).then(res => {\n        setIsDeletingAll(false);\n        setPhotos([]);\n      });\n    }\n  };\n\n  const disabled = loading;\n  return __jsx(React.Fragment, null, __jsx(Wrapper, {\n    p: 17,\n    pt: 35\n  }, offer.id ? __jsx(React.Fragment, null, __jsx(WrapperHeight, null, step === 2 && __jsx(Photos, {\n    onDrop: onDrop,\n    setStep: setStep,\n    cover: cover,\n    photos: photos,\n    setEditablePhoto: setEditablePhoto,\n    handleDeleteAll: handleDeleteAll,\n    isDeletingAll: isDeletingAll,\n    uploading: uploading\n  }), step === 3 && __jsx(CoverPhoto, {\n    photos: photos,\n    setCover: onSetCover,\n    handleBack: handleBackFromEdit,\n    cover: cover\n  }), step === 4 && __jsx(EditPhoto, {\n    keyPhoto: keyPhoto,\n    photo: photoEditable,\n    handleBack: handleBackFromEdit,\n    handleRotate: handleRotate,\n    handleDelete: handleDeletePhoto,\n    onChangePhotoDescription: onChangePhotoDescription,\n    loadingEdit: loadingEdit\n  }), step === 5 && __jsx(Video, {\n    videos: videos,\n    setVideos: videos => setVideos([...videos])\n  })), step === 2 && __jsx(Button, {\n    green: true,\n    loading: loading,\n    onClick: handleSavePhotos,\n    mt: 70\n  }, \"Save\")) : __jsx(React.Fragment, null, \"Loading...\")));\n};\n\nexport default PhotosEdit;","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/components/Offer/edit/Photos.js"],"names":["React","useState","useContext","useEffect","Router","useRouter","Wrapper","WrapperHeight","Footer","Button","Upload","Photos","EditPhoto","CoverPhoto","Video","Header","apiEditOffer","apiOfferPhotos","apiSetOfferCoverPhoto","apiRemoveOfferPhoto","apiEditOfferPhoto","withOfferInfo","showNotification","useOffer","MainContext","ContainerDesktop","PhotosEdit","offer","setOffer","isLoading","onSave","step","setStep","loading","setLoading","loadingEdit","setLoadingEdit","isDeletingAll","setIsDeletingAll","uploading","setUploading","photos","setPhotos","videos","setVideos","cover","setCover","photoEditable","setPhotoEditable","keyPhoto","setKeyPhoto","videoUrl","length","offerPhoto","setAvatarId","id","avatarUrl","avatar","find","item","photoUrl","onDrop","files","onUploadFiles","data","FormData","append","forEach","file","blob","name","res","onSetCover","handleChangeStep","i","push","shallow","handleSavePhotos","handleSendPhotos","photosWithDesc","filter","description","all","map","handleEditPhoto","then","console","log","photosFilter","offerPhotos","offerPhotoId","catch","e","photo","handleRemovePhoto","handleDeletePhoto","key","photoByKey","photosClone","splice","setEditablePhoto","handleBackFromEdit","handleRotate","url","photosCopy","ephoto","isCover","onChangePhotoDescription","value","slice","findIndex","handleDeleteAll","window","confirm","disabled"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AAEA,SAAQC,OAAR,EAAiBC,aAAjB,QAAqC,8CAArC;AACA,SAAQC,MAAR,QAAqB,2CAArB;AACA,SAAQC,MAAR,QAAqB,4CAArB;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,OAAOC,KAAP,MAAkB,wCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AAEA,SAAQC,YAAR,EAAsBC,cAAtB,EAAsCC,qBAAtC,EAA6DC,mBAA7D,EAAkFC,iBAAlF,QAA0G,sBAA1G;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAAQC,gBAAR,QAA+B,6BAA/B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAO,4CAAP;AACA,SAAQC,WAAR,QAA0B,kDAA1B;AACA,SAAQC,gBAAR,QAA+B,6BAA/B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAD,KAA0C;AACzD,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkB/B,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM;AAAA,OAACgC,OAAD;AAAA,OAAUC;AAAV,MAAwBjC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACkC,WAAD;AAAA,OAAcC;AAAd,MAAgCnC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAA,OAACoC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCrC,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAACsC,SAAD;AAAA,OAAYC;AAAZ,MAA4BvC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACwC,MAAD;AAAA,OAASC;AAAT,MAAsBzC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAAC0C,MAAD;AAAA,OAASC;AAAT,MAAsB3C,QAAQ,CAAC,CAAC,EAAD,CAAD,CAApC;AACA,QAAM;AAAA,OAAC4C,KAAD;AAAA,OAAQC;AAAR,MAAoB7C,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAAC8C,aAAD;AAAA,OAAgBC;AAAhB,MAAoC/C,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAACgD,QAAD;AAAA,OAAWC;AAAX,MAA0BjD,QAAQ,CAAC,IAAD,CAAxC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGwB,KAAK,CAACwB,QAAN,IAAkBxB,KAAK,CAACwB,QAAN,CAAeC,MAApC,EAA4C;AACxCR,MAAAA,SAAS,CAACjB,KAAK,CAACwB,QAAP,CAAT;AACH;;AACD,QAAGxB,KAAK,CAAC0B,UAAN,IAAoB1B,KAAK,CAAC0B,UAAN,CAAiBD,MAAxC,EAAgD;AAC5CV,MAAAA,SAAS,CAACf,KAAK,CAAC0B,UAAP,CAAT;AACAC,MAAAA,WAAW;AACXtB,MAAAA,OAAO,CAAC,CAAD,CAAP;AACH;AACJ,GATQ,EASN,CAACL,KAAK,CAAC4B,EAAP,CATM,CAAT;;AAWA,QAAMD,WAAW,GAAG,MAAM;AACtB,QAAG,CAAC3B,KAAK,CAAC6B,SAAV,EAAqB;AACjBV,MAAAA,QAAQ,CAACnB,KAAK,CAAC0B,UAAN,CAAiB,CAAjB,EAAoBE,EAArB,CAAR;AACH,KAFD,MAEO;AACH,UAAIE,MAAM,GAAG9B,KAAK,CAAC0B,UAAN,CAAiBK,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBjC,KAAK,CAAC6B,SAAtD,CAAb;;AACA,UAAGC,MAAM,IAAIA,MAAM,CAACF,EAApB,EAAwB;AACpBT,QAAAA,QAAQ,CAACW,MAAM,CAACF,EAAR,CAAR;AACH;AACJ;AACJ,GATD;;AAWA,QAAMM,MAAM,GAAIC,KAAD,IAAW;AACtB;AACA;AACAC,IAAAA,aAAa,CAACD,KAAD,CAAb;AACH,GAJD;;AAKA,QAAMC,aAAa,GAAG,MAAOD,KAAP,IAAiB;AACnC,QAAIE,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,SAAZ,EAAuBvC,KAAK,CAAC4B,EAA7B;AACAO,IAAAA,KAAK,CAACK,OAAN,CAAcC,IAAI,IAAI;AAClB,UAAG,CAACA,IAAI,CAACb,EAAN,IAAYa,IAAI,CAACC,IAApB,EAA0B;AACtB,YAAGD,IAAI,CAACC,IAAR,EAAc;AACVL,UAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBE,IAAI,CAACC,IAAzB,EAA+BD,IAAI,CAACE,IAApC;AACH,SAFD,MAEO;AACHN,UAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBE,IAApB,EAA0BA,IAAI,CAACE,IAA/B;AACH;AACJ;AACJ,KARD;AASA9B,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,QAAI+B,GAAG,GAAG,MAAMtD,cAAc,CAAC+C,IAAD,CAA9B;;AACA,QAAGO,GAAG,CAACP,IAAP,EAAa;AACTtB,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY,GAAG8B,GAAG,CAACP,IAAnB,CAAD,CAAT;AACH;;AACDxB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAR,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAnBD;;AAoBA,QAAMwC,UAAU,GAAGjB,EAAE,IAAI;AACrBT,IAAAA,QAAQ,CAACS,EAAD,CAAR;AACAvB,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAIA,QAAMyC,gBAAgB,GAAGC,CAAC,IAAI;AAC1B,QAAG3C,IAAI,KAAK,CAAT,IAAc2C,CAAC,KAAK,CAAC,CAAxB,EAA2B;AACvB1C,MAAAA,OAAO,CAAC,CAAD,CAAP;AACA;AACH;;AACD,QAAG,CAACD,IAAI,KAAK,CAAT,IAAcA,IAAI,KAAK,CAAxB,KAA+B2C,CAAC,KAAK,CAAC,CAAzC,EAA4C;AACxCtE,MAAAA,MAAM,CAACuE,IAAP,CAAY,qBAAZ,EAAoC,WAAUpB,EAAG,SAAjD,EAA2D;AAACqB,QAAAA,OAAO,EAAE;AAAV,OAA3D;AACH,KAFD,MAEO;AACH5C,MAAAA,OAAO,CAACD,IAAI,GAAG2C,CAAR,CAAP;AACH;AACJ,GAVD;;AAWA,QAAMG,gBAAgB,GAAG,YAAY;AAC7B,QAAIb,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,SAAZ,EAAuBvC,KAAK,CAAC4B,EAA7B;AACAd,IAAAA,MAAM,CAAC0B,OAAP,CAAeC,IAAI,IAAI;AACnB,UAAG,CAACA,IAAI,CAACb,EAAN,IAAYa,IAAI,CAACC,IAApB,EAA0B;AACtB,YAAGD,IAAI,CAACC,IAAR,EAAc;AACVL,UAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBE,IAAI,CAACC,IAAzB,EAA+BD,IAAI,CAACE,IAApC;AACH,SAFD,MAEO;AACHN,UAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBE,IAApB,EAA0BA,IAAI,CAACE,IAA/B;AACH;AACJ;AACJ,KARD;AASJQ,IAAAA,gBAAgB,CAACd,IAAD,CAAhB,CAZiC,CAc7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP,GAxBD;;AA0BA,QAAMc,gBAAgB,GAAGd,IAAI,IAAI;AAC7B;AAEA9B,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAI6C,cAAc,GAAGtC,MAAM,CAACuC,MAAP,CAAcrB,IAAI,IAAIA,IAAI,CAACsB,WAA3B,CAArB;;AACA,aAAQC,GAAR,CAAYH,cAAc,CAACI,GAAf,CAAmBxB,IAAI,IAAIyB,eAAe,CAACzB,IAAD,CAA1C,CAAZ,EACK0B,IADL,CACUd,GAAG,IAAI;AACTe,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBhB,GAAnB;AACH,KAHL;;AAKAtD,IAAAA,cAAc,CAAC+C,IAAD,CAAd,CACKqB,IADL,CACUd,GAAG,IAAI;AACTrC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,UAAIsD,YAAY,GAAG/C,MAAM,CAACuC,MAAP,CAAerB,IAAD,IAAU;AACvC,eAAQA,IAAI,CAACJ,EAAL,IAAW,CAACI,IAAI,CAACU,IAAzB;AACH,OAFkB,CAAnB;AAGA3B,MAAAA,SAAS,CAAC,CAAC,GAAG8C,YAAJ,EAAkB,GAAGjB,GAAG,CAACP,IAAzB,CAAD,CAAT;AACA,UAAIyB,WAAW,GAAG,CAAC,GAAGD,YAAJ,EAAkB,GAAGjB,GAAG,CAACP,IAAzB,CAAlB;AAEA9C,MAAAA,qBAAqB,CAACS,KAAK,CAAC4B,EAAP,EAAU;AAACmC,QAAAA,YAAY,EAAE7C;AAAf,OAAV,CAArB,CACKwC,IADL,CACUd,GAAG,IAAI;AACT3C,QAAAA,QAAQ,mBAAKD,KAAL,EAAR;AACAC,QAAAA,QAAQ,mBAAKD,KAAL;AAAY0B,UAAAA,UAAU,EAAEoC,WAAxB;AAAqCjC,UAAAA,SAAS,EAAEe,GAAG,CAACP,IAAJ,CAASR;AAAzD,WAAR;AACAtB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,QAAAA,MAAM;AACT,OANL;AAOH,KAhBL,EAiBK6D,KAjBL,CAiBWC,CAAC,IAAI;AACRtE,MAAAA,gBAAgB,CAAC,OAAD,EAAUsE,CAAV,CAAhB;AACA1D,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KApBL;AAqBH,GA/BD;;AAiCA,QAAMkD,eAAe,GAAG,MAAMS,KAAN,IAAe;AACnC,UAAMtB,GAAG,GAAG,MAAMnD,iBAAiB,CAACyE,KAAD,CAAnC;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACA,WAAOA,GAAP;AACH,GAJD;;AAMA,QAAMuB,iBAAiB,GAAG,MAAMvC,EAAN,IAAY;AAClC,UAAMgB,GAAG,GAAG,MAAMpD,mBAAmB,CAACoC,EAAD,CAArC;AACA+B,IAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACA,WAAOA,GAAP;AACH,GAJD;;AAMA,QAAMwB,iBAAiB,GAAG,MAAOC,GAAP,IAAe;AACrC,QAAIC,UAAU,GAAGxD,MAAM,CAACuD,GAAD,CAAvB;;AACA,QAAGC,UAAU,CAAC1C,EAAd,EAAkB;AACd,YAAMgB,GAAG,GAAG,MAAMuB,iBAAiB,CAACG,UAAU,CAAC1C,EAAZ,CAAnC;AACA,UAAI2C,WAAW,GAAG,CAAC,GAAGzD,MAAJ,CAAlB;AACAyD,MAAAA,WAAW,CAACC,MAAZ,CAAmBH,GAAnB,EAAwB,CAAxB;AACAtD,MAAAA,SAAS,CAACwD,WAAD,CAAT;AACAlE,MAAAA,OAAO,CAAC,CAAD,CAAP;AACH,KAND,MAMO;AACH,UAAIkE,WAAW,GAAG,CAAC,GAAGzD,MAAJ,CAAlB;AACAyD,MAAAA,WAAW,CAACC,MAAZ,CAAmBH,GAAnB,EAAwB,CAAxB;AACAtD,MAAAA,SAAS,CAACwD,WAAD,CAAT;AACAlE,MAAAA,OAAO,CAAC,CAAD,CAAP;AACH;AACJ,GAdD;;AAgBA,QAAMoE,gBAAgB,GAAG,CAACP,KAAD,EAAQG,GAAR,KAAgB;AACrChD,IAAAA,gBAAgB,CAAC6C,KAAD,CAAhB;AACA3C,IAAAA,WAAW,CAAC8C,GAAD,CAAX;AACAhE,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAJD;;AAKA,QAAMqE,kBAAkB,GAAG,MAAM;AAC7BrD,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAlB,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAJD;;AAKA,QAAMsE,YAAY,GAAG,OAAOjC,IAAP,EAAakC,GAAb,EAAkBP,GAAlB,KAA0B;AAC3C,QAAIQ,UAAU,GAAG,CAAC,GAAG/D,MAAJ,CAAjB;AAAA,QACIgE,MAAM,GAAGD,UAAU,CAACR,GAAD,CADvB;AAAA,QAEIU,OAAO,GAAG,CAAC,EAAE7D,KAAK,IAAI4D,MAAM,CAAClD,EAAlB,CAFf;AAIAnB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,QAAI4B,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,SAAZ,EAAuBvC,KAAK,CAAC4B,EAA7B;AACAS,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBG,IAApB,EAA0B,UAA1B;AACA,QAAIE,GAAG,GAAG,MAAMtD,cAAc,CAAC+C,IAAD,CAA9B;AACA,QAAGyC,MAAM,IAAIA,MAAM,CAAClD,EAApB,EAAwB,MAAMuC,iBAAiB,CAACW,MAAM,CAAClD,EAAR,CAAvB;;AACxB,QAAGmD,OAAH,EAAY;AACR5D,MAAAA,QAAQ,CAACyB,GAAG,CAACP,IAAJ,CAAS,CAAT,EAAYT,EAAb,CAAR;AACH;;AACDiD,IAAAA,UAAU,CAACR,GAAD,CAAV,GAAkBzB,GAAG,CAACP,IAAJ,CAAS,CAAT,CAAlB;AACAtB,IAAAA,SAAS,CAAC8D,UAAD,CAAT;AACApE,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAJ,IAAAA,OAAO,CAAC,CAAD,CAAP;AAEH,GAnBD;;AAqBA,QAAM2E,wBAAwB,GAAG,CAACpD,EAAD,EAAKqD,KAAL,KAAe;AAC5CA,IAAAA,KAAK,GAAGA,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAe,GAAf,CAAR;AACA,QAAIX,WAAW,GAAG,CAAC,GAAGzD,MAAJ,CAAlB;AACA,QAAIuD,GAAG,GAAGE,WAAW,CAACY,SAAZ,CAAsBnD,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAA1C,CAAV;AACA2C,IAAAA,WAAW,CAACF,GAAD,CAAX,CAAiBf,WAAjB,GAA+B2B,KAA/B;AACAlE,IAAAA,SAAS,CAACwD,WAAD,CAAT;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ,EAAiBY,KAAjB;AACH,GAPD;;AASA,QAAMG,eAAe,GAAG,MAAM;AAC1B,QAAIC,MAAM,CAACC,OAAP,CAAe,6CAAf,CAAJ,EAAmE;AAC/D3E,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AACA,eAAQ4C,GAAR,CAAYzC,MAAM,CAAC0C,GAAP,CAAWxB,IAAI,IAAImC,iBAAiB,CAACnC,IAAI,CAACJ,EAAN,CAApC,CAAZ,EACK8B,IADL,CACUd,GAAG,IAAI;AACTjC,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAI,QAAAA,SAAS,CAAC,EAAD,CAAT;AACH,OAJL;AAKH;AACJ,GATD;;AAaA,QAAMwE,QAAQ,GAAGjF,OAAjB;AAEA,SACI,4BACI,MAAC,OAAD;AAAS,IAAA,CAAC,EAAE,EAAZ;AAAgB,IAAA,EAAE,EAAE;AAApB,KACKN,KAAK,CAAC4B,EAAN,GACG,4BACI,MAAC,aAAD,QACKxB,IAAI,KAAK,CAAT,IACD,MAAC,MAAD;AACI,IAAA,MAAM,EAAE8B,MADZ;AAEI,IAAA,OAAO,EAAE7B,OAFb;AAGI,IAAA,KAAK,EAAEa,KAHX;AAII,IAAA,MAAM,EAAEJ,MAJZ;AAKI,IAAA,gBAAgB,EAAE2D,gBALtB;AAMI,IAAA,eAAe,EAAEW,eANrB;AAOI,IAAA,aAAa,EAAE1E,aAPnB;AAQI,IAAA,SAAS,EAAEE;AARf,IAFJ,EAaKR,IAAI,KAAK,CAAT,IACD,MAAC,UAAD;AACI,IAAA,MAAM,EAAEU,MADZ;AAEI,IAAA,QAAQ,EAAE+B,UAFd;AAGI,IAAA,UAAU,EAAE6B,kBAHhB;AAII,IAAA,KAAK,EAAExD;AAJX,IAdJ,EAqBKd,IAAI,KAAK,CAAT,IACD,MAAC,SAAD;AACI,IAAA,QAAQ,EAAEkB,QADd;AAEI,IAAA,KAAK,EAAEF,aAFX;AAGI,IAAA,UAAU,EAAEsD,kBAHhB;AAII,IAAA,YAAY,EAAEC,YAJlB;AAKI,IAAA,YAAY,EAAEP,iBALlB;AAMI,IAAA,wBAAwB,EAAEY,wBAN9B;AAOI,IAAA,WAAW,EAAExE;AAPjB,IAtBJ,EAgCKJ,IAAI,KAAK,CAAT,IAAc,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEY,MAAf;AAAuB,IAAA,SAAS,EAAGA,MAAD,IAAYC,SAAS,CAAC,CAAC,GAAGD,MAAJ,CAAD;AAAvD,IAhCnB,CADJ,EAoCKZ,IAAI,KAAK,CAAT,IAAe,MAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,OAAO,EAAEE,OAAvB;AAAgC,IAAA,OAAO,EAAE4C,gBAAzC;AAA2D,IAAA,EAAE,EAAE;AAA/D,YApCpB,CADH,GAyCG,yCA1CR,CADJ,CADJ;AAmDH,CA3QD;;AA6QA,eAAenD,UAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport Router, { useRouter } from 'next/router'\r\n\r\nimport {Wrapper, WrapperHeight} from \"../../../components/StyledComponents/Wrapper\";\r\nimport {Footer} from \"../../../components/Layouts/styledLayouts\";\r\nimport {Button} from \"../../../components/controls/Button/Button\";\r\nimport Upload from '../../../components/Offer/photos/Upload'\r\nimport Photos from '../../../components/Offer/photos/Photos'\r\nimport EditPhoto from '../../../components/Photo/EditPhoto'\r\nimport CoverPhoto from '../../../components/Offer/photos/CoverPhoto'\r\nimport Video from '../../../components/Offer/photos/Video'\r\nimport Header from \"../../../components/Header/Header\";\r\n\r\nimport {apiEditOffer, apiOfferPhotos, apiSetOfferCoverPhoto, apiRemoveOfferPhoto, apiEditOfferPhoto} from '../../../actions/api'\r\nimport withOfferInfo from \"../../../utils/offer\";\r\nimport {showNotification} from \"../../../utils/notification\";\r\nimport useOffer from \"../../../hooks/useOffer\"\r\n\r\nimport '../../../components/Offer/photos/photo.css'\r\nimport {MainContext} from \"../../../components/contextProviders/MainContext\";\r\nimport {ContainerDesktop} from \"../../StyledComponents/Grid\";\r\n\r\nconst PhotosEdit = ({offer, setOffer, isLoading, onSave}) => {\r\n    const [step, setStep] = useState(2)\r\n    const [loading, setLoading] = useState(false)\r\n    const [loadingEdit, setLoadingEdit] = useState(false)\r\n    const [isDeletingAll, setIsDeletingAll] = useState(false)\r\n    const [uploading, setUploading] = useState(false)\r\n    const [photos, setPhotos] = useState([])\r\n    const [videos, setVideos] = useState([''])\r\n    const [cover, setCover] = useState(null)\r\n    const [photoEditable, setPhotoEditable] = useState({})\r\n    const [keyPhoto, setKeyPhoto] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if(offer.videoUrl && offer.videoUrl.length) {\r\n            setVideos(offer.videoUrl)\r\n        }\r\n        if(offer.offerPhoto && offer.offerPhoto.length) {\r\n            setPhotos(offer.offerPhoto)\r\n            setAvatarId()\r\n            setStep(2)\r\n        }\r\n    }, [offer.id])\r\n\r\n    const setAvatarId = () => {\r\n        if(!offer.avatarUrl) {\r\n            setCover(offer.offerPhoto[0].id)\r\n        } else {\r\n            let avatar = offer.offerPhoto.find(item => item.photoUrl === offer.avatarUrl)\r\n            if(avatar && avatar.id) {\r\n                setCover(avatar.id)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n        // setPhotos([...photos, ...files])\r\n        // setStep(2)\r\n        onUploadFiles(files)\r\n    }\r\n    const onUploadFiles = async (files) => {\r\n        let data = new FormData();\r\n        data.append(\"offerId\", offer.id);\r\n        files.forEach(file => {\r\n            if(!file.id || file.blob) {\r\n                if(file.blob) {\r\n                    data.append(\"file\", file.blob, file.name)\r\n                } else {\r\n                    data.append(\"file\", file, file.name)\r\n                }\r\n            }\r\n        });\r\n        setUploading(true)\r\n        let res = await apiOfferPhotos(data)\r\n        if(res.data) {\r\n            setPhotos([...photos, ...res.data])\r\n        }\r\n        setUploading(false)\r\n        setStep(2)\r\n    }\r\n    const onSetCover = id => {\r\n        setCover(id)\r\n        setStep(2)\r\n    }\r\n    const handleChangeStep = i => {\r\n        if(step === 5 && i === -1) {\r\n            setStep(2)\r\n            return\r\n        }\r\n        if((step === 1 || step === 2 ) && i === -1) {\r\n            Router.push('/offers/[id]/params', `/offers/${id}/params`, {shallow: true})\r\n        } else {\r\n            setStep(step + i)\r\n        }\r\n    }\r\n    const handleSavePhotos = async () => {\r\n            let data = new FormData();\r\n            data.append(\"offerId\", offer.id);\r\n            photos.forEach(file => {\r\n                if(!file.id || file.blob) {\r\n                    if(file.blob) {\r\n                        data.append(\"file\", file.blob, file.name)\r\n                    } else {\r\n                        data.append(\"file\", file, file.name)\r\n                    }\r\n                }\r\n            });\r\n        handleSendPhotos(data)\r\n\r\n            // let photosDeleting = photos.filter((item, key) => (item.blob && item.id))\r\n            //\r\n            // if(photosDeleting.length) {\r\n            //     Promise.all(photosDeleting.map(item => handleRemovePhoto(item.id)))\r\n            //         .then(res => {\r\n            //             handleSendPhotos(data)\r\n            //         })\r\n            // } else {\r\n            //     handleSendPhotos(data)\r\n            // }\r\n    }\r\n\r\n    const handleSendPhotos = data => {\r\n        //TODO optimaze and don't send if something not changed\r\n\r\n        setLoading(true)\r\n        let photosWithDesc = photos.filter(item => item.description)\r\n        Promise.all(photosWithDesc.map(item => handleEditPhoto(item)))\r\n            .then(res => {\r\n                console.log('res', res)\r\n            })\r\n\r\n        apiOfferPhotos(data)\r\n            .then(res => {\r\n                setLoading(false)\r\n                let photosFilter = photos.filter((item) => {\r\n                    return (item.id && !item.blob)\r\n                })\r\n                setPhotos([...photosFilter, ...res.data])\r\n                let offerPhotos = [...photosFilter, ...res.data]\r\n\r\n                apiSetOfferCoverPhoto(offer.id,{offerPhotoId: cover})\r\n                    .then(res => {\r\n                        setOffer({...offer, })\r\n                        setOffer({...offer, offerPhoto: offerPhotos, avatarUrl: res.data.avatarUrl})\r\n                        setLoading(false)\r\n                        onSave()\r\n                    })\r\n            })\r\n            .catch(e => {\r\n                showNotification('error', e)\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    const handleEditPhoto = async photo => {\r\n        const res = await apiEditOfferPhoto(photo)\r\n        console.log(res)\r\n        return res\r\n    }\r\n\r\n    const handleRemovePhoto = async id => {\r\n        const res = await apiRemoveOfferPhoto(id)\r\n        console.log(res)\r\n        return res\r\n    }\r\n\r\n    const handleDeletePhoto = async (key) => {\r\n        let photoByKey = photos[key];\r\n        if(photoByKey.id) {\r\n            const res = await handleRemovePhoto(photoByKey.id)\r\n            let photosClone = [...photos]\r\n            photosClone.splice(key, 1)\r\n            setPhotos(photosClone)\r\n            setStep(2)\r\n        } else {\r\n            let photosClone = [...photos]\r\n            photosClone.splice(key, 1)\r\n            setPhotos(photosClone)\r\n            setStep(2)\r\n        }\r\n    }\r\n\r\n    const setEditablePhoto = (photo, key) => {\r\n        setPhotoEditable(photo)\r\n        setKeyPhoto(key)\r\n        setStep(4)\r\n    }\r\n    const handleBackFromEdit = () => {\r\n        setPhotoEditable({})\r\n        setKeyPhoto(null)\r\n        setStep(2)\r\n    }\r\n    const handleRotate = async (blob, url, key) => {\r\n        let photosCopy = [...photos],\r\n            ephoto = photosCopy[key],\r\n            isCover = !!(cover == ephoto.id)\r\n\r\n        setLoadingEdit(true)\r\n        let data = new FormData();\r\n        data.append(\"offerId\", offer.id);\r\n        data.append(\"file\", blob, 'filename')\r\n        let res = await apiOfferPhotos(data)\r\n        if(ephoto && ephoto.id) await handleRemovePhoto(ephoto.id)\r\n        if(isCover) {\r\n            setCover(res.data[0].id)\r\n        }\r\n        photosCopy[key] = res.data[0]\r\n        setPhotos(photosCopy)\r\n        setLoadingEdit(false)\r\n        setStep(2)\r\n\r\n    }\r\n\r\n    const onChangePhotoDescription = (id, value) => {\r\n        value = value.slice(0, 100)\r\n        let photosClone = [...photos]\r\n        let key = photosClone.findIndex(item => item.id === id)\r\n        photosClone[key].description = value\r\n        setPhotos(photosClone)\r\n        console.log(key, value)\r\n    }\r\n\r\n    const handleDeleteAll = () => {\r\n        if (window.confirm('Are you sure you want to delete all photos?')) {\r\n            setIsDeletingAll(true)\r\n            Promise.all(photos.map(item => handleRemovePhoto(item.id)))\r\n                .then(res => {\r\n                    setIsDeletingAll(false)\r\n                    setPhotos([])\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const disabled = loading;\r\n\r\n    return (\r\n        <>\r\n            <Wrapper p={17} pt={35}>\r\n                {offer.id ?\r\n                    <>\r\n                        <WrapperHeight>\r\n                            {step === 2 &&\r\n                            <Photos\r\n                                onDrop={onDrop}\r\n                                setStep={setStep}\r\n                                cover={cover}\r\n                                photos={photos}\r\n                                setEditablePhoto={setEditablePhoto}\r\n                                handleDeleteAll={handleDeleteAll}\r\n                                isDeletingAll={isDeletingAll}\r\n                                uploading={uploading}\r\n                            />\r\n                            }\r\n                            {step === 3 &&\r\n                            <CoverPhoto\r\n                                photos={photos}\r\n                                setCover={onSetCover}\r\n                                handleBack={handleBackFromEdit}\r\n                                cover={cover}\r\n                            />\r\n                            }\r\n                            {step === 4 &&\r\n                            <EditPhoto\r\n                                keyPhoto={keyPhoto}\r\n                                photo={photoEditable}\r\n                                handleBack={handleBackFromEdit}\r\n                                handleRotate={handleRotate}\r\n                                handleDelete={handleDeletePhoto}\r\n                                onChangePhotoDescription={onChangePhotoDescription}\r\n                                loadingEdit={loadingEdit}\r\n                            />\r\n                            }\r\n                            {step === 5 && <Video videos={videos} setVideos={(videos) => setVideos([...videos])} />}\r\n                        </WrapperHeight>\r\n\r\n                        {step === 2 &&  <Button green loading={loading} onClick={handleSavePhotos} mt={70}>Save</Button>}\r\n\r\n                    </>\r\n                    :\r\n                    <>Loading...</>\r\n                }\r\n\r\n\r\n            </Wrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PhotosEdit\r\n"]},"metadata":{},"sourceType":"module"}