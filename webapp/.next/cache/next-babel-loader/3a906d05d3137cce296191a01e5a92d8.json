{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport Link from \"next/link\";\nimport moment from 'moment';\nimport dynamic from 'next/dynamic';\nimport Router, { useRouter } from 'next/router';\nimport Header from \"../../../components/Header/Header\";\nimport { HeaderChat, ContainerMessages, FooterChat, TextareaMessage, SendBtn, ProtectMessage, WrapperContentMessages, Details, OfferNameHeaderWrapper, OfferNameHeader, OfferDates, FadeMessages } from \"../../../components/Inbox/styledComponent\";\nimport Message from \"../../../components/Inbox/Message\";\nimport { Text } from \"../../../components/StyledComponents/Text\";\nimport { apiGetChatById, apiGetChatMessages, apiGetUserById, apiReadMessages, apiSendMessage } from \"../../../actions/api\";\nimport { MainContext } from \"../../../components/contextProviders/MainContext\";\nimport { Button } from \"../../../components/controls/Button/Button\";\nimport { Footer } from \"../../../components/Layouts/styledLayouts\";\nimport arrowBack from \"../../../static/img/arrow-back.svg\";\nexport default (function () {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useContext = useContext(MainContext),\n      me = _useContext.me,\n      handleChangeUnreadMessages = _useContext.handleChangeUnreadMessages;\n\n  var _useState = useState({}),\n      chat = _useState[0],\n      setChat = _useState[1];\n\n  var _useState2 = useState({}),\n      sender = _useState2[0],\n      setSender = _useState2[1];\n\n  var _useState3 = useState(''),\n      dates = _useState3[0],\n      setDates = _useState3[1];\n\n  var _useState4 = useState(''),\n      newMessage = _useState4[0],\n      setNewMessage = _useState4[1];\n\n  var _useState5 = useState([]),\n      messages = _useState5[0],\n      setMessages = _useState5[1];\n\n  var _useState6 = useState(true),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(true),\n      isCoverFade = _useState7[0],\n      setIsCoverFade = _useState7[1];\n\n  var _useState8 = useState(true),\n      loadingMessages = _useState8[0],\n      setLoadingMessages = _useState8[1];\n\n  var messagesEnd = useRef(null);\n  var myRef = useRef(null);\n  useEffect(function () {\n    if (id && me.id) {\n      apiGetChatById(id).then(function (res) {\n        setChat(res.data);\n        getDates(res.data.calendar);\n        setLoading(false);\n        apiGetChatMessages(id).then(function (res) {\n          setLoadingMessages(false);\n          setMessages(res.data);\n          getSender(res.data);\n          readMessages(res.data);\n        })[\"catch\"](function (e) {\n          console.log(e);\n          setLoading(false);\n        });\n      })[\"catch\"](function (e) {\n        console.log(e);\n        setLoading(false);\n      });\n    }\n  }, [id, me.id]);\n  useEffect(function () {\n    scrollToBottom();\n    setTimeout(function () {\n      setIsCoverFade(false);\n    }, 500);\n  }, [messages.length]);\n\n  var scrollToBottom = function scrollToBottom() {\n    if (messagesEnd.current) {\n      messagesEnd.current.scrollIntoView();\n    }\n  };\n\n  var readMessages = function readMessages(msgs) {\n    var count = 0,\n        arr = [];\n    msgs.map(function (item) {\n      if (item.senderId !== me.id && item.status != 'read') {\n        arr.push(item.id);\n      }\n\n      if (item.status === 'pending') count++;\n    });\n\n    if (count) {\n      apiReadMessages(arr).then(function (res) {\n        handleChangeUnreadMessages(count);\n      })[\"catch\"](function (e) {});\n    }\n  };\n\n  var getSender = function getSender(msgs) {\n    var senderMsg, res;\n    return _regeneratorRuntime.async(function getSender$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            senderMsg = msgs.find(function (item) {\n              if (!item.senderId) return null;\n              return item.senderId !== me.id;\n            });\n            console.log('senderMsg', senderMsg);\n\n            if (!(senderMsg && senderMsg.senderId)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(apiGetUserById(senderMsg.senderId));\n\n          case 5:\n            res = _context.sent;\n            setSender(res.data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var getDates = function getDates(calendar) {\n    if (!calendar.length) return;\n    calendar.sort(function (a, b) {\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    });\n    var from = calendar[0].date,\n        to = calendar[calendar.length - 1].date;\n\n    if (calendar.length === 1) {\n      setDates(moment(from).format('D MMM YYYY'));\n    } else {\n      setDates(moment(from).format('D MMM YYYY') + ' - ' + moment(to).format('D MMM YYYY'));\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    if (e.key === 'Enter') {// e.preventDefault()\n      // send()\n    }\n  };\n\n  var send = function send() {\n    console.log('send', newMessage);\n    if (!newMessage) return;\n    apiSendMessage(id, {\n      text: newMessage\n    }).then(function (res) {\n      setNewMessage('');\n      setMessages([].concat(_toConsumableArray(messages), [res.data]));\n      scrollToBottom();\n    })[\"catch\"](function (e) {});\n  };\n\n  var preApprove = function preApprove() {\n    Router.push('/booking/[id]', \"/booking/\".concat(id), {\n      shallow: true\n    });\n  };\n\n  var goToPay = function goToPay() {\n    Router.push('/booking/[id]/payment', \"/booking/\".concat(id, \"/payment\"), {\n      shallow: true\n    });\n  };\n\n  if (!chat.offerId) chat.offerId = {};\n  console.log(chat);\n  var showBtnBottomToOwner = chat.offerCreatorId === me.id && chat.status === 'pending';\n  var showBtnBottomToPay = chat.offerCreatorId !== me.id && chat.status === 'preApprove';\n  return __jsx(React.Fragment, null, !loading ? __jsx(\"div\", {\n    style: {\n      height: '100vh'\n    }\n  }, __jsx(HeaderChat, null, __jsx(Link, {\n    href: \"/inbox\"\n  }, __jsx(\"img\", {\n    src: arrowBack,\n    alt: \"\"\n  })), __jsx(OfferNameHeaderWrapper, null, __jsx(OfferNameHeader, null, chat.offerId.name), __jsx(OfferDates, null, chat.offerId.name)), __jsx(Link, {\n    href: \"/offers/[id]\",\n    as: \"/offers/\".concat(chat.offerId.id),\n    shallow: true\n  }, __jsx(Details, null, \"Details\"))), __jsx(WrapperContentMessages, null, __jsx(ProtectMessage, null, \"To protect your payments, always communicate and pay through the Talentbooking website.\"), __jsx(ProtectMessage, null, dates, \", \", chat.offerId.country, \" \", __jsx(\"br\", null), chat.location && __jsx(React.Fragment, null, chat.location, \", \"), chat.locationDetails, \" \", __jsx(\"br\", null), chat.startTime && __jsx(React.Fragment, null, chat.startTime, \", \"), chat.additionalTerms), !loadingMessages ? __jsx(ContainerMessages, null, isCoverFade && __jsx(FadeMessages, null), messages.map(function (item, key) {\n    return __jsx(Message, {\n      key: key,\n      message: item,\n      me: me,\n      sender: sender\n    });\n  })) : __jsx(\"div\", null, \"Loading...\"), __jsx(\"div\", {\n    style: {\n      \"float\": \"left\",\n      clear: \"both\"\n    },\n    ref: messagesEnd\n  })), __jsx(FooterChat, null, __jsx(TextareaMessage, {\n    placeholder: \"Write a message\",\n    value: newMessage,\n    onChange: function onChange(e) {\n      return setNewMessage(e.target.value);\n    },\n    onKeyDown: handleKeyDown\n  }), __jsx(SendBtn, {\n    onClick: send\n  }, \"Send\"), showBtnBottomToOwner && __jsx(Button, {\n    blue: true,\n    onClick: preApprove\n  }, \" Pre-approve or Decline  \"), showBtnBottomToPay && __jsx(Button, {\n    blue: true,\n    onClick: goToPay\n  }, \" Check and pay \"))) : __jsx(React.Fragment, null, \"Loading...\"));\n});","map":{"version":3,"sources":["D:/git/webapp3/webapp/pages/inbox/[id]/booking.js"],"names":["React","useState","useContext","useEffect","useRef","Link","moment","dynamic","Router","useRouter","Header","HeaderChat","ContainerMessages","FooterChat","TextareaMessage","SendBtn","ProtectMessage","WrapperContentMessages","Details","OfferNameHeaderWrapper","OfferNameHeader","OfferDates","FadeMessages","Message","Text","apiGetChatById","apiGetChatMessages","apiGetUserById","apiReadMessages","apiSendMessage","MainContext","Button","Footer","arrowBack","router","id","query","me","handleChangeUnreadMessages","chat","setChat","sender","setSender","dates","setDates","newMessage","setNewMessage","messages","setMessages","loading","setLoading","isCoverFade","setIsCoverFade","loadingMessages","setLoadingMessages","messagesEnd","myRef","then","res","data","getDates","calendar","getSender","readMessages","e","console","log","scrollToBottom","setTimeout","length","current","scrollIntoView","msgs","count","arr","map","item","senderId","status","push","senderMsg","find","sort","a","b","Date","date","getTime","from","to","format","handleKeyDown","key","send","text","preApprove","shallow","goToPay","offerId","showBtnBottomToOwner","offerCreatorId","showBtnBottomToPay","height","name","country","location","locationDetails","startTime","additionalTerms","clear","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport Link from \"next/link\";\r\nimport moment from 'moment'\r\nimport dynamic from 'next/dynamic';\r\nimport Router, { useRouter } from 'next/router'\r\nimport Header from \"../../../components/Header/Header\";\r\nimport {HeaderChat, ContainerMessages, FooterChat, TextareaMessage, SendBtn, ProtectMessage, WrapperContentMessages, Details, OfferNameHeaderWrapper, OfferNameHeader, OfferDates, FadeMessages} from \"../../../components/Inbox/styledComponent\"\r\nimport Message from \"../../../components/Inbox/Message\"\r\nimport {Text} from \"../../../components/StyledComponents/Text\"\r\nimport {\r\n    apiGetChatById,\r\n    apiGetChatMessages,\r\n    apiGetUserById,\r\n    apiReadMessages,\r\n    apiSendMessage\r\n} from \"../../../actions/api\";\r\nimport {MainContext} from \"../../../components/contextProviders/MainContext\";\r\nimport {Button} from \"../../../components/controls/Button/Button\";\r\nimport {Footer} from \"../../../components/Layouts/styledLayouts\";\r\nimport arrowBack from \"../../../static/img/arrow-back.svg\"\r\n\r\n\r\nexport default  () => {\r\n    const router = useRouter()\r\n    const { id } = router.query\r\n    const {me, handleChangeUnreadMessages} = useContext(MainContext)\r\n    const [chat, setChat] = useState({})\r\n    const [sender, setSender] = useState({})\r\n    const [dates, setDates] = useState('')\r\n    const [newMessage, setNewMessage] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [isCoverFade, setIsCoverFade] = useState(true)\r\n    const [loadingMessages, setLoadingMessages] = useState(true)\r\n    const messagesEnd = useRef(null);\r\n    const myRef = useRef(null)\r\n\r\n\r\n    useEffect(() => {\r\n        if(id && me.id) {\r\n            apiGetChatById(id)\r\n                .then(res => {\r\n                    setChat(res.data)\r\n                    getDates(res.data.calendar)\r\n                    setLoading(false)\r\n\r\n                    apiGetChatMessages(id)\r\n                        .then(res => {\r\n                            setLoadingMessages(false)\r\n                            setMessages(res.data)\r\n                            getSender(res.data)\r\n                            readMessages(res.data)\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                            setLoading(false)\r\n                        })\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    setLoading(false)\r\n                })\r\n        }\r\n    }, [id, me.id]);\r\n\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n        setTimeout(() => {\r\n            setIsCoverFade(false)\r\n        }, 500)\r\n    }, [messages.length]);\r\n\r\n    const scrollToBottom = () => {\r\n        if(messagesEnd.current){\r\n            messagesEnd.current.scrollIntoView();\r\n        }\r\n    }\r\n\r\n    const readMessages = msgs => {\r\n        let count = 0,\r\n            arr = []\r\n        msgs.map(item => {\r\n            if(item.senderId !== me.id && item.status != 'read') {\r\n                arr.push(item.id)\r\n            }\r\n            if(item.status === 'pending') count++\r\n        })\r\n\r\n        if(count) {\r\n            apiReadMessages(arr)\r\n                .then(res => {\r\n                    handleChangeUnreadMessages(count)\r\n                })\r\n                .catch(e => {})\r\n        }\r\n    }\r\n\r\n    const getSender = async (msgs) => {\r\n        let senderMsg = msgs.find(item => {\r\n            if(!item.senderId) return null\r\n            return item.senderId !== me.id\r\n        })\r\n        console.log('senderMsg', senderMsg)\r\n        if(senderMsg && senderMsg.senderId) {\r\n            const res = await apiGetUserById(senderMsg.senderId)\r\n            setSender(res.data)\r\n        }\r\n    }\r\n\r\n    const getDates =  (calendar) => {\r\n        if(!calendar.length) return\r\n        calendar.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\r\n        let from = calendar[0].date,\r\n            to = calendar[calendar.length - 1].date;\r\n\r\n        if(calendar.length === 1) {\r\n            setDates(moment(from).format('D MMM YYYY'))\r\n        } else {\r\n            setDates(moment(from).format('D MMM YYYY') + ' - ' + moment(to).format('D MMM YYYY'))\r\n        }\r\n\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            // e.preventDefault()\r\n            // send()\r\n        }\r\n    }\r\n    const send = () => {\r\n        console.log('send', newMessage)\r\n        if(!newMessage) return\r\n        apiSendMessage(id, {text: newMessage})\r\n            .then(res => {\r\n                setNewMessage('')\r\n                setMessages([...messages, res.data])\r\n                scrollToBottom()\r\n            })\r\n            .catch(e => {\r\n\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const preApprove = () => {\r\n        Router.push('/booking/[id]', `/booking/${id}`, {shallow: true})\r\n    }\r\n    const goToPay = () => {\r\n        Router.push('/booking/[id]/payment', `/booking/${id}/payment`, {shallow: true})\r\n    }\r\n\r\n\r\n    if(!chat.offerId) chat.offerId = {}\r\n\r\n    console.log(chat)\r\n\r\n    let showBtnBottomToOwner = (chat.offerCreatorId === me.id && chat.status === 'pending')\r\n    let showBtnBottomToPay = (chat.offerCreatorId !== me.id && chat.status === 'preApprove')\r\n\r\n    return (\r\n        <>\r\n            {/*<Header isProfile/>*/}\r\n\r\n            {!loading ?\r\n                <div style={{height: '100vh'}}>\r\n                    <HeaderChat>\r\n                        <Link href={`/inbox`}>\r\n                            <img src={arrowBack} alt=\"\"/>\r\n                        </Link>\r\n\r\n                        <OfferNameHeaderWrapper>\r\n                            <OfferNameHeader>{chat.offerId.name}</OfferNameHeader>\r\n                            <OfferDates>{chat.offerId.name}</OfferDates>\r\n                        </OfferNameHeaderWrapper>\r\n                        <Link href=\"/offers/[id]\" as={`/offers/${chat.offerId.id}`} shallow>\r\n                            <Details>\r\n                                Details\r\n                            </Details>\r\n                        </Link>\r\n                    </HeaderChat>\r\n                    <WrapperContentMessages >\r\n                        <ProtectMessage>\r\n                            To protect your payments,\r\n                            always communicate and pay through the\r\n                            Talentbooking website.\r\n                        </ProtectMessage>\r\n                        <ProtectMessage>\r\n                            {dates}, {chat.offerId.country} <br/>\r\n                            {chat.location && <>{chat.location}, </> }\r\n                            {chat.locationDetails} <br/>\r\n                            {chat.startTime && <>{chat.startTime}, </> }\r\n                            {chat.additionalTerms}\r\n                        </ProtectMessage>\r\n\r\n                        {!loadingMessages ?\r\n                            <ContainerMessages>\r\n                                {isCoverFade &&  <FadeMessages />}\r\n                                {messages.map((item, key) =>\r\n                                    <Message key={key}\r\n                                             message={item}\r\n                                             me={me}\r\n                                             sender={sender}\r\n                                    />\r\n                                )}\r\n                            </ContainerMessages>\r\n                            :\r\n                            <div>Loading...</div>\r\n                        }\r\n                        <div style={{ float:\"left\", clear: \"both\" }} ref={messagesEnd}></div>\r\n                    </WrapperContentMessages>\r\n\r\n\r\n                    <FooterChat>\r\n                        <TextareaMessage\r\n                            placeholder='Write a message'\r\n                            value={newMessage}\r\n                            onChange={e => setNewMessage(e.target.value)}\r\n                            onKeyDown={handleKeyDown}\r\n                        />\r\n                        <SendBtn onClick={send}>Send</SendBtn>\r\n\r\n                        {showBtnBottomToOwner &&\r\n                        <Button blue onClick={preApprove} > Pre-approve or Decline  </Button>\r\n                        }\r\n                        {showBtnBottomToPay &&\r\n                        <Button blue onClick={goToPay} > Check and pay </Button>\r\n                        }\r\n\r\n                    </FooterChat>\r\n                </div>\r\n                :\r\n                <>Loading...</>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}