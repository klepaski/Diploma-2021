{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport Link from \"next/link\";\nimport moment from 'moment';\nimport dynamic from 'next/dynamic';\nimport Router, { useRouter } from 'next/router';\nimport Header from \"../../../components/Header/Header\";\nimport { HeaderChat, ContainerMessages, FooterChat, TextareaMessage, SendBtn, ProtectMessage, WrapperContentMessages, Details, OfferNameHeaderWrapper, OfferNameHeader, OfferDates, FadeMessages } from \"../../../components/Inbox/styledComponent\";\nimport Message from \"../../../components/Inbox/Message\";\nimport { Text } from \"../../../components/StyledComponents/Text\";\nimport { apiGetChatById, apiGetChatMessages, apiGetUserById, apiReadMessages, apiSendMessage } from \"../../../actions/api\";\nimport { MainContext } from \"../../../components/contextProviders/MainContext\";\nimport { Button } from \"../../../components/controls/Button/Button\";\nimport { Footer } from \"../../../components/Layouts/styledLayouts\";\nimport arrowBack from \"../../../static/img/arrow-back.svg\";\nimport { ContainerDesktop } from '../../../components/StyledComponents/Grid';\nexport default (() => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    me,\n    handleChangeUnreadMessages\n  } = useContext(MainContext);\n  const {\n    0: chat,\n    1: setChat\n  } = useState({});\n  const {\n    0: sender,\n    1: setSender\n  } = useState({});\n  const {\n    0: dates,\n    1: setDates\n  } = useState('');\n  const {\n    0: newMessage,\n    1: setNewMessage\n  } = useState('');\n  const {\n    0: messages,\n    1: setMessages\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: isCoverFade,\n    1: setIsCoverFade\n  } = useState(true);\n  const {\n    0: loadingMessages,\n    1: setLoadingMessages\n  } = useState(true);\n  const messagesEnd = useRef(null);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (id && me.id) {\n      apiGetChatById(id).then(res => {\n        setChat(res.data);\n        getDates(res.data.calendar);\n        setLoading(false);\n        apiGetChatMessages(id).then(res => {\n          setLoadingMessages(false);\n          setMessages(res.data);\n          getSender(res.data);\n          readMessages(res.data);\n        }).catch(e => {\n          console.log(e);\n          setLoading(false);\n        });\n      }).catch(e => {\n        console.log(e);\n        setLoading(false);\n      });\n    }\n  }, [id, me.id]);\n  useEffect(() => {\n    scrollToBottom();\n    setTimeout(() => {\n      setIsCoverFade(false);\n    }, 500);\n  }, [messages.length]);\n\n  const scrollToBottom = () => {\n    if (messagesEnd.current) {\n      messagesEnd.current.scrollIntoView();\n    }\n  };\n\n  const readMessages = msgs => {\n    let count = 0,\n        arr = [];\n    msgs.map(item => {\n      if (item.senderId !== me.id && item.status != 'read') {\n        arr.push(item.id);\n      }\n\n      if (item.status === 'pending') count++;\n    });\n\n    if (count) {\n      apiReadMessages(arr).then(res => {\n        handleChangeUnreadMessages(count);\n      }).catch(e => {});\n    }\n  };\n\n  const getSender = async msgs => {\n    let senderMsg = msgs.find(item => {\n      if (!item.senderId) return null;\n      return item.senderId !== me.id;\n    });\n    console.log('senderMsg', senderMsg);\n\n    if (senderMsg && senderMsg.senderId) {\n      const res = await apiGetUserById(senderMsg.senderId);\n      setSender(res.data);\n    }\n  };\n\n  const getDates = calendar => {\n    if (!calendar.length) return;\n    calendar.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n    let from = calendar[0].date,\n        to = calendar[calendar.length - 1].date;\n\n    if (calendar.length === 1) {\n      setDates(moment(from).format('D MMM YYYY'));\n    } else {\n      setDates(moment(from).format('D MMM YYYY') + ' - ' + moment(to).format('D MMM YYYY'));\n    }\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {// e.preventDefault()\n      // send()\n    }\n  };\n\n  const send = () => {\n    console.log('send', newMessage);\n    if (!newMessage) return;\n    apiSendMessage(id, {\n      text: newMessage\n    }).then(res => {\n      setNewMessage('');\n      setMessages([...messages, res.data]);\n      scrollToBottom();\n    }).catch(e => {});\n  };\n\n  const approve = () => {\n    Router.push('/booking/[id]', `/booking/${id}`, {\n      shallow: true\n    });\n  };\n\n  const goToReview = () => {\n    Router.push('/booking/[id]/review', `/booking/${id}/review`, {\n      shallow: true\n    });\n  };\n\n  if (!chat.offerId) chat.offerId = {};\n  console.log(chat);\n  let showBtnBottomToOwner = chat.offerCreatorId === me.id && chat.status === 'pending';\n  let showBtnBottomToPay = chat.offerCreatorId !== me.id && chat.status === 'approve';\n  return __jsx(React.Fragment, null, !loading ? __jsx(\"div\", {\n    style: {\n      height: '100vh'\n    }\n  }, __jsx(HeaderChat, null, __jsx(Link, {\n    href: `/inbox`\n  }, __jsx(\"img\", {\n    src: arrowBack,\n    alt: \"\"\n  })), __jsx(OfferNameHeaderWrapper, null, __jsx(OfferNameHeader, null, chat.offerId.name), __jsx(OfferDates, null, chat.offerId.name)), __jsx(Link, {\n    href: \"/offers/[id]\",\n    as: `/offers/${chat.offerId.id}`,\n    shallow: true\n  }, __jsx(Details, null, \"Details\"))), __jsx(ContainerDesktop, null, __jsx(WrapperContentMessages, null, __jsx(ProtectMessage, null, dates, \", \", chat.offerId.country, \" \", __jsx(\"br\", null), chat.location && __jsx(React.Fragment, null, chat.location, \", \"), chat.locationDetails, \" \", __jsx(\"br\", null), chat.startTime && __jsx(React.Fragment, null, chat.startTime, \", \"), chat.additionalTerms), !loadingMessages ? __jsx(ContainerMessages, null, isCoverFade && __jsx(FadeMessages, null), messages.map((item, key) => __jsx(Message, {\n    key: key,\n    message: item,\n    me: me,\n    sender: sender\n  }))) : __jsx(\"div\", null, \"Loading...\"), __jsx(\"div\", {\n    style: {\n      float: \"left\",\n      clear: \"both\"\n    },\n    ref: messagesEnd\n  })), __jsx(FooterChat, null, __jsx(TextareaMessage, {\n    placeholder: \"Write a message\",\n    value: newMessage,\n    onChange: e => setNewMessage(e.target.value),\n    onKeyDown: handleKeyDown\n  }), __jsx(SendBtn, {\n    onClick: send\n  }, \"Send\"), showBtnBottomToOwner && __jsx(Button, {\n    blue: true,\n    onClick: approve\n  }, \" Approve or Decline  \"), showBtnBottomToPay && __jsx(\"div\", {\n    className: 'flex-2-column'\n  }, __jsx(Button, {\n    green: true,\n    onClick: goToReview,\n    ml: 10\n  }, \" Leave review \"))))) : __jsx(React.Fragment, null, \"Loading...\"));\n});","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/pages/inbox/[id]/booking.js"],"names":["React","useState","useContext","useEffect","useRef","Link","moment","dynamic","Router","useRouter","Header","HeaderChat","ContainerMessages","FooterChat","TextareaMessage","SendBtn","ProtectMessage","WrapperContentMessages","Details","OfferNameHeaderWrapper","OfferNameHeader","OfferDates","FadeMessages","Message","Text","apiGetChatById","apiGetChatMessages","apiGetUserById","apiReadMessages","apiSendMessage","MainContext","Button","Footer","arrowBack","ContainerDesktop","router","id","query","me","handleChangeUnreadMessages","chat","setChat","sender","setSender","dates","setDates","newMessage","setNewMessage","messages","setMessages","loading","setLoading","isCoverFade","setIsCoverFade","loadingMessages","setLoadingMessages","messagesEnd","myRef","then","res","data","getDates","calendar","getSender","readMessages","catch","e","console","log","scrollToBottom","setTimeout","length","current","scrollIntoView","msgs","count","arr","map","item","senderId","status","push","senderMsg","find","sort","a","b","Date","date","getTime","from","to","format","handleKeyDown","key","send","text","approve","shallow","goToReview","offerId","showBtnBottomToOwner","offerCreatorId","showBtnBottomToPay","height","name","country","location","locationDetails","startTime","additionalTerms","float","clear","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport Link from \"next/link\";\r\nimport moment from 'moment'\r\nimport dynamic from 'next/dynamic';\r\nimport Router, { useRouter } from 'next/router'\r\nimport Header from \"../../../components/Header/Header\";\r\nimport {HeaderChat, ContainerMessages, FooterChat, TextareaMessage, SendBtn, ProtectMessage, WrapperContentMessages, Details, OfferNameHeaderWrapper, OfferNameHeader, OfferDates, FadeMessages} from \"../../../components/Inbox/styledComponent\"\r\nimport Message from \"../../../components/Inbox/Message\"\r\nimport {Text} from \"../../../components/StyledComponents/Text\"\r\nimport {\r\n    apiGetChatById,\r\n    apiGetChatMessages,\r\n    apiGetUserById,\r\n    apiReadMessages,\r\n    apiSendMessage\r\n} from \"../../../actions/api\";\r\nimport {MainContext} from \"../../../components/contextProviders/MainContext\";\r\nimport {Button} from \"../../../components/controls/Button/Button\";\r\nimport {Footer} from \"../../../components/Layouts/styledLayouts\";\r\nimport arrowBack from \"../../../static/img/arrow-back.svg\"\r\nimport { ContainerDesktop } from '../../../components/StyledComponents/Grid'\r\n\r\n\r\nexport default  () => {\r\n    const router = useRouter()\r\n    const { id } = router.query\r\n    const {me, handleChangeUnreadMessages} = useContext(MainContext)\r\n    const [chat, setChat] = useState({})\r\n    const [sender, setSender] = useState({})\r\n    const [dates, setDates] = useState('')\r\n    const [newMessage, setNewMessage] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [isCoverFade, setIsCoverFade] = useState(true)\r\n    const [loadingMessages, setLoadingMessages] = useState(true)\r\n    const messagesEnd = useRef(null);\r\n    const myRef = useRef(null)\r\n\r\n\r\n    useEffect(() => {\r\n        if(id && me.id) {\r\n            apiGetChatById(id)\r\n                .then(res => {\r\n                    setChat(res.data)\r\n                    getDates(res.data.calendar)\r\n                    setLoading(false)\r\n\r\n                    apiGetChatMessages(id)\r\n                        .then(res => {\r\n                            setLoadingMessages(false)\r\n                            setMessages(res.data)\r\n                            getSender(res.data)\r\n                            readMessages(res.data)\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                            setLoading(false)\r\n                        })\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    setLoading(false)\r\n                })\r\n        }\r\n    }, [id, me.id]);\r\n\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n        setTimeout(() => {\r\n            setIsCoverFade(false)\r\n        }, 500)\r\n    }, [messages.length]);\r\n\r\n    const scrollToBottom = () => {\r\n        if(messagesEnd.current){\r\n            messagesEnd.current.scrollIntoView();\r\n        }\r\n    }\r\n\r\n    const readMessages = msgs => {\r\n        let count = 0,\r\n            arr = []\r\n        msgs.map(item => {\r\n            if(item.senderId !== me.id && item.status != 'read') {\r\n                arr.push(item.id)\r\n            }\r\n            if(item.status === 'pending') count++\r\n        })\r\n\r\n        if(count) {\r\n            apiReadMessages(arr)\r\n                .then(res => {\r\n                    handleChangeUnreadMessages(count)\r\n                })\r\n                .catch(e => {})\r\n        }\r\n    }\r\n\r\n    const getSender = async (msgs) => {\r\n        let senderMsg = msgs.find(item => {\r\n            if(!item.senderId) return null\r\n            return item.senderId !== me.id\r\n        })\r\n        console.log('senderMsg', senderMsg)\r\n        if(senderMsg && senderMsg.senderId) {\r\n            const res = await apiGetUserById(senderMsg.senderId)\r\n            setSender(res.data)\r\n        }\r\n    }\r\n\r\n    const getDates =  (calendar) => {\r\n        if(!calendar.length) return\r\n        calendar.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\r\n        let from = calendar[0].date,\r\n            to = calendar[calendar.length - 1].date;\r\n\r\n        if(calendar.length === 1) {\r\n            setDates(moment(from).format('D MMM YYYY'))\r\n        } else {\r\n            setDates(moment(from).format('D MMM YYYY') + ' - ' + moment(to).format('D MMM YYYY'))\r\n        }\r\n\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            // e.preventDefault()\r\n            // send()\r\n        }\r\n    }\r\n    const send = () => {\r\n        console.log('send', newMessage)\r\n        if(!newMessage) return\r\n        apiSendMessage(id, {text: newMessage})\r\n            .then(res => {\r\n                setNewMessage('')\r\n                setMessages([...messages, res.data])\r\n                scrollToBottom()\r\n            })\r\n            .catch(e => {\r\n\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const approve = () => {\r\n        Router.push('/booking/[id]', `/booking/${id}`, {shallow: true})\r\n    }\r\n    const goToReview = () => {\r\n        Router.push('/booking/[id]/review', `/booking/${id}/review`, {shallow: true})\r\n    }\r\n\r\n\r\n    if(!chat.offerId) chat.offerId = {}\r\n\r\n    console.log(chat)\r\n\r\n    let showBtnBottomToOwner = (chat.offerCreatorId === me.id && chat.status === 'pending')\r\n    let showBtnBottomToPay = (chat.offerCreatorId !== me.id && chat.status === 'approve')\r\n\r\n    return (\r\n        <>\r\n            {/*<Header isProfile/>*/}\r\n\r\n            {!loading ?\r\n                <div style={{height: '100vh'}}>\r\n                    <HeaderChat>\r\n                        <Link href={`/inbox`}>\r\n                            <img src={arrowBack} alt=\"\"/>\r\n                        </Link>\r\n\r\n                        <OfferNameHeaderWrapper>\r\n                            <OfferNameHeader>{chat.offerId.name}</OfferNameHeader>\r\n                            <OfferDates>{chat.offerId.name}</OfferDates>\r\n                        </OfferNameHeaderWrapper>\r\n                        <Link href=\"/offers/[id]\" as={`/offers/${chat.offerId.id}`} shallow>\r\n                            <Details>\r\n                                Details\r\n                            </Details>\r\n                        </Link>\r\n                    </HeaderChat>\r\n                    <ContainerDesktop>\r\n                        <WrapperContentMessages >\r\n                            <ProtectMessage>\r\n                                {dates}, {chat.offerId.country} <br/>\r\n                                {chat.location && <>{chat.location}, </> }\r\n                                {chat.locationDetails} <br/>\r\n                                {chat.startTime && <>{chat.startTime}, </> }\r\n                                {chat.additionalTerms}\r\n                            </ProtectMessage>\r\n\r\n                            {!loadingMessages ?\r\n                                <ContainerMessages>\r\n                                    {isCoverFade &&  <FadeMessages />}\r\n                                    {messages.map((item, key) =>\r\n                                        <Message key={key}\r\n                                                 message={item}\r\n                                                 me={me}\r\n                                                 sender={sender}\r\n                                        />\r\n                                    )}\r\n                                </ContainerMessages>\r\n                                :\r\n                                <div>Loading...</div>\r\n                            }\r\n                            <div style={{ float:\"left\", clear: \"both\" }} ref={messagesEnd}></div>\r\n                        </WrapperContentMessages>\r\n\r\n                        <FooterChat>\r\n                            <TextareaMessage\r\n                                placeholder='Write a message'\r\n                                value={newMessage}\r\n                                onChange={e => setNewMessage(e.target.value)}\r\n                                onKeyDown={handleKeyDown}\r\n                            />\r\n                            <SendBtn onClick={send}>Send</SendBtn>\r\n\r\n                            {showBtnBottomToOwner &&\r\n                            <Button blue onClick={approve} > Approve or Decline  </Button>\r\n                            }\r\n                            {showBtnBottomToPay &&\r\n                            <div className={'flex-2-column'}>\r\n                                <Button green onClick={goToReview} ml={10} > Leave review </Button>\r\n                            </div>\r\n\r\n                            }\r\n\r\n                        </FooterChat>\r\n                    </ContainerDesktop>\r\n\r\n                </div>\r\n                :\r\n                <>Loading...</>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}