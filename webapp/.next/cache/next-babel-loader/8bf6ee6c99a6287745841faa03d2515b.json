{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  margin-top: 20px;\\n  color: rgba(0, 0, 0, 0.8);\\n  text-align: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport Link from 'next/link';\nimport styled, { css } from 'styled-components';\nimport Router, { useRouter } from 'next/router';\nimport Header from '../../components/Header/Header';\nimport { apiGetListChats } from '../../actions/api';\nimport { Title } from '../../components/Inbox/styledComponent';\nimport InboxItem from '../../components/Inbox/InboxItem';\nimport { Divider } from '../../components/StyledComponents/Divider';\nimport { MainContext } from '../../components/contextProviders/MainContext';\nimport { ContainerDesktop } from '../../components/StyledComponents/Grid';\nexport default (function () {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useContext = useContext(MainContext),\n      me = _useContext.me;\n\n  var _useState = useState([]),\n      chats = _useState[0],\n      setChats = _useState[1];\n\n  var _useState2 = useState([]),\n      photos = _useState2[0],\n      setPhotos = _useState2[1];\n\n  var _useState3 = useState({\n    startDate: null,\n    endDate: null\n  }),\n      bookingDates = _useState3[0],\n      setBookingDates = _useState3[1];\n\n  var _useState4 = useState(true),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    apiGetListChats().then(function (res) {\n      setChats(res.data.reverse());\n      setLoading(false);\n    })[\"catch\"](function (e) {\n      setLoading(false);\n    });\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    isProfile: true\n  }), __jsx(ContainerDesktop, null, __jsx(Title, null, \"Inbox\"), __jsx(Divider, {\n    full: true,\n    grey: true\n  }), !loading ? __jsx(React.Fragment, null, !chats.length ? __jsx(NotYet, null, \"You have no messages yet\") : __jsx(React.Fragment, null, chats.map(function (item, key) {\n    return __jsx(InboxItem, {\n      key: key,\n      chat: item,\n      me: me\n    });\n  }))) : __jsx(React.Fragment, null, \"Loading...\")));\n});\nvar NotYet = styled.div(_templateObject());","map":{"version":3,"sources":["D:/4/диплом/webapp/pages/inbox/index.js"],"names":["React","useState","useContext","useEffect","dynamic","Link","styled","css","Router","useRouter","Header","apiGetListChats","Title","InboxItem","Divider","MainContext","ContainerDesktop","router","id","query","me","chats","setChats","photos","setPhotos","startDate","endDate","bookingDates","setBookingDates","loading","setLoading","then","res","data","reverse","e","length","map","item","key","NotYet","div"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,KAAT,QAAsB,wCAAtB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,OAAT,QAAwB,2CAAxB;AACA,SAASC,WAAT,QAA4B,+CAA5B;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AAEA,gBAAe,YAAM;AACnB,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AADmB,MAEXS,EAFW,GAEJD,MAAM,CAACE,KAFH,CAEXD,EAFW;;AAAA,oBAGJhB,UAAU,CAACa,WAAD,CAHN;AAAA,MAGXK,EAHW,eAGXA,EAHW;;AAAA,kBAIOnB,QAAQ,CAAC,EAAD,CAJf;AAAA,MAIZoB,KAJY;AAAA,MAILC,QAJK;;AAAA,mBAKSrB,QAAQ,CAAC,EAAD,CALjB;AAAA,MAKZsB,MALY;AAAA,MAKJC,SALI;;AAAA,mBAMqBvB,QAAQ,CAAC;AAAEwB,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,OAAO,EAAE;AAA5B,GAAD,CAN7B;AAAA,MAMZC,YANY;AAAA,MAMEC,eANF;;AAAA,mBAOW3B,QAAQ,CAAC,IAAD,CAPnB;AAAA,MAOZ4B,OAPY;AAAA,MAOHC,UAPG;;AASnB3B,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,eAAe,GACZoB,IADH,CACQ,UAACC,GAAD,EAAS;AACbV,MAAAA,QAAQ,CAACU,GAAG,CAACC,IAAJ,CAASC,OAAT,EAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJH,WAKS,UAACK,CAAD,EAAO;AACZL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAWA,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,SAAS;AAAjB,IADF,EAEE,MAAC,gBAAD,QACE,MAAC,KAAD,gBADF,EAEE,MAAC,OAAD;AAAS,IAAA,IAAI,MAAb;AAAc,IAAA,IAAI;AAAlB,IAFF,EAGG,CAACD,OAAD,GACC,4BACG,CAACR,KAAK,CAACe,MAAP,GACC,MAAC,MAAD,mCADD,GAGC,4BACGf,KAAK,CAACgB,GAAN,CAAU,UAACC,IAAD,EAAOC,GAAP;AAAA,WACT,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,GAAhB;AAAqB,MAAA,IAAI,EAAED,IAA3B;AAAiC,MAAA,EAAE,EAAElB;AAArC,MADS;AAAA,GAAV,CADH,CAJJ,CADD,GAaC,yCAhBJ,CAFF,CADF;AAwBD,CA5CD;AA8CA,IAAMoB,MAAM,GAAGlC,MAAM,CAACmC,GAAV,mBAAZ","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport dynamic from 'next/dynamic'\r\nimport Link from 'next/link'\r\nimport styled, { css } from 'styled-components'\r\nimport Router, { useRouter } from 'next/router'\r\nimport Header from '../../components/Header/Header'\r\nimport { apiGetListChats } from '../../actions/api'\r\nimport { Title } from '../../components/Inbox/styledComponent'\r\nimport InboxItem from '../../components/Inbox/InboxItem'\r\nimport { Divider } from '../../components/StyledComponents/Divider'\r\nimport { MainContext } from '../../components/contextProviders/MainContext'\r\nimport { ContainerDesktop } from '../../components/StyledComponents/Grid'\r\n\r\nexport default () => {\r\n  const router = useRouter()\r\n  const { id } = router.query\r\n  const { me } = useContext(MainContext)\r\n  const [chats, setChats] = useState([])\r\n  const [photos, setPhotos] = useState([])\r\n  const [bookingDates, setBookingDates] = useState({ startDate: null, endDate: null })\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    apiGetListChats()\r\n      .then((res) => {\r\n        setChats(res.data.reverse())\r\n        setLoading(false)\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Header isProfile />\r\n      <ContainerDesktop>\r\n        <Title>Inbox</Title>\r\n        <Divider full grey />\r\n        {!loading ? (\r\n          <>\r\n            {!chats.length ? (\r\n              <NotYet>You have no messages yet</NotYet>\r\n            ) : (\r\n              <>\r\n                {chats.map((item, key) => (\r\n                  <InboxItem key={key} chat={item} me={me} />\r\n                ))}\r\n              </>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>Loading...</>\r\n        )}\r\n      </ContainerDesktop>\r\n    </>\r\n  )\r\n}\r\n\r\nconst NotYet = styled.div`\r\n  font-size: 18px;\r\n  margin-top: 20px;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  text-align: center;\r\n`\r\n"]},"metadata":{},"sourceType":"module"}