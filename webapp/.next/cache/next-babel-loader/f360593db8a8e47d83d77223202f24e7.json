{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport Link from \"next/link\";\nimport Router, { useRouter } from 'next/router';\nimport Header from \"../../components/Header/Header\";\nimport { apiGetListChats } from \"../../actions/api\";\nimport { Title } from '../../components/Inbox/styledComponent';\nimport InboxItem from '../../components/Inbox/InboxItem';\nimport { Divider } from \"../../components/StyledComponents/Divider\";\nimport { MainContext } from \"../../components/contextProviders/MainContext\";\nexport default (() => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    me\n  } = useContext(MainContext);\n  const {\n    0: chats,\n    1: setChats\n  } = useState([]);\n  const {\n    0: photos,\n    1: setPhotos\n  } = useState([]);\n  const {\n    0: bookingDates,\n    1: setBookingDates\n  } = useState({\n    startDate: null,\n    endDate: null\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    apiGetListChats().then(res => {\n      setChats(res.data.reverse());\n      setLoading(false);\n    }).catch(e => {\n      setLoading(false);\n    });\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    isProfile: true\n  }), __jsx(React.Fragment, null, __jsx(Title, null, \"Inbox\"), __jsx(Divider, {\n    full: true,\n    grey: true\n  }), !loading ? __jsx(React.Fragment, null, chats.map((item, key) => __jsx(InboxItem, {\n    key: key,\n    chat: item,\n    me: me\n  }))) : __jsx(React.Fragment, null, \"Loading...\")));\n});","map":{"version":3,"sources":["D:/git/webapp3/webapp/pages/inbox/index.js"],"names":["React","useState","useContext","useEffect","dynamic","Link","Router","useRouter","Header","apiGetListChats","Title","InboxItem","Divider","MainContext","router","id","query","me","chats","setChats","photos","setPhotos","bookingDates","setBookingDates","startDate","endDate","loading","setLoading","then","res","data","reverse","catch","e","map","item","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAEA,SAAQC,eAAR,QAA8B,mBAA9B;AACA,SAAQC,KAAR,QAAoB,wCAApB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AAEA,SAAQC,OAAR,QAAsB,2CAAtB;AACA,SAAQC,WAAR,QAA0B,+CAA1B;AAGA,gBAAgB,MAAM;AAClB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAOf,UAAU,CAACW,WAAD,CAAvB;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACmB,MAAD;AAAA,OAASC;AAAT,MAAsBpB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACqB,YAAD;AAAA,OAAeC;AAAf,MAAkCtB,QAAQ,CAAC;AAACuB,IAAAA,SAAS,EAAE,IAAZ;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAAD,CAAhD;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwB1B,QAAQ,CAAC,IAAD,CAAtC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,eAAe,GACVmB,IADL,CACUC,GAAG,IAAI;AACTV,MAAAA,QAAQ,CAACU,GAAG,CAACC,IAAJ,CAASC,OAAT,EAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJL,EAKKK,KALL,CAKWC,CAAC,IAAI;AACRN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAPL;AAQH,GATQ,EASN,EATM,CAAT;AAYA,SACI,4BACI,MAAC,MAAD;AAAQ,IAAA,SAAS;AAAjB,IADJ,EAEQ,4BACI,MAAC,KAAD,gBADJ,EAEI,MAAC,OAAD;AAAS,IAAA,IAAI,MAAb;AAAc,IAAA,IAAI;AAAlB,IAFJ,EAGK,CAACD,OAAD,GACD,4BACKR,KAAK,CAACgB,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,KACH,MAAC,SAAD;AACI,IAAA,GAAG,EAAEA,GADT;AAEI,IAAA,IAAI,EAAED,IAFV;AAGI,IAAA,EAAE,EAAElB;AAHR,IADP,CADL,CADC,GAWD,yCAdJ,CAFR,CADJ;AAsBH,CA3CD","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport Link from \"next/link\";\r\n\r\nimport Router, { useRouter } from 'next/router'\r\nimport Header from \"../../components/Header/Header\";\r\n\r\nimport {apiGetListChats} from \"../../actions/api\";\r\nimport {Title} from '../../components/Inbox/styledComponent'\r\nimport InboxItem from '../../components/Inbox/InboxItem'\r\n\r\nimport {Divider} from \"../../components/StyledComponents/Divider\"\r\nimport {MainContext} from \"../../components/contextProviders/MainContext\";\r\n\r\n\r\nexport default  () => {\r\n    const router = useRouter()\r\n    const { id } = router.query\r\n    const {me} = useContext(MainContext)\r\n    const [chats, setChats] = useState([])\r\n    const [photos, setPhotos] = useState([])\r\n    const [bookingDates, setBookingDates] = useState({startDate: null, endDate: null})\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        apiGetListChats()\r\n            .then(res => {\r\n                setChats(res.data.reverse())\r\n                setLoading(false)\r\n            })\r\n            .catch(e => {\r\n                setLoading(false)\r\n            })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header isProfile/>\r\n                <>\r\n                    <Title>Inbox</Title>\r\n                    <Divider full grey />\r\n                    {!loading ?\r\n                    <>\r\n                        {chats.map((item, key) =>\r\n                                <InboxItem\r\n                                    key={key}\r\n                                    chat={item}\r\n                                    me={me}\r\n                                />\r\n                        )}\r\n                    </>\r\n                    :\r\n                    <>Loading...</>\r\n                    }\r\n                </>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}