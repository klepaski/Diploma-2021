{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst initialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'TICK':\n      return _objectSpread({}, state, {\n        lastUpdate: action.lastUpdate,\n        light: !!action.light\n      });\n\n    case 'INCREMENT':\n      return _objectSpread({}, state, {\n        count: state.count + 1\n      });\n\n    case 'DECREMENT':\n      return _objectSpread({}, state, {\n        count: state.count - 1\n      });\n\n    case 'RESET':\n      return _objectSpread({}, state, {\n        count: initialState.count\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const initializeStore = (preloadedState = initialState) => {\n  return createStore(reducer, preloadedState, composeWithDevTools(applyMiddleware()));\n};","map":{"version":3,"sources":["D:/git/webapp3/webapp/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","initialState","lastUpdate","light","count","reducer","state","action","type","initializeStore","preloadedState"],"mappings":";;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,CADK;AAEjBC,EAAAA,KAAK,EAAE,KAFU;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,MAAL;AACI,+BACOF,KADP;AAEIJ,QAAAA,UAAU,EAAEK,MAAM,CAACL,UAFvB;AAGIC,QAAAA,KAAK,EAAE,CAAC,CAACI,MAAM,CAACJ;AAHpB;;AAKJ,SAAK,WAAL;AACI,+BACOG,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFzB;;AAIJ,SAAK,WAAL;AACI,+BACOE,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFzB;;AAIJ,SAAK,OAAL;AACI,+BACOE,KADP;AAEIF,QAAAA,KAAK,EAAEH,YAAY,CAACG;AAFxB;;AAIJ;AACI,aAAOE,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,OAAO,MAAMG,eAAe,GAAG,CAACC,cAAc,GAAGT,YAAlB,KAAmC;AAC9D,SAAOH,WAAW,CACdO,OADc,EAEdK,cAFc,EAGdV,mBAAmB,CAACD,eAAe,EAAhB,CAHL,CAAlB;AAKH,CANM","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst initialState = {\r\n    lastUpdate: 0,\r\n    light: false,\r\n    count: 0,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'TICK':\r\n            return {\r\n                ...state,\r\n                lastUpdate: action.lastUpdate,\r\n                light: !!action.light,\r\n            }\r\n        case 'INCREMENT':\r\n            return {\r\n                ...state,\r\n                count: state.count + 1,\r\n            }\r\n        case 'DECREMENT':\r\n            return {\r\n                ...state,\r\n                count: state.count - 1,\r\n            }\r\n        case 'RESET':\r\n            return {\r\n                ...state,\r\n                count: initialState.count,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeStore = (preloadedState = initialState) => {\r\n    return createStore(\r\n        reducer,\r\n        preloadedState,\r\n        composeWithDevTools(applyMiddleware())\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}