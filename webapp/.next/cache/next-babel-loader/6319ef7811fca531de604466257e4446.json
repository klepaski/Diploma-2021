{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport { Button, ButtonMin } from \"../../controls/Button/Button\";\nimport { Title } from \"../../Layouts/styledLayouts\";\nimport { Text } from \"../../StyledComponents/Text\";\nimport { WrapperHeight } from \"../../StyledComponents/Wrapper\";\nconst Calendar = dynamic(() => import('../../../components/controls/Calendar/Calendar'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../../components/controls/Calendar/Calendar')],\n    modules: ['../../../components/controls/Calendar/Calendar']\n  }\n});\nexport default (({\n  offer,\n  onChange,\n  isLoading,\n  onSave\n}) => {\n  let selectedArr = offer.calendar.map(item => item.date);\n  const {\n    0: selectedDays,\n    1: setSelected\n  } = useState(selectedArr);\n\n  const preOnSave = () => {\n    onSave(selectedDays);\n  };\n\n  console.log('offer.endDate', offer.endDate);\n  return __jsx(React.Fragment, null, __jsx(Title, {\n    mb: 40\n  }, \"Update your calendar\"), __jsx(Text, {\n    fz: 18,\n    mb: 20\n  }, \"Since client can book available days instantly, you should always keep your calendar up to date by blocking the days you can\\u2019t perform.\"), __jsx(Text, {\n    fz: 18,\n    bold: true\n  }, \"Let the clients know the dates you are availalbe below. \"), __jsx(Calendar, {\n    selectedDays: selectedDays,\n    setSelected: setSelected,\n    enabledAll: true,\n    endDate: offer.endDate\n  }), __jsx(Button, {\n    green: true,\n    loading: isLoading,\n    onClick: preOnSave,\n    mt: 70\n  }, \"Save\"));\n});","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/components/Offer/edit/Calendar.js"],"names":["React","useState","useContext","useEffect","dynamic","Button","ButtonMin","Title","Text","WrapperHeight","Calendar","ssr","offer","onChange","isLoading","onSave","selectedArr","calendar","map","item","date","selectedDays","setSelected","preOnSave","console","log","endDate"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,8BAAhC;AACA,SAAQC,KAAR,QAAoB,6BAApB;AACA,SAAQC,IAAR,QAAmB,6BAAnB;AACA,SAAQC,aAAR,QAA4B,gCAA5B;AACA,MAAMC,QAAQ,GAACN,OAAO,OAAC,OAAQ,gDAAR,CAAD,EAA2D;AAACO,EAAAA,GAAG,EAAC,KAAL;AAAA;AAAA,wCAAlD,gDAAkD;AAAA,cAAlD,gDAAkD;AAAA;AAAA,CAA3D,CAAtB;AAGA,gBAAe,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAD,KAA0C;AACrD,MAAIC,WAAW,GAAGJ,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAmBC,IAAI,IAAIA,IAAI,CAACC,IAAhC,CAAlB;AACA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAA8BrB,QAAQ,CAACe,WAAD,CAA5C;;AAEA,QAAMO,SAAS,GAAG,MAAM;AACpBR,IAAAA,MAAM,CAACM,YAAD,CAAN;AACH,GAFD;;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bb,KAAK,CAACc,OAAnC;AAEA,SACI,4BACI,MAAC,KAAD;AAAO,IAAA,EAAE,EAAE;AAAX,4BADJ,EAEI,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE,EAAV;AAAc,IAAA,EAAE,EAAE;AAAlB,oJAFJ,EAKI,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE,EAAV;AAAc,IAAA,IAAI;AAAlB,gEALJ,EAOI,MAAC,QAAD;AACI,IAAA,YAAY,EAAEL,YADlB;AAEI,IAAA,WAAW,EAAEC,WAFjB;AAGI,IAAA,UAAU,EAAE,IAHhB;AAII,IAAA,OAAO,EAAEV,KAAK,CAACc;AAJnB,IAPJ,EAaI,MAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,OAAO,EAAEZ,SAAvB;AAAkC,IAAA,OAAO,EAAES,SAA3C;AAAsD,IAAA,EAAE,EAAE;AAA1D,YAbJ,CADJ;AAiBH,CA3BD","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport dynamic from 'next/dynamic';\r\n\r\nimport {Button, ButtonMin} from \"../../controls/Button/Button\";\r\nimport {Title} from \"../../Layouts/styledLayouts\";\r\nimport {Text} from \"../../StyledComponents/Text\";\r\nimport {WrapperHeight} from \"../../StyledComponents/Wrapper\";\r\nconst Calendar=dynamic(import ('../../../components/controls/Calendar/Calendar'),{ssr:false});\r\n\r\n\r\nexport default ({offer, onChange, isLoading, onSave}) => {\r\n    let selectedArr = offer.calendar.map(item => item.date)\r\n    const [selectedDays, setSelected] = useState(selectedArr)\r\n\r\n    const preOnSave = () => {\r\n        onSave(selectedDays)\r\n    }\r\n\r\n    console.log('offer.endDate', offer.endDate)\r\n\r\n    return (\r\n        <>\r\n            <Title mb={40} >Update your calendar</Title>\r\n            <Text fz={18} mb={20} >\r\n                Since client can book available days instantly, you should always keep your calendar up to date by blocking the days you can’t perform.\r\n            </Text>\r\n            <Text fz={18} bold>Let the clients know the dates you are availalbe below. </Text>\r\n\r\n            <Calendar\r\n                selectedDays={selectedDays}\r\n                setSelected={setSelected}\r\n                enabledAll={true}\r\n                endDate={offer.endDate}\r\n            />\r\n            <Button green loading={isLoading} onClick={preOnSave} mt={70}>Save</Button>\r\n        </>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}