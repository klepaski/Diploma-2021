{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react'; // import Calendar from 'react-calendar-multiday'\n\nimport 'react-dates/initialize';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport moment from 'moment';\nimport './calendar.css';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { MainContext } from \"../../contextProviders/MainContext\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onDatesChange\", (startDate, endDate) => {\n      // this.setState({ startDate, endDate })\n      this.props.onChangeDates({\n        startDate: moment(startDate).toDate(),\n        endDate: moment(endDate).toDate()\n      });\n    });\n\n    _defineProperty(this, \"isSameDay\", (d1, d2) => {\n      return d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();\n    });\n\n    _defineProperty(this, \"isDisabledDay\", mDay => {\n      let isDisable = false;\n      this.props.calendar.map((item, key) => {\n        if (item.status == 'disabled' || item.status == 'reserved' && this.props.userId != item.clientId) {\n          if (this.isSameDay(mDay, moment(item.date).toDate())) {\n            isDisable = true;\n          }\n        }\n      });\n      return isDisable;\n    });\n\n    _defineProperty(this, \"isDayReservedByMe\", day => {\n      let mDay = moment(day).toDate();\n      let isReserved = false;\n      this.props.calendar.map((item, key) => {\n        if (item.status == 'reserved' && this.props.userId == item.clientId) {\n          if (this.isSameDay(mDay, moment(item.date).toDate())) {\n            isReserved = true;\n          }\n        }\n      });\n      return isReserved;\n    });\n\n    _defineProperty(this, \"isOutsideRange\", day => {\n      const todayDate = moment().toDate();\n      let mDay = moment(day).toDate();\n      let endDate = moment(this.props.endDateOffer).toDate();\n\n      if (this.isSameDay(new Date(todayDate), new Date(mDay))) {\n        return false;\n      }\n\n      if (mDay < todayDate || mDay > endDate) {\n        return true;\n      }\n\n      if (this.isDisabledDay(mDay)) {\n        return true;\n      }\n\n      return false;\n    });\n\n    _defineProperty(this, \"isDayBlocked\", day => {\n      // const todayDate = moment().toDate()\n      // let mDay = moment(day).toDate()\n      // let endDate = moment(this.props.endDate).toDate()\n      //\n      // if(mDay < endDate) {\n      //     return true\n      // }\n      return false;\n    });\n\n    this.state = {\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.calendar);\n    console.log(this.props.endDateOffer);\n    console.log(this.props.userId);\n  }\n\n  render() {\n    if (!false) return null;\n    let campaignStartDate = '23/10/2019';\n    let campaignEndDate = '29/10/2019';\n    let startDate = this.props.bookingDates.startDate ? moment(this.props.bookingDates.startDate) : null,\n        endDate = this.props.bookingDates.endDate ? moment(this.props.bookingDates.endDate) : null;\n    return __jsx(\"div\", {\n      className: \"z-wrapper-airnb-calendar\"\n    }, __jsx(DateRangePicker, {\n      startDate: startDate // momentPropTypes.momentObj or null,\n      ,\n      endDate: endDate // momentPropTypes.momentObj or null,\n      ,\n      onDatesChange: ({\n        startDate,\n        endDate\n      }) => this.onDatesChange(startDate, endDate),\n      startDateId: \"your_unique_start_date_id\" // PropTypes.string.isRequired,\n      ,\n      endDateId: \"your_unique_end_date_id\" // PropTypes.string.isRequired,\n      ,\n      focusedInput: this.state.focusedInput // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n      ,\n      onFocusChange: focusedInput => this.setState({\n        focusedInput\n      }) // PropTypes.func.isRequired,\n      ,\n      numberOfMonths: 1,\n      minimumNights: 0,\n      isOutsideRange: date => this.isOutsideRange(date),\n      isDayBlocked: date => this.isDayBlocked(date),\n      isDayHighlighted: date => this.isDayReservedByMe(date),\n      enableOutsideDays: true,\n      displayFormat: () => \"DD/MM/YYYY\"\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/git/webapp3/webapp/components/controls/Calendar/CalendarAirbnb.js"],"names":["React","useContext","DateRangePicker","SingleDatePicker","DayPickerRangeController","moment","MainContext","App","Component","constructor","props","startDate","endDate","onChangeDates","toDate","d1","d2","getFullYear","getMonth","getDate","mDay","isDisable","calendar","map","item","key","status","userId","clientId","isSameDay","date","day","isReserved","todayDate","endDateOffer","Date","isDisabledDay","state","focusedInput","componentDidMount","console","log","render","campaignStartDate","campaignEndDate","bookingDates","onDatesChange","setState","isOutsideRange","isDayBlocked","isDayReservedByMe"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\r\n// import Calendar from 'react-calendar-multiday'\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\r\nimport moment from 'moment'\r\nimport './calendar.css'\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport {MainContext} from \"../../contextProviders/MainContext\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            startDate: null,\r\n            endDate: null,\r\n            focusedInput: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.calendar)\r\n        console.log(this.props.endDateOffer)\r\n        console.log(this.props.userId)\r\n    }\r\n\r\n    onDatesChange = (startDate, endDate) => {\r\n        // this.setState({ startDate, endDate })\r\n        this.props.onChangeDates({\r\n            startDate: moment(startDate).toDate(),\r\n            endDate: moment(endDate).toDate()\r\n        })\r\n    }\r\n\r\n    isSameDay = (d1, d2) => {\r\n        return d1.getFullYear() === d2.getFullYear() &&\r\n            d1.getMonth() === d2.getMonth() &&\r\n            d1.getDate() === d2.getDate();\r\n    }\r\n\r\n    isDisabledDay = (mDay) => {\r\n        let isDisable = false\r\n        this.props.calendar.map((item, key) => {\r\n            if(item.status == 'disabled' ||\r\n                (item.status == 'reserved' && this.props.userId != item.clientId)\r\n            ) {\r\n                if(this.isSameDay(mDay, moment(item.date).toDate())) {\r\n                    isDisable = true\r\n                }\r\n            }\r\n        })\r\n        return isDisable;\r\n    }\r\n\r\n    isDayReservedByMe = day => {\r\n        let mDay = moment(day).toDate()\r\n        let isReserved = false\r\n        this.props.calendar.map((item, key) => {\r\n            if(item.status == 'reserved' && this.props.userId == item.clientId) {\r\n                if(this.isSameDay(mDay, moment(item.date).toDate())) {\r\n                    isReserved = true\r\n                }\r\n            }\r\n        })\r\n        return isReserved;\r\n    }\r\n\r\n    isOutsideRange = day => {\r\n        const todayDate = moment().toDate()\r\n        let mDay = moment(day).toDate()\r\n        let endDate = moment(this.props.endDateOffer).toDate()\r\n        if(this.isSameDay(new Date(todayDate), new Date(mDay))) {\r\n            return false\r\n        }\r\n        if(mDay < todayDate || mDay > endDate) {\r\n            return true\r\n        }\r\n        if(this.isDisabledDay(mDay)){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    isDayBlocked = day => {\r\n        // const todayDate = moment().toDate()\r\n        // let mDay = moment(day).toDate()\r\n        // let endDate = moment(this.props.endDate).toDate()\r\n        //\r\n        // if(mDay < endDate) {\r\n        //     return true\r\n        // }\r\n        return false\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        if(!process.browser) return null;\r\n\r\n        let campaignStartDate = '23/10/2019';\r\n        let campaignEndDate= '29/10/2019';\r\n\r\n\r\n        let startDate = this.props.bookingDates.startDate ? moment(this.props.bookingDates.startDate) : null,\r\n            endDate = this.props.bookingDates.endDate ? moment(this.props.bookingDates.endDate) : null\r\n\r\n\r\n\r\n        return (\r\n            <div className='z-wrapper-airnb-calendar'>\r\n                <DateRangePicker\r\n                    startDate={startDate} // momentPropTypes.momentObj or null,\r\n                    endDate={endDate} // momentPropTypes.momentObj or null,\r\n                    onDatesChange={({ startDate, endDate }) => this.onDatesChange(startDate, endDate )}\r\n                    startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\r\n                    endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\r\n                    focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n                    onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\r\n                    numberOfMonths={1}\r\n                    minimumNights={0}\r\n                    isOutsideRange={(date) => this.isOutsideRange(date)}\r\n                    isDayBlocked={(date) => this.isDayBlocked(date)}\r\n                    isDayHighlighted={date => this.isDayReservedByMe(date)}\r\n                    enableOutsideDays={true}\r\n                    displayFormat={() => \"DD/MM/YYYY\"}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}