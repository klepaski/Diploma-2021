{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport { logout } from '../utils/auth';\nexport const initAxios = cb => {\n  let token = cookie.get('token');\n\n  if (token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  }\n\n  axios.interceptors.response.use(async response => {\n    return response;\n  }, async error => {\n    const status = error.response.status;\n\n    if (status === 401) {\n      debugger;\n      delete axios.defaults.headers.common[\"Authorization\"];\n      logout();\n    }\n\n    if (status === 403) {\n      window.location.href = '/';\n    }\n\n    return _Promise.reject(error);\n  });\n  cb();\n};","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/config/axios.js"],"names":["axios","cookie","logout","initAxios","cb","token","get","defaults","headers","common","Authorization","interceptors","response","use","error","status","window","location","href","reject"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,MAAR,QAAqB,eAArB;AAEA,OAAO,MAAMC,SAAS,GAAIC,EAAD,IAAQ;AAC7B,MAAIC,KAAK,GAAGJ,MAAM,CAACK,GAAP,CAAW,OAAX,CAAZ;;AACA,MAAGD,KAAH,EAAU;AACNL,IAAAA,KAAK,CAACO,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA+C,UAASL,KAAM,EAA9D;AACH;;AAEDL,EAAAA,KAAK,CAACW,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACI,MAAOD,QAAP,IAAoB;AAAE,WAAOA,QAAP;AAAiB,GAD3C,EAEI,MAAOE,KAAP,IAAiB;AACb,UAAMC,MAAM,GAAGD,KAAK,CAACF,QAAN,CAAeG,MAA9B;;AACA,QAAIA,MAAM,KAAK,GAAf,EAAoB;AAChB;AACA,aAAOf,KAAK,CAACO,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACAP,MAAAA,MAAM;AACT;;AACD,QAAIa,MAAM,KAAK,GAAf,EAAoB;AAChBC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACH;;AACD,WAAO,SAAQC,MAAR,CAAeL,KAAf,CAAP;AACH,GAbL;AAeAV,EAAAA,EAAE;AACL,CAtBM","sourcesContent":["import axios from 'axios'\r\nimport cookie from 'js-cookie'\r\nimport {logout} from '../utils/auth'\r\n\r\nexport const initAxios = (cb) => {\r\n    let token = cookie.get('token');\r\n    if(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n    }\r\n\r\n    axios.interceptors.response.use(\r\n        async (response) => { return response },\r\n        async (error) => {\r\n            const status = error.response.status\r\n            if (status === 401) {\r\n                debugger\r\n                delete axios.defaults.headers.common[\"Authorization\"];\r\n                logout()\r\n            }\r\n            if (status === 403) {\r\n                window.location.href='/'\r\n            }\r\n            return Promise.reject(error)\r\n        })\r\n\r\n    cb()\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}