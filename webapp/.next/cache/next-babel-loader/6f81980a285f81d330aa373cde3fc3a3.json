{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nexport const useDetectDevice = () => {\n  const {\n    0: device,\n    1: setDevice\n  } = useState({\n    isMobile: false,\n    isTablet: false,\n    isMobileTablet: false,\n    isLaptop: false,\n    isDesktop: false,\n    isLaptopDesktop: false\n  });\n\n  function getSize() {\n    const width = window.innerWidth;\n    let isLaptopDesktop = false;\n    let isMobileTablet = false;\n    let type = '';\n\n    if (width <= 425) {\n      type = 'isMobile';\n    } else if (width <= 768) {\n      type = 'isTablet';\n    } else if (width <= 1444) {\n      type = 'isLaptop';\n    } else if (width <= 2560) {\n      type = 'isDesktop';\n    }\n\n    if (width < 769) {\n      isMobileTablet = true;\n    } else {\n      isLaptopDesktop = true;\n    }\n\n    return _objectSpread({}, device, {\n      [type]: true,\n      isMobileTablet: isMobileTablet,\n      isLaptopDesktop: isLaptopDesktop\n    });\n  }\n\n  useEffect(() => {\n    setDevice(getSize());\n\n    function handleResize() {\n      setDevice(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return device;\n};","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/lib/useDetectDevice.js"],"names":["React","useState","useEffect","useDetectDevice","device","setDevice","isMobile","isTablet","isMobileTablet","isLaptop","isDesktop","isLaptopDesktop","getSize","width","window","innerWidth","type","handleResize","addEventListener","removeEventListener"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,eAAe,GAAI,MAAM;AAClC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBJ,QAAQ,CAAC;AACjCK,IAAAA,QAAQ,EAAE,KADuB;AAEjCC,IAAAA,QAAQ,EAAE,KAFuB;AAGjCC,IAAAA,cAAc,EAAE,KAHiB;AAIjCC,IAAAA,QAAQ,EAAE,KAJuB;AAKjCC,IAAAA,SAAS,EAAE,KALsB;AAMjCC,IAAAA,eAAe,EAAE;AANgB,GAAD,CAApC;;AASA,WAASC,OAAT,GAAmB;AACf,UAAMC,KAAK,GAAGC,MAAM,CAACC,UAArB;AACA,QAAIJ,eAAe,GAAG,KAAtB;AACA,QAAIH,cAAc,GAAG,KAArB;AACA,QAAIQ,IAAI,GAAG,EAAX;;AACA,QAAGH,KAAK,IAAI,GAAZ,EAAiB;AACbG,MAAAA,IAAI,GAAG,UAAP;AACH,KAFD,MAEO,IAAIH,KAAK,IAAI,GAAb,EAAkB;AACrBG,MAAAA,IAAI,GAAG,UAAP;AACH,KAFM,MAEA,IAAIH,KAAK,IAAI,IAAb,EAAmB;AACtBG,MAAAA,IAAI,GAAG,UAAP;AACH,KAFM,MAEA,IAAIH,KAAK,IAAI,IAAb,EAAmB;AACtBG,MAAAA,IAAI,GAAG,WAAP;AACH;;AACD,QAAGH,KAAK,GAAG,GAAX,EAAgB;AACZL,MAAAA,cAAc,GAAG,IAAjB;AACH,KAFD,MAEO;AACHG,MAAAA,eAAe,GAAG,IAAlB;AACH;;AACD,6BAAWP,MAAX;AAAmB,OAACY,IAAD,GAAQ,IAA3B;AAAiCR,MAAAA,cAAc,EAAEA,cAAjD;AAAiEG,MAAAA,eAAe,EAAEA;AAAlF;AACH;;AAGDT,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,SAAS,CAACO,OAAO,EAAR,CAAT;;AACA,aAASK,YAAT,GAAwB;AACpBZ,MAAAA,SAAS,CAACO,OAAO,EAAR,CAAT;AACH;;AACDE,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMH,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACH,GAPQ,EAON,EAPM,CAAT;AASA,SAAOb,MAAP;AACH,CA3CM","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nexport const useDetectDevice =  () => {\r\n    const [device, setDevice] = useState({\r\n        isMobile: false,\r\n        isTablet: false,\r\n        isMobileTablet: false,\r\n        isLaptop: false,\r\n        isDesktop: false,\r\n        isLaptopDesktop: false\r\n    })\r\n\r\n    function getSize() {\r\n        const width = window.innerWidth;\r\n        let isLaptopDesktop = false;\r\n        let isMobileTablet = false;\r\n        let type = ''\r\n        if(width <= 425) {\r\n            type = 'isMobile'\r\n        } else if (width <= 768) {\r\n            type = 'isTablet'\r\n        } else if (width <= 1444) {\r\n            type = 'isLaptop'\r\n        } else if (width <= 2560) {\r\n            type = 'isDesktop'\r\n        }\r\n        if(width < 769) {\r\n            isMobileTablet = true\r\n        } else {\r\n            isLaptopDesktop = true\r\n        }\r\n        return {...device, [type]: true, isMobileTablet: isMobileTablet, isLaptopDesktop: isLaptopDesktop}\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setDevice(getSize())\r\n        function handleResize() {\r\n            setDevice(getSize())\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return device;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}