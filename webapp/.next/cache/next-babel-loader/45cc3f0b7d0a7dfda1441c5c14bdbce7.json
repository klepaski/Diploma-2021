{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Component } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nimport axios from \"axios\";\n\nfunction login({\n  token,\n  id\n}) {\n  localStorage.setItem('userId', id);\n  cookie.set('token', token, {\n    expires: 1\n  }); // Router.push('/profile')\n}\n\nfunction logout() {\n  console.log('logout user');\n  delete axios.defaults.headers.common[\"Authorization\"];\n  cookie.remove('token');\n  localStorage.removeItem('userId'); // to support logging out from all windows\n\n  window.localStorage.setItem('logout', _Date$now());\n  window.location.href = '/login';\n} // Gets the display name of a JSX component for dev tools\n\n\nconst getDisplayName = Component => Component.displayName || Component.name || 'Component';\n\nfunction withAuthSync(WrappedComponent) {\n  var _class, _temp;\n\n  return _temp = _class = class extends Component {\n    static async getInitialProps(ctx) {\n      const token = auth(ctx);\n      const componentProps = WrappedComponent.getInitialProps && (await WrappedComponent.getInitialProps(ctx));\n      return _objectSpread({}, componentProps, {\n        token\n      });\n    }\n\n    constructor(props) {\n      super(props);\n      this.syncLogout = this.syncLogout.bind(this);\n    }\n\n    componentDidMount() {\n      window.addEventListener('storage', this.syncLogout);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('storage', this.syncLogout);\n      window.localStorage.removeItem('logout');\n    }\n\n    syncLogout(event) {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!');\n        Router.push('/login');\n      }\n    }\n\n    render() {\n      return __jsx(WrappedComponent, this.props);\n    }\n\n  }, _defineProperty(_class, \"displayName\", `withAuthSync(${getDisplayName(WrappedComponent)})`), _temp;\n}\n\nfunction auth(ctx) {\n  const {\n    token\n  } = nextCookie(ctx);\n  /*\r\n   * If `ctx.req` is available it means we are on the server.\r\n   * Additionally if there's no token it means the user is not logged in.\r\n   */\n\n  if (ctx.req && !token) {\n    ctx.res.writeHead(302, {\n      Location: '/login'\n    });\n    ctx.res.end();\n  } // We already checked for server. This should only happen on client.\n\n\n  if (!token) {\n    Router.push('/login');\n  }\n\n  return token;\n}\n\nexport { login, logout, withAuthSync, auth };","map":{"version":3,"sources":["D:/git/webapp3/webapp/utils/auth.js"],"names":["Component","Router","nextCookie","cookie","axios","login","token","id","localStorage","setItem","set","expires","logout","console","log","defaults","headers","common","remove","removeItem","window","location","href","getDisplayName","displayName","name","withAuthSync","WrappedComponent","getInitialProps","ctx","auth","componentProps","constructor","props","syncLogout","bind","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","event","key","push","render","req","res","writeHead","Location","end"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\nimport Router from 'next/router'\r\nimport nextCookie from 'next-cookies'\r\nimport cookie from 'js-cookie'\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction login ({ token, id }) {\r\n    localStorage.setItem('userId', id)\r\n    cookie.set('token', token, { expires: 1 })\r\n    // Router.push('/profile')\r\n}\r\n\r\nfunction logout () {\r\n    console.log('logout user')\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    cookie.remove('token')\r\n    localStorage.removeItem('userId')\r\n    // to support logging out from all windows\r\n    window.localStorage.setItem('logout', Date.now())\r\n    window.location.href = '/login'\r\n}\r\n\r\n// Gets the display name of a JSX component for dev tools\r\nconst getDisplayName = Component =>\r\n    Component.displayName || Component.name || 'Component'\r\n\r\nfunction withAuthSync (WrappedComponent) {\r\n    return class extends Component {\r\n        static displayName = `withAuthSync(${getDisplayName(WrappedComponent)})`\r\n\r\n        static async getInitialProps (ctx) {\r\n            const token = auth(ctx)\r\n\r\n            const componentProps =\r\n                WrappedComponent.getInitialProps &&\r\n                (await WrappedComponent.getInitialProps(ctx))\r\n\r\n            return { ...componentProps, token }\r\n        }\r\n\r\n        constructor (props) {\r\n            super(props)\r\n\r\n            this.syncLogout = this.syncLogout.bind(this)\r\n        }\r\n\r\n        componentDidMount () {\r\n            window.addEventListener('storage', this.syncLogout)\r\n        }\r\n\r\n        componentWillUnmount () {\r\n            window.removeEventListener('storage', this.syncLogout)\r\n            window.localStorage.removeItem('logout')\r\n        }\r\n\r\n        syncLogout (event) {\r\n            if (event.key === 'logout') {\r\n                console.log('logged out from storage!')\r\n                Router.push('/login')\r\n            }\r\n        }\r\n\r\n        render () {\r\n            return <WrappedComponent {...this.props} />\r\n        }\r\n    }\r\n}\r\n\r\nfunction auth (ctx) {\r\n    const { token } = nextCookie(ctx)\r\n\r\n    /*\r\n     * If `ctx.req` is available it means we are on the server.\r\n     * Additionally if there's no token it means the user is not logged in.\r\n     */\r\n    if (ctx.req && !token) {\r\n        ctx.res.writeHead(302, { Location: '/login' })\r\n        ctx.res.end()\r\n    }\r\n\r\n    // We already checked for server. This should only happen on client.\r\n    if (!token) {\r\n        Router.push('/login')\r\n    }\r\n\r\n    return token\r\n}\r\n\r\nexport { login, logout, withAuthSync, auth }"]},"metadata":{},"sourceType":"module"}