{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { space } from 'styled-system';\nimport { device } from '../../lib/mediaDevice';\nimport { Footer } from '../Layouts/styledLayouts';\n\nfunction getWidthString(span) {\n  if (!span) return;\n  let width = span / 12 * 100;\n  return `width: ${width}%;`;\n}\n\nexport const Container = styled.div`\n  ${space};\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\nexport const ContainerDesktop = styled.div`\n  @media ${device.laptopDesktop} {\n    padding-top: 70px;\n    width: 90%;\n    margin: 0 auto;\n\n    ${p => p.isOffer && css`\n        width: 80%;\n        padding-top: 150px;\n        padding-bottom: 200px;\n      `}\n  }\n`;\nexport const Row = styled.div`\n  ${space};\n  // display: flex;\n  &::after {\n    content: '';\n    clear: both;\n    display: table;\n  }\n  margin-left: -10px;\n  margin-right: -10px;\n`;\nexport const Column = styled.div`\n  position: relative;\n  min-height: 1px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-bottom: 5px;\n  float: left;\n  ${({\n  xs\n}) => xs ? getWidthString(xs) : 'width: 100%;'};\n\n  @media only screen and (min-width: 768px) {\n    ${({\n  sm\n}) => sm && getWidthString(sm)};\n  }\n\n  @media only screen and (min-width: 992px) {\n    ${({\n  md\n}) => md && getWidthString(md)};\n  }\n\n  @media only screen and (min-width: 1200px) {\n    ${({\n  lg\n}) => lg && getWidthString(lg)};\n  }\n  ${space};\n`;\nexport const OnlyMobile = styled.div`\n  @media ${device.laptopDesktop} {\n    display: none;\n  }\n`;\nexport const OnlyDesktop = styled.div`\n  position: relative;\n\n  @media ${device.mobileTablet} {\n    display: none;\n  }\n`; // export const OfferFooterDesktop = styled.div`\n//   @media ${device.laptopDesktop} {\n//     position: fixed;\n//     width: 100%;\n//     left: 0;\n//     bottom: 0;\n//     background: #F2F2F2;\n//     height: 130px;\n//     padding-left: 10%;\n//\n//     > button {\n//       width: 340px;\n//     }\n//   }\n// `\n\nexport const FooterDesktop = styled.div`\n  @media ${device.laptopDesktop} {\n    position: fixed;\n    width: 100%;\n    left: 0;\n    bottom: 0;\n    background: #f2f2f2;\n    height: 100px;\n    padding-left: 10%;\n    padding-top: 27px;\n\n    ${Footer} {\n      width: 350px;\n      margin-top: 0;\n      padding-top: 0;\n    }\n\n    button {\n      width: 160px;\n      margin-top: 0;\n    }\n  }\n`;\nexport const FlexLeft = styled.div``;\nexport const FlexRight = styled.div``;\nexport const Flex = styled.div`\n  @media ${device.laptopDesktop} {\n    display: flex;\n\n    ${FlexLeft} {\n      width: 50%;\n      padding-right: 20px;\n    }\n\n    ${FlexRight} {\n      width: 75%;\n      padding-left: 20px;\n    }\n  }\n`;","map":{"version":3,"sources":["D:/git/webapp3/webapp/components/StyledComponents/Grid.js"],"names":["React","styled","css","space","device","Footer","getWidthString","span","width","Container","div","ContainerDesktop","laptopDesktop","p","isOffer","Row","Column","xs","sm","md","lg","OnlyMobile","OnlyDesktop","mobileTablet","FooterDesktop","FlexLeft","FlexRight","Flex"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,MAAT,QAAuB,0BAAvB;;AAEA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,MAAI,CAACA,IAAL,EAAW;AACX,MAAIC,KAAK,GAAID,IAAI,GAAG,EAAR,GAAc,GAA1B;AACA,SAAQ,UAASC,KAAM,IAAvB;AACD;;AAED,OAAO,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAI;IAChCP,KAAM;;;;;CADH;AAOP,OAAO,MAAMQ,gBAAgB,GAAGV,MAAM,CAACS,GAAI;WAChCN,MAAM,CAACQ,aAAc;;;;;MAKzBC,CAAD,IACAA,CAAC,CAACC,OAAF,IACAZ,GAAI;;;;OAIF;;CAZD;AAgBP,OAAO,MAAMa,GAAG,GAAGd,MAAM,CAACS,GAAI;IAC1BP,KAAM;;;;;;;;;CADH;AAYP,OAAO,MAAMa,MAAM,GAAGf,MAAM,CAACS,GAAI;;;;;;;IAO7B,CAAC;AAAEO,EAAAA;AAAF,CAAD,KAAaA,EAAE,GAAGX,cAAc,CAACW,EAAD,CAAjB,GAAwB,cAAgB;;;MAGrD,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIZ,cAAc,CAACY,EAAD,CAAK;;;;MAIrC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAIb,cAAc,CAACa,EAAD,CAAK;;;;MAIrC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAYA,EAAE,IAAId,cAAc,CAACc,EAAD,CAAK;;IAEvCjB,KAAM;CApBH;AAuBP,OAAO,MAAMkB,UAAU,GAAGpB,MAAM,CAACS,GAAI;WAC1BN,MAAM,CAACQ,aAAc;;;CADzB;AAKP,OAAO,MAAMU,WAAW,GAAGrB,MAAM,CAACS,GAAI;;;WAG3BN,MAAM,CAACmB,YAAa;;;CAHxB,C,CAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAGvB,MAAM,CAACS,GAAI;WAC7BN,MAAM,CAACQ,aAAc;;;;;;;;;;MAU1BP,MAAO;;;;;;;;;;;CAXN;AAwBP,OAAO,MAAMoB,QAAQ,GAAGxB,MAAM,CAACS,GAAI,EAA5B;AACP,OAAO,MAAMgB,SAAS,GAAGzB,MAAM,CAACS,GAAI,EAA7B;AACP,OAAO,MAAMiB,IAAI,GAAG1B,MAAM,CAACS,GAAI;WACpBN,MAAM,CAACQ,aAAc;;;MAG1Ba,QAAS;;;;;MAKTC,SAAU;;;;;CATT","sourcesContent":["import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { space } from 'styled-system'\r\nimport { device } from '../../lib/mediaDevice'\r\nimport { Footer } from '../Layouts/styledLayouts'\r\n\r\nfunction getWidthString(span) {\r\n  if (!span) return\r\n  let width = (span / 12) * 100\r\n  return `width: ${width}%;`\r\n}\r\n\r\nexport const Container = styled.div`\r\n  ${space};\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n`\r\nexport const ContainerDesktop = styled.div`\r\n  @media ${device.laptopDesktop} {\r\n    padding-top: 70px;\r\n    width: 90%;\r\n    margin: 0 auto;\r\n\r\n    ${(p) =>\r\n      p.isOffer &&\r\n      css`\r\n        width: 80%;\r\n        padding-top: 150px;\r\n        padding-bottom: 200px;\r\n      `}\r\n  }\r\n`\r\n\r\nexport const Row = styled.div`\r\n  ${space};\r\n  // display: flex;\r\n  &::after {\r\n    content: '';\r\n    clear: both;\r\n    display: table;\r\n  }\r\n  margin-left: -10px;\r\n  margin-right: -10px;\r\n`\r\n\r\nexport const Column = styled.div`\r\n  position: relative;\r\n  min-height: 1px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  margin-bottom: 5px;\r\n  float: left;\r\n  ${({ xs }) => (xs ? getWidthString(xs) : 'width: 100%;')};\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    ${({ sm }) => sm && getWidthString(sm)};\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    ${({ md }) => md && getWidthString(md)};\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    ${({ lg }) => lg && getWidthString(lg)};\r\n  }\r\n  ${space};\r\n`\r\n\r\nexport const OnlyMobile = styled.div`\r\n  @media ${device.laptopDesktop} {\r\n    display: none;\r\n  }\r\n`\r\nexport const OnlyDesktop = styled.div`\r\n  position: relative;\r\n\r\n  @media ${device.mobileTablet} {\r\n    display: none;\r\n  }\r\n`\r\n// export const OfferFooterDesktop = styled.div`\r\n//   @media ${device.laptopDesktop} {\r\n//     position: fixed;\r\n//     width: 100%;\r\n//     left: 0;\r\n//     bottom: 0;\r\n//     background: #F2F2F2;\r\n//     height: 130px;\r\n//     padding-left: 10%;\r\n//\r\n//     > button {\r\n//       width: 340px;\r\n//     }\r\n//   }\r\n// `\r\nexport const FooterDesktop = styled.div`\r\n  @media ${device.laptopDesktop} {\r\n    position: fixed;\r\n    width: 100%;\r\n    left: 0;\r\n    bottom: 0;\r\n    background: #f2f2f2;\r\n    height: 100px;\r\n    padding-left: 10%;\r\n    padding-top: 27px;\r\n\r\n    ${Footer} {\r\n      width: 350px;\r\n      margin-top: 0;\r\n      padding-top: 0;\r\n    }\r\n\r\n    button {\r\n      width: 160px;\r\n      margin-top: 0;\r\n    }\r\n  }\r\n`\r\n\r\nexport const FlexLeft = styled.div``\r\nexport const FlexRight = styled.div``\r\nexport const Flex = styled.div`\r\n  @media ${device.laptopDesktop} {\r\n    display: flex;\r\n\r\n    ${FlexLeft} {\r\n      width: 50%;\r\n      padding-right: 20px;\r\n    }\r\n\r\n    ${FlexRight} {\r\n      width: 75%;\r\n      padding-left: 20px;\r\n    }\r\n  }\r\n`\r\n"]},"metadata":{},"sourceType":"module"}