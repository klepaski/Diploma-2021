{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  @media \", \" {\\n    \", \" {\\n      margin-top: 25px;\\n      margin-bottom: 25px;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Router from 'next/router';\nimport { Button, ButtonMin } from '../../controls/Button/Button';\nimport { Title, WrapButton, TipWrapper, Label, CheckLabel, TipWrapper2 } from './../../Layouts/styledLayouts';\nimport { Text } from '../../StyledComponents/Text';\nimport { Divider } from '../../StyledComponents/Divider';\nimport styled from 'styled-components';\nimport { device } from '../../../lib/mediaDevice';\nimport { CheckGreen } from '../../StyledComponents/Icon';\n\nvar Review = function Review(_ref) {\n  var info = _ref.info;\n  return __jsx(Box, null, __jsx(Title, {\n    mb: 10\n  }, \"Now let\\u2019s review all requirements\"), __jsx(Label, {\n    mb: 15\n  }, \"Booking requirements set by a Client:\"), __jsx(CheckLabel, {\n    label: \"Profile photo (of you)\"\n  }), __jsx(CheckLabel, {\n    label: \"Confirmed email\"\n  }), __jsx(Divider, {\n    grey: true,\n    full: true,\n    mt: 25,\n    mb: 15\n  }), __jsx(Label, {\n    mb: 15\n  }, \"Programmer\\u2019s needs for the offer\"), info.regulations.map(function (item, key) {\n    if (item.value === 'no') return null;\n    return __jsx(CheckLabel, {\n      key: key,\n      label: item.title\n    });\n  }), __jsx(Divider, {\n    grey: true,\n    full: true,\n    mt: 25\n  }), __jsx(TipWrapper2, {\n    mt: 15,\n    mb: 10\n  }, __jsx(Text, {\n    fz: 12\n  }, \"Client will only be able to book instantly with you if they meet all these requirements and agree to your needs.\")));\n};\n\nexport default Review;\nvar Box = styled.div(_templateObject(), device.laptopDesktop, Divider);","map":{"version":3,"sources":["D:/4/диплом/webapp/components/Offer/regulations/Review.js"],"names":["React","Router","Button","ButtonMin","Title","WrapButton","TipWrapper","Label","CheckLabel","TipWrapper2","Text","Divider","styled","device","CheckGreen","Review","info","regulations","map","item","key","value","title","Box","div","laptopDesktop"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,8BAAlC;AACA,SACEC,KADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,UALF,EAMEC,WANF,QAOO,+BAPP;AAQA,SAASC,IAAT,QAAqB,6BAArB;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC3B,SACE,MAAC,GAAD,QACE,MAAC,KAAD;AAAO,IAAA,EAAE,EAAE;AAAX,8CADF,EAEE,MAAC,KAAD;AAAO,IAAA,EAAE,EAAE;AAAX,6CAFF,EAGE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC;AAAlB,IAHF,EAIE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAC;AAAlB,IAJF,EAQE,MAAC,OAAD;AAAS,IAAA,IAAI,MAAb;AAAc,IAAA,IAAI,MAAlB;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE;AAA/B,IARF,EASE,MAAC,KAAD;AAAO,IAAA,EAAE,EAAE;AAAX,6CATF,EAWGA,IAAI,CAACC,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAOC,GAAP,EAAe;AACnC,QAAID,IAAI,CAACE,KAAL,KAAe,IAAnB,EAAyB,OAAO,IAAP;AACzB,WAAO,MAAC,UAAD;AAAY,MAAA,GAAG,EAAED,GAAjB;AAAsB,MAAA,KAAK,EAAED,IAAI,CAACG;AAAlC,MAAP;AACD,GAHA,CAXH,EAiBE,MAAC,OAAD;AAAS,IAAA,IAAI,MAAb;AAAc,IAAA,IAAI,MAAlB;AAAmB,IAAA,EAAE,EAAE;AAAvB,IAjBF,EAkBE,MAAC,WAAD;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE;AAAzB,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAV,wHADF,CAlBF,CADF;AA2BD,CA5BD;;AA8BA,eAAeP,MAAf;AAEA,IAAMQ,GAAG,GAAGX,MAAM,CAACY,GAAV,oBACEX,MAAM,CAACY,aADT,EAEHd,OAFG,CAAT","sourcesContent":["import React from 'react'\r\nimport Router from 'next/router'\r\n\r\nimport { Button, ButtonMin } from '../../controls/Button/Button'\r\nimport {\r\n  Title,\r\n  WrapButton,\r\n  TipWrapper,\r\n  Label,\r\n  CheckLabel,\r\n  TipWrapper2,\r\n} from './../../Layouts/styledLayouts'\r\nimport { Text } from '../../StyledComponents/Text'\r\nimport { Divider } from '../../StyledComponents/Divider'\r\nimport styled from 'styled-components'\r\nimport { device } from '../../../lib/mediaDevice'\r\nimport { CheckGreen } from '../../StyledComponents/Icon'\r\n\r\nconst Review = ({ info }) => {\r\n  return (\r\n    <Box>\r\n      <Title mb={10}>Now let’s review all requirements</Title>\r\n      <Label mb={15}>Booking requirements set by a Client:</Label>\r\n      <CheckLabel label=\"Profile photo (of you)\" />\r\n      <CheckLabel label=\"Confirmed email\" />\r\n      {/*<CheckLabel label='Confirmed phone number'/>*/}\r\n      {/*<CheckLabel label='Payment information'/>*/}\r\n      {/*<ButtonMin transparentBlue mt={20} ml={50} >Review</ButtonMin>*/}\r\n      <Divider grey full mt={25} mb={15} />\r\n      <Label mb={15}>Programmer’s needs for the offer</Label>\r\n\r\n      {info.regulations.map((item, key) => {\r\n        if (item.value === 'no') return null\r\n        return <CheckLabel key={key} label={item.title} />\r\n      })}\r\n\r\n      {/*<ButtonMin transparentBlue mt={20} ml={50} >Edit</ButtonMin>*/}\r\n      <Divider grey full mt={25} />\r\n      <TipWrapper2 mt={15} mb={10}>\r\n        <Text fz={12}>\r\n          Client will only be able to book instantly with you if they meet all these requirements\r\n          and agree to your needs.\r\n        </Text>\r\n      </TipWrapper2>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Review\r\n\r\nconst Box = styled.div`\r\n  @media ${device.laptopDesktop} {\r\n    ${Divider} {\r\n      margin-top: 25px;\r\n      margin-bottom: 25px;\r\n    }\r\n  }\r\n`\r\n"]},"metadata":{},"sourceType":"module"}