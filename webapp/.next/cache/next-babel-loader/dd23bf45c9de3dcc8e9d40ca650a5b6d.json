{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport moment from 'moment/moment';\nimport styled, { css } from 'styled-components';\nimport { device } from '../../lib/mediaDevice';\nimport { MenuSettingsWrapper, MenuSettingsItem } from '../../components/Profile/styledProfileHeader';\nimport { Text } from '../StyledComponents/Text';\nimport { Input, TextArea } from '../controls/Input/Input';\nimport Select from '../controls/Select/Select';\nimport DatePicker from '../controls/DateTimePickers/Datepicker';\nimport { Wrapper } from '../StyledComponents/Wrapper';\nimport { listCountries, listLanguages } from '../../utils/countriesLanguages';\nimport { Divider } from '../StyledComponents/Divider';\nimport { Button } from '../controls/Button/Button';\nimport validate from '../../utils/validation';\nimport { CURRENCY } from '../../utils/data';\nimport { useDetectDevice } from '../../lib/useDetectDevice';\n\nconst EditProfile = props => {\n  const currentDevice = useDetectDevice();\n  const {\n    0: user,\n    1: setUser\n  } = useState(_objectSpread({}, props.user));\n  React.useEffect(() => {\n    setUser(props.user);\n  }, [props.user]);\n\n  const onChange = e => {\n    let {\n      name,\n      value,\n      required\n    } = e.target;\n    setUser(user => _objectSpread({}, user, {\n      [name]: value\n    })); // let error = validate(name, value, required)\n    // setErorrs(errors => ({...errors, [name]: error}))\n  };\n\n  let preOnChangeSelect = (name, value, required) => {\n    let obj = {\n      target: {\n        name: name,\n        value: value.value,\n        required: required\n      }\n    };\n    onChange(obj);\n  };\n\n  const onSave = () => {\n    // validate user\n    props.onSave(user);\n  };\n\n  const listGender = [{\n    value: 'Male',\n    label: 'Male'\n  }, {\n    value: 'Female',\n    label: 'Female'\n  }];\n  const listTimezone = [{\n    value: '(GMT -12:00) Eniwetok, Kwajalein',\n    label: '(GMT -12:00) Eniwetok, Kwajalein'\n  }, {\n    value: '(GMT -11:00) Midway Island, Samoa',\n    label: '(GMT -11:00) Midway Island, Samoa'\n  }, {\n    value: '(GMT -10:00) Hawaii',\n    label: '(GMT -10:00) Hawaii'\n  }, {\n    value: '(GMT -9:00) Alaska',\n    label: '(GMT -9:00) Alaska'\n  }, {\n    value: '(GMT -8:00) Pacific Time (US & Canada)',\n    label: '(GMT -8:00) Pacific Time (US & Canada)'\n  }, {\n    value: '(GMT -7:00) Mountain Time (US & Canada)',\n    label: '(GMT -7:00) Mountain Time (US & Canada)'\n  }, {\n    value: '(GMT -6:00) Central Time (US & Canada), Mexico City',\n    label: '(GMT -6:00) Central Time (US & Canada), Mexico City'\n  }, {\n    value: '(GMT -5:00) Eastern Time (US & Canada), Bogota, Lima',\n    label: '(GMT -5:00) Eastern Time (US & Canada), Bogota, Lima'\n  }, {\n    value: '(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz',\n    label: '(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz'\n  }, {\n    value: '(GMT -3:30) Newfoundland',\n    label: '(GMT -3:30) Newfoundland'\n  }, {\n    value: '(GMT -3:00) Brazil, Buenos Aires, Georgetown',\n    label: '(GMT -3:00) Brazil, Buenos Aires, Georgetown'\n  }, {\n    value: '(GMT -2:00) Mid-Atlantic',\n    label: '(GMT -2:00) Mid-Atlantic'\n  }, {\n    value: '(GMT -1:00) Azores, Cape Verde Islands',\n    label: '(GMT -1:00) Azores, Cape Verde Islands'\n  }, {\n    value: '(GMT) Western Europe Time, London, Lisbon, Casablanca',\n    label: '(GMT) Western Europe Time, London, Lisbon, Casablanca'\n  }, {\n    value: '(GMT +1:00) Brussels, Copenhagen, Madrid, Paris',\n    label: '(GMT +1:00) Brussels, Copenhagen, Madrid, Paris'\n  }, {\n    value: '(GMT +2:00) Kaliningrad, South Africa',\n    label: '(GMT +2:00) Kaliningrad, South Africa'\n  }, {\n    value: '(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg',\n    label: '(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg'\n  }, {\n    value: '(GMT +3:30) Tehran',\n    label: '(GMT +3:30) Tehran'\n  }, {\n    value: '(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi',\n    label: '(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi'\n  }, {\n    value: '(GMT +4:30) Kabul',\n    label: '(GMT +4:30) Kabul'\n  }, {\n    value: '(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent',\n    label: '(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent'\n  }, {\n    value: '(GMT +5:30) Bombay, Calcutta, Madras, New Delhi',\n    label: '(GMT +5:30) Bombay, Calcutta, Madras, New Delhi'\n  }, {\n    value: '(GMT +5:45) Kathmandu',\n    label: '(GMT +5:45) Kathmandu'\n  }, {\n    value: '(GMT +6:00) Almaty, Dhaka, Colombo',\n    label: '(GMT +6:00) Almaty, Dhaka, Colombo'\n  }, {\n    value: '(GMT +7:00) Bangkok, Hanoi, Jakarta',\n    label: '(GMT +7:00) Bangkok, Hanoi, Jakarta'\n  }, {\n    value: '(GMT +8:00) Beijing, Perth, Singapore, Hong Kong',\n    label: '(GMT +8:00) Beijing, Perth, Singapore, Hong Kong'\n  }, {\n    value: '(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk',\n    label: '(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk'\n  }, {\n    value: '(GMT +9:30) Adelaide, Darwin',\n    label: '(GMT +9:30) Adelaide, Darwin'\n  }, {\n    value: '(GMT +10:00) Eastern Australia, Guam, Vladivostok',\n    label: '(GMT +10:00) Eastern Australia, Guam, Vladivostok'\n  }, {\n    value: '(GMT +11:00) Magadan, Solomon Islands, New Caledonia',\n    label: '(GMT +11:00) Magadan, Solomon Islands, New Caledonia'\n  }, {\n    value: '(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka',\n    label: '(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka'\n  }]; // console.log(new Date(user.birthday))\n\n  console.log(user); // user.birthday = null\n\n  return __jsx(React.Fragment, null, __jsx(Text, {\n    bold: true,\n    fz: 18,\n    mb: 20\n  }, \"Your name\"), __jsx(Flex, null, __jsx(FlexLeft, null, __jsx(Input, {\n    type: 'text',\n    name: \"firstName\",\n    value: user.firstName,\n    onChange: onChange,\n    mb: 10,\n    placeholder: \"First name\"\n  })), __jsx(FlexRight, null, __jsx(Input, {\n    type: 'text',\n    name: \"lastName\",\n    value: user.lastName,\n    onChange: onChange,\n    mb: 10,\n    placeholder: \"Last name\"\n  }))), __jsx(Flex, null, __jsx(FlexLeft, null, __jsx(Text, {\n    bold: true,\n    fz: 14,\n    mb: 10\n  }, \"I am\"), __jsx(Select, {\n    options: listGender,\n    value: user.gender,\n    onChange: value => preOnChangeSelect('gender', value, false),\n    mb: 20,\n    placeholder: \"Gender\"\n  }), __jsx(Text, {\n    fz: 14,\n    mb: 30,\n    grey6: true\n  }, \"We use this data for analysis and never share it with other users\")), __jsx(FlexRight, null, __jsx(Text, {\n    bold: true,\n    fz: 14\n  }, \"Date of birth\", ' '), __jsx(Wrapper, {\n    mt: 10,\n    mb: 10,\n    width100: true\n  }, __jsx(DatePicker, {\n    selected: user.birthday ? new Date(user.birthday) : null,\n    maxDate: new Date(new Date().setFullYear(new Date().getFullYear() - 18)),\n    onChange: value => preOnChangeSelect('birthday', {\n      value: value\n    }, false),\n    showYearDropdown: true,\n    dateFormat: \"dd/MM/yyyy\",\n    withPortal: currentDevice.isMobileTablet ? true : false\n  })))), __jsx(Divider, {\n    grey: true,\n    mt: 28,\n    mb: 25\n  }), __jsx(BottomBtnBox, null, __jsx(Button, {\n    blue: true,\n    onClick: onSave,\n    disabled: props.loading\n  }, \"Save\")));\n};\n\nconst FlexLeft = styled.div``;\nconst FlexRight = styled.div``;\nconst Flex = styled.div`\n  @media ${device.laptopDesktop} {\n    display: flex;\n\n    ${FlexLeft} {\n      width: 50%;\n      padding-right: 20px;\n    }\n\n    ${FlexRight} {\n      width: 50%;\n      padding-left: 20px;\n    }\n  }\n`;\nconst BottomBtnBox = styled.div`\n  @media ${device.laptopDesktop} {\n    text-align: center;\n    button {\n      width: 200px;\n    }\n  }\n`;\nexport default EditProfile;","map":{"version":3,"sources":["D:/4/диплом/webapp/components/Profile/EditProfile.js"],"names":["React","useState","useContext","moment","styled","css","device","MenuSettingsWrapper","MenuSettingsItem","Text","Input","TextArea","Select","DatePicker","Wrapper","listCountries","listLanguages","Divider","Button","validate","CURRENCY","useDetectDevice","EditProfile","props","currentDevice","user","setUser","useEffect","onChange","e","name","value","required","target","preOnChangeSelect","obj","onSave","listGender","label","listTimezone","console","log","firstName","lastName","gender","birthday","Date","setFullYear","getFullYear","isMobileTablet","loading","FlexLeft","div","FlexRight","Flex","laptopDesktop","BottomBtnBox"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport moment from 'moment/moment'\r\nimport styled, { css } from 'styled-components'\r\nimport { device } from '../../lib/mediaDevice'\r\nimport { MenuSettingsWrapper, MenuSettingsItem } from '../../components/Profile/styledProfileHeader'\r\nimport { Text } from '../StyledComponents/Text'\r\nimport { Input, TextArea } from '../controls/Input/Input'\r\nimport Select from '../controls/Select/Select'\r\nimport DatePicker from '../controls/DateTimePickers/Datepicker'\r\nimport { Wrapper } from '../StyledComponents/Wrapper'\r\nimport { listCountries, listLanguages } from '../../utils/countriesLanguages'\r\nimport { Divider } from '../StyledComponents/Divider'\r\nimport { Button } from '../controls/Button/Button'\r\nimport validate from '../../utils/validation'\r\nimport { CURRENCY } from '../../utils/data'\r\nimport { useDetectDevice } from '../../lib/useDetectDevice'\r\n\r\nconst EditProfile = (props) => {\r\n  const currentDevice = useDetectDevice()\r\n  const [user, setUser] = useState({ ...props.user })\r\n  React.useEffect(() => {\r\n    setUser(props.user)\r\n  }, [props.user])\r\n\r\n  const onChange = (e) => {\r\n    let { name, value, required } = e.target\r\n    setUser((user) => ({ ...user, [name]: value }))\r\n    // let error = validate(name, value, required)\r\n    // setErorrs(errors => ({...errors, [name]: error}))\r\n  }\r\n\r\n  let preOnChangeSelect = (name, value, required) => {\r\n    let obj = {\r\n      target: {\r\n        name: name,\r\n        value: value.value,\r\n        required: required,\r\n      },\r\n    }\r\n    onChange(obj)\r\n  }\r\n\r\n  const onSave = () => {\r\n    // validate user\r\n    props.onSave(user)\r\n  }\r\n\r\n  const listGender = [\r\n    { value: 'Male', label: 'Male' },\r\n    { value: 'Female', label: 'Female' },\r\n  ]\r\n\r\n  const listTimezone = [\r\n    {\r\n      value: '(GMT -12:00) Eniwetok, Kwajalein',\r\n      label: '(GMT -12:00) Eniwetok, Kwajalein',\r\n    },\r\n    {\r\n      value: '(GMT -11:00) Midway Island, Samoa',\r\n      label: '(GMT -11:00) Midway Island, Samoa',\r\n    },\r\n    {\r\n      value: '(GMT -10:00) Hawaii',\r\n      label: '(GMT -10:00) Hawaii',\r\n    },\r\n    {\r\n      value: '(GMT -9:00) Alaska',\r\n      label: '(GMT -9:00) Alaska',\r\n    },\r\n    {\r\n      value: '(GMT -8:00) Pacific Time (US & Canada)',\r\n      label: '(GMT -8:00) Pacific Time (US & Canada)',\r\n    },\r\n    {\r\n      value: '(GMT -7:00) Mountain Time (US & Canada)',\r\n      label: '(GMT -7:00) Mountain Time (US & Canada)',\r\n    },\r\n    {\r\n      value: '(GMT -6:00) Central Time (US & Canada), Mexico City',\r\n      label: '(GMT -6:00) Central Time (US & Canada), Mexico City',\r\n    },\r\n    {\r\n      value: '(GMT -5:00) Eastern Time (US & Canada), Bogota, Lima',\r\n      label: '(GMT -5:00) Eastern Time (US & Canada), Bogota, Lima',\r\n    },\r\n    {\r\n      value: '(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz',\r\n      label: '(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz',\r\n    },\r\n    {\r\n      value: '(GMT -3:30) Newfoundland',\r\n      label: '(GMT -3:30) Newfoundland',\r\n    },\r\n    {\r\n      value: '(GMT -3:00) Brazil, Buenos Aires, Georgetown',\r\n      label: '(GMT -3:00) Brazil, Buenos Aires, Georgetown',\r\n    },\r\n    {\r\n      value: '(GMT -2:00) Mid-Atlantic',\r\n      label: '(GMT -2:00) Mid-Atlantic',\r\n    },\r\n    {\r\n      value: '(GMT -1:00) Azores, Cape Verde Islands',\r\n      label: '(GMT -1:00) Azores, Cape Verde Islands',\r\n    },\r\n    {\r\n      value: '(GMT) Western Europe Time, London, Lisbon, Casablanca',\r\n      label: '(GMT) Western Europe Time, London, Lisbon, Casablanca',\r\n    },\r\n    {\r\n      value: '(GMT +1:00) Brussels, Copenhagen, Madrid, Paris',\r\n      label: '(GMT +1:00) Brussels, Copenhagen, Madrid, Paris',\r\n    },\r\n    {\r\n      value: '(GMT +2:00) Kaliningrad, South Africa',\r\n      label: '(GMT +2:00) Kaliningrad, South Africa',\r\n    },\r\n    {\r\n      value: '(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg',\r\n      label: '(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg',\r\n    },\r\n    {\r\n      value: '(GMT +3:30) Tehran',\r\n      label: '(GMT +3:30) Tehran',\r\n    },\r\n    {\r\n      value: '(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi',\r\n      label: '(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi',\r\n    },\r\n    {\r\n      value: '(GMT +4:30) Kabul',\r\n      label: '(GMT +4:30) Kabul',\r\n    },\r\n    {\r\n      value: '(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent',\r\n      label: '(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent',\r\n    },\r\n    {\r\n      value: '(GMT +5:30) Bombay, Calcutta, Madras, New Delhi',\r\n      label: '(GMT +5:30) Bombay, Calcutta, Madras, New Delhi',\r\n    },\r\n    {\r\n      value: '(GMT +5:45) Kathmandu',\r\n      label: '(GMT +5:45) Kathmandu',\r\n    },\r\n    {\r\n      value: '(GMT +6:00) Almaty, Dhaka, Colombo',\r\n      label: '(GMT +6:00) Almaty, Dhaka, Colombo',\r\n    },\r\n    {\r\n      value: '(GMT +7:00) Bangkok, Hanoi, Jakarta',\r\n      label: '(GMT +7:00) Bangkok, Hanoi, Jakarta',\r\n    },\r\n    {\r\n      value: '(GMT +8:00) Beijing, Perth, Singapore, Hong Kong',\r\n      label: '(GMT +8:00) Beijing, Perth, Singapore, Hong Kong',\r\n    },\r\n    {\r\n      value: '(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk',\r\n      label: '(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk',\r\n    },\r\n    {\r\n      value: '(GMT +9:30) Adelaide, Darwin',\r\n      label: '(GMT +9:30) Adelaide, Darwin',\r\n    },\r\n    {\r\n      value: '(GMT +10:00) Eastern Australia, Guam, Vladivostok',\r\n      label: '(GMT +10:00) Eastern Australia, Guam, Vladivostok',\r\n    },\r\n    {\r\n      value: '(GMT +11:00) Magadan, Solomon Islands, New Caledonia',\r\n      label: '(GMT +11:00) Magadan, Solomon Islands, New Caledonia',\r\n    },\r\n    {\r\n      value: '(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka',\r\n      label: '(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka',\r\n    },\r\n  ]\r\n\r\n  // console.log(new Date(user.birthday))\r\n  console.log(user)\r\n  // user.birthday = null\r\n\r\n  return (\r\n    <>\r\n      <Text bold fz={18} mb={20}>\r\n        Your name\r\n      </Text>\r\n      <Flex>\r\n        <FlexLeft>\r\n          <Input\r\n            type={'text'}\r\n            name=\"firstName\"\r\n            value={user.firstName}\r\n            onChange={onChange}\r\n            mb={10}\r\n            placeholder=\"First name\"\r\n          />\r\n        </FlexLeft>\r\n        <FlexRight>\r\n          <Input\r\n            type={'text'}\r\n            name=\"lastName\"\r\n            value={user.lastName}\r\n            onChange={onChange}\r\n            mb={10}\r\n            placeholder=\"Last name\"\r\n          />\r\n        </FlexRight>\r\n      </Flex>\r\n\r\n      <Flex>\r\n        <FlexLeft>\r\n          <Text bold fz={14} mb={10}>\r\n            I am\r\n          </Text>\r\n          <Select\r\n            options={listGender}\r\n            value={user.gender}\r\n            onChange={(value) => preOnChangeSelect('gender', value, false)}\r\n            mb={20}\r\n            placeholder=\"Gender\"\r\n          />\r\n          <Text fz={14} mb={30} grey6>\r\n            We use this data for analysis and never share it with other users\r\n          </Text>\r\n        </FlexLeft>\r\n        <FlexRight>\r\n          <Text bold fz={14}>\r\n            Date of birth{' '}\r\n          </Text>\r\n          <Wrapper mt={10} mb={10} width100>\r\n            <DatePicker\r\n              selected={user.birthday ? new Date(user.birthday) : null}\r\n              maxDate={new Date(new Date().setFullYear(new Date().getFullYear() - 18))}\r\n              onChange={(value) => preOnChangeSelect('birthday', { value: value }, false)}\r\n              showYearDropdown\r\n              dateFormat=\"dd/MM/yyyy\"\r\n              withPortal={currentDevice.isMobileTablet ? true : false}\r\n            />\r\n          </Wrapper>\r\n        </FlexRight>\r\n      </Flex>\r\n\r\n      <Divider grey mt={28} mb={25} />\r\n\r\n      <BottomBtnBox>\r\n        <Button blue onClick={onSave} disabled={props.loading}>\r\n          Save\r\n        </Button>\r\n      </BottomBtnBox>\r\n    </>\r\n  )\r\n}\r\n\r\nconst FlexLeft = styled.div``\r\nconst FlexRight = styled.div``\r\n\r\nconst Flex = styled.div`\r\n  @media ${device.laptopDesktop} {\r\n    display: flex;\r\n\r\n    ${FlexLeft} {\r\n      width: 50%;\r\n      padding-right: 20px;\r\n    }\r\n\r\n    ${FlexRight} {\r\n      width: 50%;\r\n      padding-left: 20px;\r\n    }\r\n  }\r\n`\r\nconst BottomBtnBox = styled.div`\r\n  @media ${device.laptopDesktop} {\r\n    text-align: center;\r\n    button {\r\n      width: 200px;\r\n    }\r\n  }\r\n`\r\n\r\nexport default EditProfile\r\n"]},"metadata":{},"sourceType":"module"}