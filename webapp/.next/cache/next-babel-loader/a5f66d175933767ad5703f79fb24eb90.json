{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport cookie from 'js-cookie';\nimport { logout } from '../utils/auth';\nexport var initAxios = function initAxios(cb) {\n  var token = cookie.get('token');\n\n  if (token) {\n    axios.defaults.headers.common.Authorization = \"Bearer \".concat(token);\n  }\n\n  axios.interceptors.response.use(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(response) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", response);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(),\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(error) {\n      var status;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              status = error.response.status;\n\n              if (status === 401) {\n                delete axios.defaults.headers.common[\"Authorization\"];\n                debugger;\n                logout();\n              }\n\n              if (status === 403) {\n                window.location.href = '/';\n              }\n\n              return _context2.abrupt(\"return\", _Promise.reject(error));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n  cb();\n};","map":{"version":3,"sources":["D:/git/webapp3/webapp/config/axios.js"],"names":["axios","cookie","logout","initAxios","cb","token","get","defaults","headers","common","Authorization","interceptors","response","use","error","status","window","location","href","reject"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,MAAR,QAAqB,eAArB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAQ;AAC7B,MAAIC,KAAK,GAAGJ,MAAM,CAACK,GAAP,CAAW,OAAX,CAAZ;;AACA,MAAGD,KAAH,EAAU;AACNL,IAAAA,KAAK,CAACO,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,oBAAwDL,KAAxD;AACH;;AAEDL,EAAAA,KAAK,CAACW,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,6BACI,iBAAOD,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA,+CAA6BA,QAA7B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEI,kBAAOE,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,cAAAA,MADV,GACmBD,KAAK,CAACF,QAAN,CAAeG,MADlC;;AAEI,kBAAIA,MAAM,KAAK,GAAf,EAAoB;AAChB,uBAAOf,KAAK,CAACO,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACA;AACAP,gBAAAA,MAAM;AACT;;AACD,kBAAIa,MAAM,KAAK,GAAf,EAAoB;AAChBC,gBAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACH;;AATL,gDAUW,SAAQC,MAAR,CAAeL,KAAf,CAVX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ;;AAAA;AAAA;AAAA;AAAA;AAeAV,EAAAA,EAAE;AACL,CAtBM","sourcesContent":["import axios from 'axios'\r\nimport cookie from 'js-cookie'\r\nimport {logout} from '../utils/auth'\r\n\r\nexport const initAxios = (cb) => {\r\n    let token = cookie.get('token');\r\n    if(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n    }\r\n\r\n    axios.interceptors.response.use(\r\n        async (response) => { return response },\r\n        async (error) => {\r\n            const status = error.response.status\r\n            if (status === 401) {\r\n                delete axios.defaults.headers.common[\"Authorization\"];\r\n                debugger\r\n                logout()\r\n            }\r\n            if (status === 403) {\r\n                window.location.href='/'\r\n            }\r\n            return Promise.reject(error)\r\n        })\r\n\r\n    cb()\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}