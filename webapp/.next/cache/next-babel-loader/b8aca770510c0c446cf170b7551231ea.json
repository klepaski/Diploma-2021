{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { Title, Label, TipWrapper2, Footer, EventItemWrapper, EventItem } from \"./../../Layouts/styledLayouts\";\nimport { addOrRemove } from './../../../utils/utils';\nimport { Input } from \"../../controls/Input/Input\";\nimport { apiCreateEventType } from \"../../../actions/api\";\nexport default (function (_ref) {\n  var offer = _ref.offer,\n      onChange = _ref.onChange,\n      listEventTypes = _ref.listEventTypes;\n\n  var toggleItem = function toggleItem(item) {\n    var arr = addOrRemove(offer.type, item);\n    onChange({\n      target: {\n        name: 'type',\n        value: arr\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Title, {\n    mb: 25\n  }, \"My offer is perfect for\"), __jsx(EventItemWrapper, null, listEventTypes.map(function (item, key) {\n    return __jsx(EventItem, {\n      key: key,\n      active: offer.type.includes(item),\n      onClick: function onClick() {\n        return toggleItem(item);\n      }\n    }, item.type);\n  })));\n});","map":{"version":3,"sources":["D:/4/диплом/webapp — копия/components/Offer/creation/PerfectFor.js"],"names":["React","useState","useContext","Title","Label","TipWrapper2","Footer","EventItemWrapper","EventItem","addOrRemove","Input","apiCreateEventType","offer","onChange","listEventTypes","toggleItem","item","arr","type","target","name","value","map","key","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,SAAQC,KAAR,EAAeC,KAAf,EAAsBC,WAAtB,EAAmCC,MAAnC,EAA2CC,gBAA3C,EAA6DC,SAA7D,QAA6E,+BAA7E;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,KAAR,QAAoB,4BAApB;AACA,SAAQC,kBAAR,QAAiC,sBAAjC;AAEA,gBAAe,gBAAuC;AAAA,MAArCC,KAAqC,QAArCA,KAAqC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,cAAoB,QAApBA,cAAoB;;AAClD,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AACzB,QAAIC,GAAG,GAAGR,WAAW,CAACG,KAAK,CAACM,IAAP,EAAaF,IAAb,CAArB;AACAH,IAAAA,QAAQ,CAAE;AAACM,MAAAA,MAAM,EAAE;AAACC,QAAAA,IAAI,EAAE,MAAP;AAAeC,QAAAA,KAAK,EAAEJ;AAAtB;AAAT,KAAF,CAAR;AACH,GAHD;;AAKA,SACI,4BACI,MAAC,KAAD;AAAO,IAAA,EAAE,EAAE;AAAX,+BADJ,EAEI,MAAC,gBAAD,QACKH,cAAc,CAACQ,GAAf,CAAmB,UAACN,IAAD,EAAOO,GAAP;AAAA,WAChB,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,GAAhB;AAAqB,MAAA,MAAM,EAAEX,KAAK,CAACM,IAAN,CAAWM,QAAX,CAAoBR,IAApB,CAA7B;AAAwD,MAAA,OAAO,EAAE;AAAA,eAAMD,UAAU,CAACC,IAAD,CAAhB;AAAA;AAAjE,OAA2FA,IAAI,CAACE,IAAhG,CADgB;AAAA,GAAnB,CADL,CAFJ,CADJ;AAaH,CAnBD","sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nimport {Title, Label, TipWrapper2, Footer, EventItemWrapper, EventItem} from \"./../../Layouts/styledLayouts\";\r\nimport {addOrRemove} from './../../../utils/utils'\r\nimport {Input} from \"../../controls/Input/Input\";\r\nimport {apiCreateEventType} from \"../../../actions/api\";\r\n\r\nexport default ({offer, onChange, listEventTypes}) => {\r\n    const toggleItem = (item) => {\r\n        let arr = addOrRemove(offer.type, item);\r\n        onChange( {target: {name: 'type', value: arr}})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Title mb={25} >My offer is perfect for</Title>\r\n            <EventItemWrapper>\r\n                {listEventTypes.map((item, key) =>\r\n                    <EventItem key={key} active={offer.type.includes(item)} onClick={() => toggleItem(item)} >{item.type}</EventItem>\r\n                )}\r\n            </EventItemWrapper>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}