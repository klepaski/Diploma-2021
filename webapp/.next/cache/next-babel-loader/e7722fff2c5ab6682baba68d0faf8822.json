{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  min-height: 1px;\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  margin-bottom: 5px;\\n  float: left;\\n  \", \";\\n  \\n  @media only screen and (min-width: 768px) {\\n    \", \";\\n  }\\n  \\n  @media only screen and (min-width: 992px) {\\n    \", \";\\n  }\\n  \\n  @media only screen and (min-width: 1200px) {\\n    \", \";\\n  }\\n   \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \";\\n    // display: flex;\\n  &::after{\\n    content: \\\"\\\";\\n    clear: both;\\n    display: table;\\n  }\\n  margin-left: -10px;\\n  margin-right: -10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \"; \\n  margin-right: auto;\\n  margin-left: auto;\\n  padding-left: 5px;\\n  padding-right: 5px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { space } from 'styled-system';\n\nfunction getWidthString(span) {\n  if (!span) return;\n  var width = span / 12 * 100;\n  return \"width: \".concat(width, \"%;\");\n}\n\nexport var Container = styled.div(_templateObject(), space);\nexport var Row = styled.div(_templateObject2(), space);\nexport var Column = styled.div(_templateObject3(), function (_ref) {\n  var xs = _ref.xs;\n  return xs ? getWidthString(xs) : \"width: 100%;\";\n}, function (_ref2) {\n  var sm = _ref2.sm;\n  return sm && getWidthString(sm);\n}, function (_ref3) {\n  var md = _ref3.md;\n  return md && getWidthString(md);\n}, function (_ref4) {\n  var lg = _ref4.lg;\n  return lg && getWidthString(lg);\n}, space);","map":{"version":3,"sources":["D:/git/webapp3/webapp/components/StyledComponents/Grid.js"],"names":["React","styled","css","space","getWidthString","span","width","Container","div","Row","Column","xs","sm","md","lg"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAASC,KAAT,QAAsB,eAAtB;;AAEA,SAASC,cAAT,CAAyBC,IAAzB,EAA+B;AAC3B,MAAG,CAACA,IAAJ,EAAU;AACV,MAAIC,KAAK,GAAGD,IAAI,GAAG,EAAP,GAAY,GAAxB;AACA,0BAAiBC,KAAjB;AACH;;AAED,OAAO,IAAMC,SAAS,GAAGN,MAAM,CAACO,GAAV,oBAChBL,KADgB,CAAf;AAQP,OAAO,IAAMM,GAAG,GAAGR,MAAM,CAACO,GAAV,qBACVL,KADU,CAAT;AAYP,OAAO,IAAMO,MAAM,GAAGT,MAAM,CAACO,GAAV,qBAOf;AAAA,MAAGG,EAAH,QAAGA,EAAH;AAAA,SAAaA,EAAE,GAAGP,cAAc,CAACO,EAAD,CAAjB,GAAwB,cAAvC;AAAA,CAPe,EAUb;AAAA,MAAGC,EAAH,SAAGA,EAAH;AAAA,SAAYA,EAAE,IAAIR,cAAc,CAACQ,EAAD,CAAhC;AAAA,CAVa,EAcb;AAAA,MAAGC,EAAH,SAAGA,EAAH;AAAA,SAAYA,EAAE,IAAIT,cAAc,CAACS,EAAD,CAAhC;AAAA,CAda,EAkBb;AAAA,MAAGC,EAAH,SAAGA,EAAH;AAAA,SAAYA,EAAE,IAAIV,cAAc,CAACU,EAAD,CAAhC;AAAA,CAlBa,EAoBdX,KApBc,CAAZ","sourcesContent":["import React from 'react';\r\nimport styled, {css} from 'styled-components'\r\nimport { space } from 'styled-system'\r\n\r\nfunction getWidthString (span) {\r\n    if(!span) return;\r\n    let width = span / 12 * 100;\r\n    return `width: ${width}%;`\r\n}\r\n\r\nexport const Container = styled.div`\r\n    ${space}; \r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n`\r\n\r\nexport const Row = styled.div`\r\n    ${space};\r\n    // display: flex;\r\n  &::after{\r\n    content: \"\";\r\n    clear: both;\r\n    display: table;\r\n  }\r\n  margin-left: -10px;\r\n  margin-right: -10px;\r\n`\r\n\r\nexport const Column = styled.div`\r\n  position: relative;\r\n  min-height: 1px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  margin-bottom: 5px;\r\n  float: left;\r\n  ${({ xs }) => (xs ? getWidthString(xs) : \"width: 100%;\" ) };\r\n  \r\n  @media only screen and (min-width: 768px) {\r\n    ${({ sm }) => sm && getWidthString(sm)};\r\n  }\r\n  \r\n  @media only screen and (min-width: 992px) {\r\n    ${({ md }) => md && getWidthString(md)};\r\n  }\r\n  \r\n  @media only screen and (min-width: 1200px) {\r\n    ${({ lg }) => lg && getWidthString(lg)};\r\n  }\r\n   ${space};\r\n`\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}