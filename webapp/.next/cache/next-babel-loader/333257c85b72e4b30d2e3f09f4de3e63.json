{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from \"styled-components\";\nimport { space } from 'styled-system';\nimport spinner from '../../../static/img/spinner.gif';\nconst Spinner = styled.img`\n    width: 20px;\n    position: absolute;\n    right: 15px;\n    top: 13px;\n`;\nexport const StyledButton = styled.button`\n    ${space};\n    width: 100%;\n    height: 46px;\n    position: relative;\n    line-height: 46px;\n    text-align: center;\n    font-size: 15px;\n    border-radius: 5px;\n    background: rgba(0, 0, 0, 0.15);\n    \n    :disabled {\n       opacity: 0.6;\n       cursor: ${props => props.loadingg ? 'wait' : 'not-allowed'}\n     }\n   \n    ${props => props.white && css`\n      color: #2F364F;\n      background-color: #ffffff;\n    `}\n    ${props => props.transparentBlack && css`\n      color: #FFFFFF;\n      background: rgba(1, 1, 1, 0.7);\n      border: 2px solid #FFFFFF;\n    `}\n    ${props => props.green && css`\n      color: #ffffff;\n      background-color: #00C874;\n    `}\n    ${props => props.red && css`\n      color: #ffffff;\n      background-color: #FF0000;\n    `}\n    ${props => props.blue && css`\n      color: #ffffff;\n      background-color: #6436C7;\n    `}\n    ${props => props.transparentGreen && css`\n      color: #00C874;\n      background-color: #ffffff;\n      border: 1px solid #00C874;\n    `}\n    ${props => props.transparentBlue && css`\n      color: #6436C7;\n      background-color: #ffffff;\n      border: 1px solid #6436C7;\n    `}\n    ${props => props.transparentPurple && css`\n      color: #6436C7;\n      background-color: #ffffff;\n      border: 1px solid #6436C7;\n    `}\n    ${props => props.transparent && css`\n      background: transparent;\n      border: 1px solid rgba(0,0,0,0.3);\n    `}\n    ${props => props.inline && css`\n      display: inline-block;\n      width: auto;\n      padding: 0 35px;\n    `}\n    ${props => props.bold && css`\n      font-weight: 700;\n    `}\n   \n     ${props => props.w100 && css`\n      width: 100%!important;\n    `}\n`;\nconst ButtonMin = styled(StyledButton)`\n    ${space};\n    height: 32px;\n    line-height: 32px;\n    width: auto;\n    padding: 0 25px;\n`;\nconst ButtonMinHeight = styled(StyledButton)`\n    ${space};\n    height: 36px;\n    line-height: 32px;\n    width: 100%;\n    padding: 0 25px;\n    font-weight: 500;\n    \n    ${props => props.black && css`\n      color: #000000;\n    `}\n`;\n\nconst Button = (_ref) => {\n  let {\n    loading,\n    disabled\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"loading\", \"disabled\"]);\n\n  return __jsx(StyledButton, _extends({}, props, {\n    disabled: disabled || loading,\n    loadingg: loading\n  }), props.children, loading ? __jsx(Spinner, {\n    src: spinner,\n    alt: \"\"\n  }) : __jsx(React.Fragment, null));\n};\n\nexport { Button, ButtonMin, ButtonMinHeight };","map":{"version":3,"sources":["D:/git/webapp3/webapp/components/controls/Button/Button.js"],"names":["React","styled","css","space","spinner","Spinner","img","StyledButton","button","props","loadingg","white","transparentBlack","green","red","blue","transparentGreen","transparentBlue","transparentPurple","transparent","inline","bold","w100","ButtonMin","ButtonMinHeight","black","Button","loading","disabled","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAAQC,KAAR,QAAoB,eAApB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI;;;;;CAA3B;AAOA,OAAO,MAAMC,YAAY,GAAGN,MAAM,CAACO,MAAO;MACpCL,KAAM;;;;;;;;;;;;iBAYKM,KAAK,IAAIA,KAAK,CAACC,QAAN,GAAgB,MAAhB,GAAyB,aAAc;;;MAG3DD,KAAK,IACPA,KAAK,CAACE,KAAN,IACAT,GAAI;;;KAGF;MACAO,KAAK,IACPA,KAAK,CAACG,gBAAN,IACAV,GAAI;;;;KAIF;MACAO,KAAK,IACPA,KAAK,CAACI,KAAN,IACAX,GAAI;;;KAGF;MACAO,KAAK,IACPA,KAAK,CAACK,GAAN,IACAZ,GAAI;;;KAGF;MACAO,KAAK,IACPA,KAAK,CAACM,IAAN,IACAb,GAAI;;;KAGF;MACAO,KAAK,IACPA,KAAK,CAACO,gBAAN,IACAd,GAAI;;;;KAIF;MACAO,KAAK,IACPA,KAAK,CAACQ,eAAN,IACAf,GAAI;;;;KAIF;MACAO,KAAK,IACPA,KAAK,CAACS,iBAAN,IACAhB,GAAI;;;;KAIF;MACAO,KAAK,IACPA,KAAK,CAACU,WAAN,IACAjB,GAAI;;;KAGF;MACAO,KAAK,IACPA,KAAK,CAACW,MAAN,IACAlB,GAAI;;;;KAIF;MACAO,KAAK,IACPA,KAAK,CAACY,IAAN,IACAnB,GAAI;;KAEF;;OAECO,KAAK,IACRA,KAAK,CAACa,IAAN,IACApB,GAAI;;KAEF;CA3FC;AA8FP,MAAMqB,SAAS,GAAGtB,MAAM,CAACM,YAAD,CAAe;MACjCJ,KAAM;;;;;CADZ;AAQA,MAAMqB,eAAe,GAAGvB,MAAM,CAACM,YAAD,CAAe;MACvCJ,KAAM;;;;;;;MAONM,KAAK,IACPA,KAAK,CAACgB,KAAN,IACAvB,GAAI;;KAEF;CAZN;;AAeA,MAAMwB,MAAM,GAAG;AAAA,MAAC;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAD;AAAA,MAAwBnB,KAAxB;;AAAA,SACf,MAAC,YAAD,eAAkBA,KAAlB;AAAyB,IAAA,QAAQ,EAAEmB,QAAQ,IAAID,OAA/C;AAAwD,IAAA,QAAQ,EAAEA;AAAlE,MACKlB,KAAK,CAACoB,QADX,EAEKF,OAAO,GAAG,MAAC,OAAD;AAAS,IAAA,GAAG,EAAEvB,OAAd;AAAuB,IAAA,GAAG,EAAC;AAA3B,IAAH,GAAqC,2BAFjD,CADe;AAAA,CAAf;;AAOA,SAAQsB,MAAR,EAAgBH,SAAhB,EAA2BC,eAA3B","sourcesContent":["import React from 'react'\r\nimport styled, {css} from \"styled-components\";\r\nimport {space} from 'styled-system'\r\nimport spinner from '../../../static/img/spinner.gif'\r\n\r\nconst Spinner = styled.img`\r\n    width: 20px;\r\n    position: absolute;\r\n    right: 15px;\r\n    top: 13px;\r\n`\r\n\r\nexport const StyledButton = styled.button`\r\n    ${space};\r\n    width: 100%;\r\n    height: 46px;\r\n    position: relative;\r\n    line-height: 46px;\r\n    text-align: center;\r\n    font-size: 15px;\r\n    border-radius: 5px;\r\n    background: rgba(0, 0, 0, 0.15);\r\n    \r\n    :disabled {\r\n       opacity: 0.6;\r\n       cursor: ${props => props.loadingg? 'wait' : 'not-allowed'}\r\n     }\r\n   \r\n    ${props =>\r\n    props.white &&\r\n    css`\r\n      color: #2F364F;\r\n      background-color: #ffffff;\r\n    `}\r\n    ${props =>\r\n    props.transparentBlack &&\r\n    css`\r\n      color: #FFFFFF;\r\n      background: rgba(1, 1, 1, 0.7);\r\n      border: 2px solid #FFFFFF;\r\n    `}\r\n    ${props =>\r\n    props.green &&\r\n    css`\r\n      color: #ffffff;\r\n      background-color: #00C874;\r\n    `}\r\n    ${props =>\r\n    props.red &&\r\n    css`\r\n      color: #ffffff;\r\n      background-color: #FF0000;\r\n    `}\r\n    ${props =>\r\n    props.blue &&\r\n    css`\r\n      color: #ffffff;\r\n      background-color: #6436C7;\r\n    `}\r\n    ${props =>\r\n    props.transparentGreen &&\r\n    css`\r\n      color: #00C874;\r\n      background-color: #ffffff;\r\n      border: 1px solid #00C874;\r\n    `}\r\n    ${props =>\r\n    props.transparentBlue &&\r\n    css`\r\n      color: #6436C7;\r\n      background-color: #ffffff;\r\n      border: 1px solid #6436C7;\r\n    `}\r\n    ${props =>\r\n    props.transparentPurple &&\r\n    css`\r\n      color: #6436C7;\r\n      background-color: #ffffff;\r\n      border: 1px solid #6436C7;\r\n    `}\r\n    ${props =>\r\n    props.transparent &&\r\n    css`\r\n      background: transparent;\r\n      border: 1px solid rgba(0,0,0,0.3);\r\n    `}\r\n    ${props =>\r\n    props.inline &&\r\n    css`\r\n      display: inline-block;\r\n      width: auto;\r\n      padding: 0 35px;\r\n    `}\r\n    ${props =>\r\n    props.bold &&\r\n    css`\r\n      font-weight: 700;\r\n    `}\r\n   \r\n     ${props =>\r\n    props.w100 &&\r\n    css`\r\n      width: 100%!important;\r\n    `}\r\n`;\r\n\r\nconst ButtonMin = styled(StyledButton)`\r\n    ${space};\r\n    height: 32px;\r\n    line-height: 32px;\r\n    width: auto;\r\n    padding: 0 25px;\r\n`;\r\n\r\nconst ButtonMinHeight = styled(StyledButton)`\r\n    ${space};\r\n    height: 36px;\r\n    line-height: 32px;\r\n    width: 100%;\r\n    padding: 0 25px;\r\n    font-weight: 500;\r\n    \r\n    ${props =>\r\n    props.black &&\r\n    css`\r\n      color: #000000;\r\n    `}\r\n`;\r\n\r\nconst Button = ({loading, disabled, ...props}) =>\r\n<StyledButton {...props} disabled={disabled || loading} loadingg={loading}>\r\n    {props.children}\r\n    {loading ? <Spinner src={spinner} alt=\"\"/> : <></> }\r\n</StyledButton>\r\n\r\n\r\nexport {Button, ButtonMin, ButtonMinHeight}"]},"metadata":{},"sourceType":"module"}